# Generated by Django 2.1.5 on 2019-02-28 20:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0011_remove_user_address'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('visit_report', '0005_auto_20190225_2252'),
    ]

    operations = [
        migrations.CreateModel(
            name='Face',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation', models.PositiveIntegerField(default=2, verbose_name='Evaluation')),
                ('comment', models.CharField(blank=True, max_length=200, null=True, verbose_name='Commentaire')),
                ('insulation_nature', models.CharField(blank=True, choices=[('synthetic', 'Synthétique'), ('mineral', 'Minéral'), ('biosourced', 'Biosourcé'), ('undetermined', 'Non déterminé')], max_length=20, null=True, verbose_name="Nature de l'isolant")),
                ('nature', models.CharField(choices=[('wall', 'Mur'), ('floor', 'Sol'), ('roof', 'Toiture'), ('window', 'Fenêtre')], max_length=20, verbose_name='Type')),
                ('data', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Autres données')),
            ],
            options={
                'verbose_name': 'Paroi',
            },
        ),
        migrations.CreateModel(
            name='FinancialAid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(default=0, verbose_name='Montant')),
                ('selected', models.BooleanField(default=False, verbose_name='Sélectionnée')),
                ('custom_label', models.CharField(blank=True, max_length=50, null=True, verbose_name='Label personnalisé')),
            ],
            options={
                'verbose_name': 'Aide financière',
                'verbose_name_plural': 'Aides financières',
            },
        ),
        migrations.CreateModel(
            name='Financing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(default=0, verbose_name='Montant')),
                ('selected', models.BooleanField(default=False, verbose_name='Sélectionné')),
            ],
            options={
                'verbose_name': 'Financement',
            },
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nature', models.CharField(choices=[('full', 'Complet'), ('partial', 'Partiel')], max_length=20, verbose_name='Type')),
                ('custom_summary', models.CharField(blank=True, max_length=500, null=True, verbose_name='Résumé personnalisé')),
            ],
            options={
                'verbose_name': 'Scénario',
            },
        ),
        migrations.CreateModel(
            name='ScenarioSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Résumé du scénario',
                'verbose_name_plural': 'Résumés des scénarii',
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, choices=[('estimation', 'Réalisation du devis'), ('estimation_signature', 'Signature du devis'), ('work_beginning', 'Début des travaux'), ('work_end', 'Fin des travaux')], max_length=25, null=True, verbose_name='Catégorie')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordre')),
                ('nature', models.CharField(choices=[('simple', 'Simple'), ('info', 'Avec infos supplémentaires'), ('contact', 'Avec coordonnées de contact'), ('field', 'Avec saisie libre')], default='regular', max_length=25, verbose_name='Type')),
                ('data', models.TextField(blank=True, null=True, verbose_name='Autres données')),
            ],
            options={
                'verbose_name': 'Etape',
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nature', models.CharField(choices=[('heating_main', 'Production de chauffage'), ('emitter', 'Emetteur'), ('controler', 'Régulation'), ('hot_water', "Production d'eau chaude"), ('heating_extra', "Chauffage d'appoint"), ('ventilation', 'Ventilation'), ('photovoltaic', 'Photovoltaïque')], max_length=20, verbose_name='Type')),
                ('data', models.TextField(blank=True, null=True, verbose_name='Autres données')),
            ],
            options={
                'verbose_name': 'Système',
            },
        ),
        migrations.CreateModel(
            name='VisitReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fiscal_income', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True, verbose_name='Revenu fiscal de référence')),
                ('consumption_information_source', models.CharField(blank=True, choices=[('bill', 'Facture'), ('mineral', 'DPE'), ('declarative', 'Déclaratif'), ('estimative', 'Estimatif'), ('unavailable', 'Non disponible')], max_length=30, null=True, verbose_name="Source d'information")),
                ('consumption_heating', models.PositiveIntegerField(default=0, verbose_name='Chauffage')),
                ('consumption_hot_water', models.PositiveIntegerField(default=0, verbose_name='Eau chaude sanitaire')),
                ('consumption_heating_hot_water', models.BooleanField(default=False, verbose_name='Chauffage et eau chaude groupés')),
                ('consumption_electricity', models.PositiveIntegerField(default=0, verbose_name='Electricité hors chauffage')),
                ('dpe', models.CharField(choices=[('a', 'Classe A'), ('b', 'Classe B'), ('c', 'Classe C'), ('d', 'Classe D'), ('e', 'Classe E'), ('-', 'Non connu')], default='-', max_length=2, verbose_name='DPE')),
                ('consumption_comment', models.TextField(blank=True, null=True, verbose_name="Commentaire sur consommations d'énergie")),
                ('house_inventory_comment', models.TextField(blank=True, null=True, verbose_name="Commentaire sur l'état des lieux du logement")),
                ('conclusion_comment', models.TextField(blank=True, null=True, verbose_name='Commentaire sur la conclusion du rapport')),
                ('advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='report', to=settings.AUTH_USER_MODEL, verbose_name='Conseiller')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='report', to='accounts.Group', verbose_name='Structure signataire')),
            ],
            options={
                'verbose_name': 'Rapport de visite',
                'verbose_name_plural': 'Rapports de visite',
            },
        ),
        migrations.CreateModel(
            name='WorkRecommandation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('envelope', 'Enveloppe'), ('system', 'Système'), ('other', 'Autres')], max_length=25, verbose_name='Catégorie')),
                ('nature', models.CharField(choices=[('roof_insulation', 'Isolation de la toiture'), ('wall_insulation', 'Isolation des murs'), ('floor_insulation', 'Isolation du plancher bas'), ('carpentry_replacement', 'Remplacement des menuiseries'), ('ventilation', 'VMC'), ('heating_production', 'Production de chaleur'), ('hot_water_production', "Production d'eau chaude sanitaire"), ('heating_control', 'Régulation du système de chauffage'), ('photovoltaic', 'Installation de panneaux solaires photovoltaïques'), ('eco_gestures', 'Eco gestes')], max_length=50, verbose_name='Type')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nom')),
                ('selected', models.BooleanField(default=False, verbose_name='Sélectionné')),
                ('cost', models.PositiveIntegerField(default=0, verbose_name='Coût estimé')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Commentaires')),
                ('selected_scenarion_alt', models.BooleanField(default=False, verbose_name='Sélectionné dans le scénario partiel')),
                ('data', models.TextField(blank=True, null=True, verbose_name='Autres données')),
                ('report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_recommendation', to='visit_report.VisitReport', verbose_name='Rapport')),
            ],
            options={
                'verbose_name': 'Recommendation de travaux',
            },
        ),
        migrations.AddField(
            model_name='housing',
            name='groups',
            field=models.ManyToManyField(to='accounts.Group', verbose_name='Structures attachées à ce logement'),
        ),
        migrations.AddField(
            model_name='visitreport',
            name='housing',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='report', to='visit_report.Housing', verbose_name='Logement associé'),
        ),
        migrations.AddField(
            model_name='system',
            name='report',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='system', to='visit_report.VisitReport', verbose_name='Rapport'),
        ),
        migrations.AddField(
            model_name='step',
            name='report',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='step', to='visit_report.VisitReport', verbose_name='Rapport'),
        ),
        migrations.AddField(
            model_name='scenariosummary',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='visit_report.VisitReport', verbose_name='Scénario'),
        ),
        migrations.AddField(
            model_name='scenario',
            name='report',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scenario', to='visit_report.VisitReport', verbose_name='Rapport'),
        ),
        migrations.AddField(
            model_name='financing',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='visit_report.VisitReport', verbose_name='Scénario'),
        ),
        migrations.AddField(
            model_name='financialaid',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='visit_report.VisitReport', verbose_name='Scénario'),
        ),
        migrations.AddField(
            model_name='face',
            name='report',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='face', to='visit_report.VisitReport', verbose_name='Rapport'),
        ),
    ]
