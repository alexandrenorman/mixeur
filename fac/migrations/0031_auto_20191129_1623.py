# Generated by Django 2.2.7 on 2019-11-29 15:23

import core.models
import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0003_auto_20191003_1408'),
        ('fac', '0030_auto_20191128_1051'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(max_length=255, verbose_name="Nom du modèle de l'action")),
                ('description', models.TextField(blank=True, default='', verbose_name="Description de l'action")),
                ('order', models.PositiveSmallIntegerField(null=True, verbose_name='Ordre')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='FolderModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nom du modèle de document')),
                ('groups', models.ManyToManyField(blank=True, related_name='folder_models', to='accounts.Group')),
            ],
            options={
                'verbose_name': 'Modèle de dossier',
                'verbose_name_plural': 'Modèles de dossier',
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nom')),
                ('date_start', models.DateField(default=datetime.date.today, verbose_name='Début de période')),
                ('date_end', models.DateField(default=datetime.date.today, verbose_name='Date de fin de période')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeValorization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nom')),
                ('groups', models.ManyToManyField(related_name='type_valorizations', to='accounts.Group')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Valorization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('act', models.BooleanField(verbose_name="Payer à l'acte")),
                ('amount', models.PositiveIntegerField(verbose_name='Montant')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='valorizations', to='fac.Period', verbose_name='Période')),
                ('type_valorization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='valorization', to='fac.TypeValorization', verbose_name='Type de valorisation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nom')),
                ('order', models.PositiveSmallIntegerField(null=True, verbose_name='Ordre')),
                ('folder_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statues', to='fac.FolderModel')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nom')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objectifs', to='accounts.Group')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objectifs', to='fac.Period', verbose_name='Période')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fac.Status')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('indicator_type', models.CharField(choices=[('duration', 'Durée'), ('numbers', 'Nombre'), ('at_least_one', 'Au moins un')], max_length=15, verbose_name="Type de l'indicateur")),
                ('action_models', models.ManyToManyField(related_name='indicators', to='fac.ActionModel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='foldermodel',
            name='type_valorizations',
            field=models.ManyToManyField(related_name='folder_models', to='fac.TypeValorization'),
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('description', models.TextField(verbose_name='Description')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folders', to='fac.FolderModel')),
                ('owning_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folders', to='accounts.Group', verbose_name='Groupe propriétaire')),
                ('type_valorization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folders', to='fac.TypeValorization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nom du modèle de catégorie')),
                ('order', models.PositiveSmallIntegerField(null=True, verbose_name='Ordre')),
                ('folder_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='fac.FolderModel')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='actionmodel',
            name='category_default',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='default_actions', to='fac.CategoryModel'),
        ),
        migrations.AddField(
            model_name='actionmodel',
            name='category_optionnal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='optionnal_actions', to='fac.CategoryModel'),
        ),
        migrations.AddField(
            model_name='actionmodel',
            name='trigger_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='action_models', to='fac.Status'),
        ),
        migrations.AddField(
            model_name='actionmodel',
            name='valorizations',
            field=models.ManyToManyField(related_name='action_models', to='fac.Valorization', verbose_name='Valorisations'),
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('duration', models.PositiveIntegerField(verbose_name='Durée de la tâche en heure')),
                ('date', models.DateField(default=datetime.date.today)),
                ('done', models.BooleanField(default=False, verbose_name='Réalisé')),
                ('message', models.TextField(verbose_name='Message')),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='fac.Folder')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='fac.ActionModel')),
                ('valorization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actions', to='fac.Valorization')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
