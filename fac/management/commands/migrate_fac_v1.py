from django.core.management.base import BaseCommand

from django.db import transaction

from dateutil.parser import isoparse

from fac.models import (
    Contact,
    Organization,
    Note,
    MemberOfOrganization,
    ContactsDuplicate,
    List,
    Tag,
    Reminder,
)

from accounts.models import (
    Group,
    User,
)


class Command(BaseCommand):
    help = "Export organizations and contacts for mixeur"
    
    @transaction.atomic
    def handle(self, *args, **options):

        hespul_group = Group.objects.get(pk='11')  # 11
        alte_group = Group.objects.get(pk='20')  # 20
        hespul_user = User.objects.get(pk='227')  # 227 Pauline
        alte_user = User.objects.get(pk='263')  # 263 Matthieu

        def civility(ori):
            return {'M.': 'M.', 'Mme': 'Mme', '-': '-', 'Mlle': 'Mme'}[ori]

        def type_of_organization(too):
            return {'AgenceLocale':'UNKNOWN','Association':'Association','AssociationIERA':'Association','Bailleur':'BailleurSocial','Collectivity':'Collectivite','Company':'Entreprise','cooperative':'UNKNOWN','Culture':'UNKNOWN','Education':'UNKNOWN','Media':'Media','Syndicat':'SyndicatEnergie','UNKNOWN':'UNKNOWN'}[too]



        oaddress = "  ".strip() + ",  Valence"
        if oaddress == "  ,  ":
            oaddress = ""

        o224 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="ADIL26",
            description="",
            reference="",
            address=oaddress,
            town="Valence",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o224.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o224.tags.add(t33)
                

        oaddress = "  ".strip() + ",  Chambéry"
        if oaddress == "  ,  ":
            oaddress = ""

        o190 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="ADIL73",
            description="",
            reference="",
            address=oaddress,
            town="Chambéry",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o190.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o190.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Saint Martin d'Hères"
        if oaddress == "  ,  ":
            oaddress = ""

        o238 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="AGEDEN",
            description="",
            reference="",
            address=oaddress,
            town="Saint Martin d'Hères",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o238.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o238.tags.add(t33)
                

        oaddress = "  ".strip() + ",  Chambéry"
        if oaddress == "  ,  ":
            oaddress = ""

        o195 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Agence Ecomobilité",
            description="",
            reference="",
            address=oaddress,
            town="Chambéry",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o195.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o195.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Aubenas"
        if oaddress == "  ,  ":
            oaddress = ""

        o193 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("AgenceLocale"),
            name="ALEC07",
            description="",
            reference="",
            address=oaddress,
            town="Aubenas",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o193.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o193.tags.add(t33)
                

        oaddress = "  ".strip() + ",  Louviers"
        if oaddress == "  ,  ":
            oaddress = ""

        o234 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("AgenceLocale"),
            name="ALEC27",
            description="",
            reference="",
            address=oaddress,
            town="Louviers",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o234.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o234.tags.add(t33)
                

        oaddress = "14 place Jules Ferry  ".strip() + ", 69006 Lyon"
        if oaddress == "  ,  ":
            oaddress = ""

        o230 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("AgenceLocale"),
            name="ALEC69",
            description="",
            reference="",
            address=oaddress,
            town="Lyon",
            zipcode="69006",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o230.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o230.tags.add(t33)
                

        oaddress = "  ".strip() + ",  Nantes"
        if oaddress == "  ,  ":
            oaddress = ""

        o122 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("AgenceLocale"),
            name="Alisée",
            description="",
            reference="",
            address=oaddress,
            town="Nantes",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o122.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o122.tags.add(t33)
                

        oaddress = "  ".strip() + ",  Lorient"
        if oaddress == "  ,  ":
            oaddress = ""

        o71 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="ALOEN",
            description="",
            reference="",
            address=oaddress,
            town="Lorient",
            zipcode="",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o71.referents.add(hespul_user)
            

        t7, created = Tag.objects.get_or_create(
            name="Crowdfunding",
            owning_group=hespul_group,
            defaults={
                'name': "Crowdfunding",
                'description': "Structures qui ont donnés dans le cadre du crowdfunding du CRPV",
                'owning_group': hespul_group,
            }
        )
        o71.tags.add(t7)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o71.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Apt"
        if oaddress == "  ,  ":
            oaddress = ""

        o220 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="ALTE Provence",
            description="",
            reference="",
            address=oaddress,
            town="Apt",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o220.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o220.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o220.tags.add(t32)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o215 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="APERT (Association pour la Promotion des Energies Renouvelables au Togo)",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o215.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o215.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Loos"
        if oaddress == "  ,  ":
            oaddress = ""

        o284 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="APPA - Association pour la Prévention de la Pollution Atmosphérique",
            description="",
            reference="",
            address=oaddress,
            town="Loos",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o284.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o284.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o284.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Lyon"
        if oaddress == "  ,  ":
            oaddress = ""

        o226 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Arborescence",
            description="",
            reference="",
            address=oaddress,
            town="Lyon",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o226.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o226.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o226.tags.add(t32)
                

        oaddress = "124 rue du bon vent  ".strip() + ", 73000 Chambéry"
        if oaddress == "  ,  ":
            oaddress = ""

        o229 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="ASDER",
            description="",
            reference="",
            address=oaddress,
            town="Chambéry",
            zipcode="73000",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o229.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o229.tags.add(t33)
                

        oaddress = "  ".strip() + ",  La Roche sur Yon"
        if oaddress == "  ,  ":
            oaddress = ""

        o179 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="Association Elise",
            description="",
            reference="",
            address=oaddress,
            town="La Roche sur Yon",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o179.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o179.tags.add(t33)
                

        oaddress = "  ".strip() + ",  Dijon"
        if oaddress == "  ,  ":
            oaddress = ""

        o196 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="Bourgogne Energies Renouvelables",
            description="",
            reference="",
            address=oaddress,
            town="Dijon",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o196.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o196.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o196.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Brest"
        if oaddress == "  ,  ":
            oaddress = ""

        o275 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Bretagne Vivante",
            description="",
            reference="",
            address=oaddress,
            town="Brest",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o275.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o275.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Angers"
        if oaddress == "  ,  ":
            oaddress = ""

        o257 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="CAB Pays de la Loire",
            description="",
            reference="",
            address=oaddress,
            town="Angers",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o257.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o257.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o257.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Laval"
        if oaddress == "  ,  ":
            oaddress = ""

        o212 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="CIVAM Bio 53 (Mayenne)",
            description="",
            reference="",
            address=oaddress,
            town="Laval",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o212.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o212.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o212.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Montreuil"
        if oaddress == "  ,  ":
            oaddress = ""

        o232 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="CLER",
            description="",
            reference="",
            address=oaddress,
            town="Montreuil",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o232.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o232.tags.add(t33)
                

        oaddress = "  ".strip() + ",  Haguenau"
        if oaddress == "  ,  ":
            oaddress = ""

        o187 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="Communauté d'Agglomération de Hagenau",
            description="",
            reference="",
            address=oaddress,
            town="Haguenau",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o187.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o187.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Clermont-Ferrand"
        if oaddress == "  ,  ":
            oaddress = ""

        o188 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="Conseil départemental du Puy-de-Dôme",
            description="",
            reference="",
            address=oaddress,
            town="Clermont-Ferrand",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o188.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o188.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Angers"
        if oaddress == "  ,  ":
            oaddress = ""

        o271 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Consol et Cie",
            description="",
            reference="",
            address=oaddress,
            town="Angers",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o271.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o271.tags.add(t32)
                

        oaddress = "17 C, chemin des Terres Mêlées  ".strip() + ", 69290 GREZIEU LA VARENNE"
        if oaddress == "  ,  ":
            oaddress = ""

        o68 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Coopawatt",
            description="",
            reference="",
            address=oaddress,
            town="GREZIEU LA VARENNE",
            zipcode="69290",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o68.referents.add(hespul_user)
            

        t7, created = Tag.objects.get_or_create(
            name="Crowdfunding",
            owning_group=hespul_group,
            defaults={
                'name': "Crowdfunding",
                'description': "Structures qui ont donnés dans le cadre du crowdfunding du CRPV",
                'owning_group': hespul_group,
            }
        )
        o68.tags.add(t7)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o68.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Neuves-Maisons"
        if oaddress == "  ,  ":
            oaddress = ""

        o286 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="CPEPESC Lorraine",
            description="",
            reference="",
            address=oaddress,
            town="Neuves-Maisons",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o286.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o286.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o286.tags.add(t32)
                

        oaddress = "6 rue du jardin des sens  ".strip() + ", 79340 Coutières"
        if oaddress == "  ,  ":
            oaddress = ""

        o209 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="CPIE de Gâtine Poitevine",
            description="",
            reference="",
            address=oaddress,
            town="Coutières",
            zipcode="79340",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="0549690144",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o209.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o209.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Mayenne"
        if oaddress == "  ,  ":
            oaddress = ""

        o236 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="CPIE Mayenne",
            description="",
            reference="",
            address=oaddress,
            town="Mayenne",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o236.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o236.tags.add(t33)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o192 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="CRESS AURA",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o192.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o192.tags.add(t32)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o216 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="CRESS Ile-de-France",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o216.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o216.tags.add(t32)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o222 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="CRESS Nouvelle-Aquitaine",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o222.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o222.tags.add(t32)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o221 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="CRESS Occitanie",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o221.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o221.tags.add(t32)
                

        oaddress = "42 rue des Hauts Pavés  ".strip() + ", 44000 Nantes"
        if oaddress == "  ,  ":
            oaddress = ""

        o202 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="CRESS Pays de la Loire",
            description="",
            reference="",
            address=oaddress,
            town="Nantes",
            zipcode="44000",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o202.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o202.tags.add(t33)
                

        oaddress = "  ".strip() + ",  Talence"
        if oaddress == "  ,  ":
            oaddress = ""

        o276 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="CROS Nouvelle Aquitaine",
            description="",
            reference="",
            address=oaddress,
            town="Talence",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o276.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o276.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Valence"
        if oaddress == "  ,  ":
            oaddress = ""

        o174 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="DOREMI",
            description="",
            reference="",
            address=oaddress,
            town="Valence",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o174.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o174.tags.add(t33)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o210 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="EC-LR Occitanie",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o210.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o210.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Nantes"
        if oaddress == "  ,  ":
            oaddress = ""

        o237 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="Ecopôle",
            description="",
            reference="",
            address=oaddress,
            town="Nantes",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o237.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o237.tags.add(t33)
                

        oaddress = "  ".strip() + ",  Mantes la Jolie"
        if oaddress == "  ,  ":
            oaddress = ""

        o273 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="EIAPIC",
            description="",
            reference="",
            address=oaddress,
            town="Mantes la Jolie",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o273.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o273.tags.add(t32)
                

        oaddress = "10 avenue des Canuts  ".strip() + ", 69120 Vaulx-en-Velin"
        if oaddress == "  ,  ":
            oaddress = ""

        o211 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Énergie Partagée",
            description="",
            reference="",
            address=oaddress,
            town="Vaulx-en-Velin",
            zipcode="69120",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="0481919227",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o211.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o211.tags.add(t32)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o263 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Energy Cities",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o263.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o263.tags.add(t32)
                

        oaddress = "314, allée des noisetiers Bâtiment C ".strip() + ", 69760 Limonest"
        if oaddress == "  ,  ":
            oaddress = ""

        o235 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Company"),
            name="Evoly",
            description="",
            reference="",
            address=oaddress,
            town="Limonest",
            zipcode="69760",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o235.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o235.tags.add(t33)
                

        oaddress = "  ".strip() + ",  Saffré"
        if oaddress == "  ,  ":
            oaddress = ""

        o194 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="FD CIVAM 44",
            description="",
            reference="",
            address=oaddress,
            town="Saffré",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o194.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o194.tags.add(t33)
                

        oaddress = "  ".strip() + ",  Paris"
        if oaddress == "  ,  ":
            oaddress = ""

        o259 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Fédération nationale d'agriculture biologique (FNAB)",
            description="",
            reference="",
            address=oaddress,
            town="Paris",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o259.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o259.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o259.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Alixan"
        if oaddress == "  ,  ":
            oaddress = ""

        o191 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="Fibois 07 26",
            description="",
            reference="",
            address=oaddress,
            town="Alixan",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o191.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o191.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Bruxelles"
        if oaddress == "  ,  ":
            oaddress = ""

        o268 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Financite",
            description="",
            reference="",
            address=oaddress,
            town="Bruxelles",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o268.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o268.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Nantes"
        if oaddress == "  ,  ":
            oaddress = ""

        o274 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Fondacio France",
            description="",
            reference="",
            address=oaddress,
            town="Nantes",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o274.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o274.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Ivry-sur-Seine"
        if oaddress == "  ,  ":
            oaddress = ""

        o285 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Football Écologie France",
            description="",
            reference="",
            address=oaddress,
            town="Ivry-sur-Seine",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o285.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o285.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Daoulas"
        if oaddress == "  ,  ":
            oaddress = ""

        o214 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="GAB 29",
            description="",
            reference="",
            address=oaddress,
            town="Daoulas",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o214.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o214.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o214.tags.add(t32)
                

        oaddress = "1 rue Marie Curie  ".strip() + ", 44170 Nozay"
        if oaddress == "  ,  ":
            oaddress = ""

        o205 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="GAB 44",
            description="",
            reference="",
            address=oaddress,
            town="Nozay",
            zipcode="44170",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o205.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o205.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o205.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Le Mans"
        if oaddress == "  ,  ":
            oaddress = ""

        o256 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="GAB 72",
            description="",
            reference="",
            address=oaddress,
            town="Le Mans",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o256.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o256.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o256.tags.add(t32)
                

        oaddress = "  ".strip() + ",  La Roche sur Yon"
        if oaddress == "  ,  ":
            oaddress = ""

        o219 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="GAB 85",
            description="",
            reference="",
            address=oaddress,
            town="La Roche sur Yon",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o219.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o219.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o219.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Murs-Erigné"
        if oaddress == "  ,  ":
            oaddress = ""

        o258 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="GABB Anjou",
            description="",
            reference="",
            address=oaddress,
            town="Murs-Erigné",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o258.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o258.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o258.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Montpellier"
        if oaddress == "  ,  ":
            oaddress = ""

        o231 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="GEFOSAT",
            description="",
            reference="",
            address=oaddress,
            town="Montpellier",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o231.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o231.tags.add(t33)
                

        oaddress = "  ".strip() + ",  Perpignan"
        if oaddress == "  ,  ":
            oaddress = ""

        o199 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Greenergie Installation",
            description="",
            reference="",
            address=oaddress,
            town="Perpignan",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o199.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o199.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Lyon"
        if oaddress == "  ,  ":
            oaddress = ""

        o283 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Groupe EOS",
            description="",
            reference="",
            address=oaddress,
            town="Lyon",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o283.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o283.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o283.tags.add(t32)
                

        oaddress = "1 route de Lyon  ".strip() + ", 69420 Tupin-et-Semons"
        if oaddress == "  ,  ":
            oaddress = ""

        o206 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Ile du Beurre",
            description="",
            reference="",
            address=oaddress,
            town="Tupin-et-Semons",
            zipcode="69420",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="0474568865",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o206.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o206.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Gourdon"
        if oaddress == "  ,  ":
            oaddress = ""

        o225 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="imag-enr",
            description="",
            reference="",
            address=oaddress,
            town="Gourdon",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o225.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o225.tags.add(t32)
                

        oaddress = "BP 258 - Savoie Technolac Helios - 60 avenue du Lax Léman ".strip() + ", 73375 Bourget-du-Lab Cedex"
        if oaddress == "  ,  ":
            oaddress = ""

        o203 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="INES",
            description="",
            reference="",
            address=oaddress,
            town="Bourget-du-Lab Cedex",
            zipcode="73375",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o203.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o203.tags.add(t32)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o245 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="InnoVales",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o245.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o245.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o245.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Villeurbanne"
        if oaddress == "  ,  ":
            oaddress = ""

        o213 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Le bruit de la forêt qui pousse",
            description="",
            reference="",
            address=oaddress,
            town="Villeurbanne",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o213.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o213.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Blâmont"
        if oaddress == "  ,  ":
            oaddress = ""

        o260 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Lorraine Énergies Renouvelables",
            description="",
            reference="",
            address=oaddress,
            town="Blâmont",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o260.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o260.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o260.tags.add(t32)
                

        oaddress = "23 rue Gosselet  ".strip() + ", 59000 Lille"
        if oaddress == "  ,  ":
            oaddress = ""

        o201 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="Maison Régionale de l'Envrionnement et des Solidarités - Hauts de France",
            description="",
            reference="",
            address=oaddress,
            town="Lille",
            zipcode="59000",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o201.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o201.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o201.tags.add(t32)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o217 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="Observatoire de l'habitat en Drôme et en Ardèche",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o217.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o217.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Nantes"
        if oaddress == "  ,  ":
            oaddress = ""

        o270 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Ouvre-Boîtes 44",
            description="",
            reference="",
            address=oaddress,
            town="Nantes",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o270.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o270.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Clermont-Ferrand"
        if oaddress == "  ,  ":
            oaddress = ""

        o287 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Plateforme mobilité 63",
            description="",
            reference="",
            address=oaddress,
            town="Clermont-Ferrand",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o287.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o287.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o287.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Lyon"
        if oaddress == "  ,  ":
            oaddress = ""

        o246 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Resacoop",
            description="",
            reference="",
            address=oaddress,
            town="Lyon",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o246.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o246.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o246.tags.add(t32)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o272 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Savoir Apprendre",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o272.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o272.tags.add(t32)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o218 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Sergies",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o218.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o218.tags.add(t32)
                

        oaddress = "17 rue Adrien Dutartre  ".strip() + ", 69520 Grigny"
        if oaddress == "  ,  ":
            oaddress = ""

        o176 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Syndicat"),
            name="SMIRIL",
            description="",
            reference="",
            address=oaddress,
            town="Grigny",
            zipcode="69520",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o176.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o176.tags.add(t33)
                

        oaddress = "  ".strip() + ",  Toulouse"
        if oaddress == "  ,  ":
            oaddress = ""

        o5 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Association"),
            name="Solagro",
            description="",
            reference="",
            address=oaddress,
            town="Toulouse",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o5.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o5.tags.add(t33)
                

        t3, created = Tag.objects.get_or_create(
            name="Mécénat - REX",
            owning_group=hespul_group,
            defaults={
                'name': "Mécénat - REX",
                'description': "Les structures qui ont partagé leur retour d'expérience sur le mécénat avec Hespul",
                'owning_group': hespul_group,
            }
        )
        o5.tags.add(t3)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o204 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="SolidaTech",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o204.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o204.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Toulouse"
        if oaddress == "  ,  ":
            oaddress = ""

        o277 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Soliha 31",
            description="",
            reference="",
            address=oaddress,
            town="Toulouse",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o277.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o277.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Lyon"
        if oaddress == "  ,  ":
            oaddress = ""

        o233 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("Company"),
            name="SPL Lyon Confluence",
            description="",
            reference="",
            address=oaddress,
            town="Lyon",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o233.referents.add(hespul_user)
            

        t33, created = Tag.objects.get_or_create(
            name="CTSX-user",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-user",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o233.tags.add(t33)
                

        oaddress = "  ".strip() + ",  Saint Genis Laval"
        if oaddress == "  ,  ":
            oaddress = ""

        o197 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Sud-Ouest Emploi",
            description="",
            reference="",
            address=oaddress,
            town="Saint Genis Laval",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o197.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o197.tags.add(t32)
                

        oaddress = "  ".strip() + ",  Grenoble"
        if oaddress == "  ,  ":
            oaddress = ""

        o261 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Tenerrdis",
            description="",
            reference="",
            address=oaddress,
            town="Grenoble",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o261.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o261.tags.add(t32)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o178 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Trace Software",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o178.referents.add(hespul_user)
            

        t30, created = Tag.objects.get_or_create(
            name="CTSX-en test",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-en test",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o178.tags.add(t30)
                

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o178.tags.add(t32)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o269 = Organization.objects.create(
            owning_group=hespul_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="URIOPPS PDL",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o269.referents.add(hespul_user)
            

        t32, created = Tag.objects.get_or_create(
            name="CTSX-prospect",
            owning_group=hespul_group,
            defaults={
                'name': "CTSX-prospect",
                'description': "",
                'owning_group': hespul_group,
            }
        )
        o269.tags.add(t32)
                
        no12 = Note.objects.create(
            owning_group=hespul_group,
            creator = hespul_user,
            linked_object = o217,
            note = """à inviter au webinaire du 29/03/2019

--

partage les mêmes locaux que l'ADIL26, prospect chaud""",
            pinned = False,
            created_at = isoparse("2019-02-18 16:31:22.869001+00:00"),
            updated_at = isoparse("2019-02-18 16:31:22.869001+00:00"),
            # tags,
            # reminder
        )
        rno12 = Reminder.objects.create(
            owning_group=hespul_group,
            creator = hespul_user,
            linked_object_task=no12,
            linked_object_contactable=o217,
            done=True,
            
                        date=isoparse("2019-02-19"),
                    
            # persons
        )
        rno12.persons.add(hespul_user)
        no12.created_at = isoparse("2019-02-18 16:31:22.869001+00:00")
        no12.updated_at = isoparse("2019-02-18 16:31:22.869001+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c468, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Julien",
            last_name="Allierot",
            email="jallirot@ageden38.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Julien",
                'last_name':"Allierot",
                'email':"jallirot@ageden38.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 76 23 53 55",
                'mobile_phone':"06 11 90 84 95",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c468.referents.add(hespul_user)
        moo432 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c468,
            organization = o238,
            use_address_from_organization = True,
            title_in_organization="Accompagnement projets énergie",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c432, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Maryline",
            last_name="Sure",
            email="dev-pfm63@orange.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Maryline",
                'last_name':"Sure",
                'email':"dev-pfm63@orange.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c432.referents.add(hespul_user)
        moo399 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c432,
            organization = o287,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c432.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c432.tags.add(t32)
                        
        if contact_created:    
            nc324 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c432,
                note = """accès démo envoyés le 28/10/19 :

id : dev-pfm63@orange.fr

mdp : demo_PFM63_28102019

--

participation au webinaire du 24/10/19""",
                pinned = False,
                created_at = isoparse("2019-10-28 15:11:40.815085+00:00"),
                updated_at = isoparse("2019-10-28 15:11:40.815085+00:00"),
                # tags,
                # reminder
            )

            rnc324 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc324,
                linked_object_contactable=c432,
                done=False,
        
            # persons
            )
            rnc324.persons.add(hespul_user)
            nc324.created_at = isoparse("2019-10-28 15:11:40.815085+00:00")
            nc324.updated_at = isoparse("2019-10-28 15:11:40.815085+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c430, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Christelle",
            last_name="Lomenech",
            email="christellelomenech@aloen.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Christelle",
                'last_name':"Lomenech",
                'email':"christellelomenech@aloen.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c430.referents.add(hespul_user)
        moo398 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c430,
            organization = o71,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c430.tags.add(t32)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c429, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Valérie",
            last_name="Le Dorner",
            email="valerieledorner@aloen.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Valérie",
                'last_name':"Le Dorner",
                'email':"valerieledorner@aloen.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c429.referents.add(hespul_user)
        moo397 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c429,
            organization = o71,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c429.tags.add(t32)
                        
        if contact_created:    
            nc322 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c429,
                note = """participation au webinaire CTSX du 24/10/19""",
                pinned = False,
                created_at = isoparse("2019-10-28 14:59:00.298410+00:00"),
                updated_at = isoparse("2019-10-28 14:59:00.298410+00:00"),
                # tags,
                # reminder
            )

            rnc322 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc322,
                linked_object_contactable=c429,
                done=False,
        
            # persons
            )
            rnc322.persons.add(hespul_user)
            nc322.created_at = isoparse("2019-10-28 14:59:00.298410+00:00")
            nc322.updated_at = isoparse("2019-10-28 14:59:00.298410+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c428, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Charlotte",
            last_name="Braleret",
            email="charlotte.braleret@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Charlotte",
                'last_name':"Braleret",
                'email':"charlotte.braleret@gmail.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c428.referents.add(hespul_user)
        moo396 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c428,
            organization = o285,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c428.tags.add(t32)
                        
        if contact_created:    
            nc321 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c428,
                note = """participation au webinaire du 24/10/2019""",
                pinned = False,
                created_at = isoparse("2019-10-28 14:57:33.147959+00:00"),
                updated_at = isoparse("2019-10-28 14:57:33.147959+00:00"),
                # tags,
                # reminder
            )

            rnc321 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc321,
                linked_object_contactable=c428,
                done=False,
        
            # persons
            )
            rnc321.persons.add(hespul_user)
            nc321.created_at = isoparse("2019-10-28 14:57:33.147959+00:00")
            nc321.updated_at = isoparse("2019-10-28 14:57:33.147959+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c427, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Corinne",
            last_name="Schadkowski",
            email="corinne.schadkowski@appa.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Corinne",
                'last_name':"Schadkowski",
                'email':"corinne.schadkowski@appa.asso.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c427.referents.add(hespul_user)
        moo395 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c427,
            organization = o284,
            use_address_from_organization = True,
            title_in_organization="Coordination nationale / comité Hauts de France",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c427.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c427.tags.add(t32)
                        
        if contact_created:    
            nc320 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c427,
                note = """accès démo envoyés le 28/10/19 :

id : corinne.schadkowski@appa.asso.fr

mdp : demo_APPA_28102019

--

participation au webinaire du 24/10/19""",
                pinned = False,
                created_at = isoparse("2019-10-28 14:54:26.952739+00:00"),
                updated_at = isoparse("2019-10-28 14:54:26.952739+00:00"),
                # tags,
                # reminder
            )

            rnc320 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc320,
                linked_object_contactable=c427,
                done=False,
        
            # persons
            )
            rnc320.persons.add(hespul_user)
            nc320.created_at = isoparse("2019-10-28 14:54:26.952739+00:00")
            nc320.updated_at = isoparse("2019-10-28 14:54:26.952739+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c426, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Marine",
            last_name="Flodrops",
            email="mflodrops@groupe-eos.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Marine",
                'last_name':"Flodrops",
                'email':"mflodrops@groupe-eos.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c426.referents.add(hespul_user)
        moo394 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c426,
            organization = o283,
            use_address_from_organization = True,
            title_in_organization="Responsable Développement",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c426.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c426.tags.add(t32)
                        
        if contact_created:    
            nc319 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c426,
                note = """accès démo envoyés le 28/10/19 :

id : mflodrops@groupe-eos.fr

mdp : demo_EOS_28102019

--

participation au webinaire du 24/10/19""",
                pinned = False,
                created_at = isoparse("2019-10-28 14:49:46.208616+00:00"),
                updated_at = isoparse("2019-10-28 14:49:46.208616+00:00"),
                # tags,
                # reminder
            )

            rnc319 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc319,
                linked_object_contactable=c426,
                done=False,
        
            # persons
            )
            rnc319.persons.add(hespul_user)
            nc319.created_at = isoparse("2019-10-28 14:49:46.208616+00:00")
            nc319.updated_at = isoparse("2019-10-28 14:49:46.208616+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c420, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Bruno",
            last_name="Livory",
            email="brunolivory@aloen.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Bruno",
                'last_name':"Livory",
                'email':"brunolivory@aloen.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c420.referents.add(hespul_user)
        moo386 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c420,
            organization = o71,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c420.tags.add(t32)
                        
        if contact_created:    
            nc305 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c420,
                note = """inscrit ua webinaire du 26 sept 19""",
                pinned = False,
                created_at = isoparse("2019-09-25 09:17:18.865118+00:00"),
                updated_at = isoparse("2019-09-25 09:17:18.865118+00:00"),
                # tags,
                # reminder
            )

            rnc305 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc305,
                linked_object_contactable=c420,
                done=False,
        
            # persons
            )
            rnc305.persons.add(hespul_user)
            nc305.created_at = isoparse("2019-09-25 09:17:18.865118+00:00")
            nc305.updated_at = isoparse("2019-09-25 09:17:18.865118+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c419, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Lisa",
            last_name="Croyere",
            email="lisacroyere@aloen.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Lisa",
                'last_name':"Croyere",
                'email':"lisacroyere@aloen.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c419.referents.add(hespul_user)
        moo385 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c419,
            organization = o71,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c419.tags.add(t32)
                        
        if contact_created:    
            nc304 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c419,
                note = """inscrite au webinaire du 26/09/2019""",
                pinned = False,
                created_at = isoparse("2019-09-25 09:16:27.573270+00:00"),
                updated_at = isoparse("2019-09-25 09:16:27.573270+00:00"),
                # tags,
                # reminder
            )

            rnc304 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc304,
                linked_object_contactable=c419,
                done=False,
        
            # persons
            )
            rnc304.persons.add(hespul_user)
            nc304.created_at = isoparse("2019-09-25 09:16:27.573270+00:00")
            nc304.updated_at = isoparse("2019-09-25 09:16:27.573270+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c416, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Alexandre",
            last_name="Bambagini",
            email="a.bambagini@soliha31.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Alexandre",
                'last_name':"Bambagini",
                'email':"a.bambagini@soliha31.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c416.referents.add(hespul_user)
        moo382 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c416,
            organization = o277,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c416.tags.add(t32)
                        
        if contact_created:    
            nc302 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c416,
                note = """inscrit au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:19:16.649289+00:00"),
                updated_at = isoparse("2019-09-16 13:19:16.649289+00:00"),
                # tags,
                # reminder
            )

            rnc302 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc302,
                linked_object_contactable=c416,
                done=False,
        
            # persons
            )
            rnc302.persons.add(hespul_user)
            nc302.created_at = isoparse("2019-09-16 13:19:16.649289+00:00")
            nc302.updated_at = isoparse("2019-09-16 13:19:16.649289+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c414, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Jean-Marc",
            last_name="Armaroli",
            email="jeanmarc.armaroli@cros-nouvelle-aquitaine.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Jean-Marc",
                'last_name':"Armaroli",
                'email':"jeanmarc.armaroli@cros-nouvelle-aquitaine.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c414.referents.add(hespul_user)
        moo381 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c414,
            organization = o276,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c414.tags.add(t32)
                        
        if contact_created:    
            nc300 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c414,
                note = """inscrit au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:13:01.511976+00:00"),
                updated_at = isoparse("2019-09-16 13:13:01.511976+00:00"),
                # tags,
                # reminder
            )

            rnc300 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc300,
                linked_object_contactable=c414,
                done=False,
        
            # persons
            )
            rnc300.persons.add(hespul_user)
            nc300.created_at = isoparse("2019-09-16 13:13:01.511976+00:00")
            nc300.updated_at = isoparse("2019-09-16 13:13:01.511976+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c413, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Hervé",
            last_name="Pennarun",
            email="herve.pennarun@bretagne-vivante.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Hervé",
                'last_name':"Pennarun",
                'email':"herve.pennarun@bretagne-vivante.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c413.referents.add(hespul_user)
        moo380 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c413,
            organization = o275,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c413.tags.add(t32)
                        
        if contact_created:    
            nc299 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c413,
                note = """inscrit au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:11:19.549775+00:00"),
                updated_at = isoparse("2019-09-16 13:11:19.549775+00:00"),
                # tags,
                # reminder
            )

            rnc299 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc299,
                linked_object_contactable=c413,
                done=False,
        
            # persons
            )
            rnc299.persons.add(hespul_user)
            nc299.created_at = isoparse("2019-09-16 13:11:19.549775+00:00")
            nc299.updated_at = isoparse("2019-09-16 13:11:19.549775+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c412, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Yann",
            last_name="Berdellou",
            email="raf@bretagne-vivante.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Yann",
                'last_name':"Berdellou",
                'email':"raf@bretagne-vivante.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c412.referents.add(hespul_user)
        moo379 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c412,
            organization = o275,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c412.tags.add(t32)
                        
        if contact_created:    
            nc298 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c412,
                note = """inscrit au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:09:55.712073+00:00"),
                updated_at = isoparse("2019-09-16 13:09:55.712073+00:00"),
                # tags,
                # reminder
            )

            rnc298 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc298,
                linked_object_contactable=c412,
                done=False,
        
            # persons
            )
            rnc298.persons.add(hespul_user)
            nc298.created_at = isoparse("2019-09-16 13:09:55.712073+00:00")
            nc298.updated_at = isoparse("2019-09-16 13:09:55.712073+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c410, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Xavier",
            last_name="Grimault",
            email="xgrimault@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Xavier",
                'last_name':"Grimault",
                'email':"xgrimault@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c410.referents.add(hespul_user)
        moo377 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c410,
            organization = o274,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c410.tags.add(t32)
                        
        if contact_created:    
            nc296 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c410,
                note = """inscrit au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:06:31.188497+00:00"),
                updated_at = isoparse("2019-09-16 13:06:31.188497+00:00"),
                # tags,
                # reminder
            )

            rnc296 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc296,
                linked_object_contactable=c410,
                done=False,
        
            # persons
            )
            rnc296.persons.add(hespul_user)
            nc296.created_at = isoparse("2019-09-16 13:06:31.188497+00:00")
            nc296.updated_at = isoparse("2019-09-16 13:06:31.188497+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c409, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Fatima",
            last_name="Saadan",
            email="eiapicassociation@yahoo.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Fatima",
                'last_name':"Saadan",
                'email':"eiapicassociation@yahoo.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c409.referents.add(hespul_user)
        moo376 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c409,
            organization = o273,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c409.tags.add(t32)
                        
        if contact_created:    
            nc295 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c409,
                note = """inscrite au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:05:08.195318+00:00"),
                updated_at = isoparse("2019-09-16 13:05:08.195318+00:00"),
                # tags,
                # reminder
            )

            rnc295 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc295,
                linked_object_contactable=c409,
                done=False,
        
            # persons
            )
            rnc295.persons.add(hespul_user)
            nc295.created_at = isoparse("2019-09-16 13:05:08.195318+00:00")
            nc295.updated_at = isoparse("2019-09-16 13:05:08.195318+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c408, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Anne",
            last_name="Blondel",
            email="anneb@exploradome.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Anne",
                'last_name':"Blondel",
                'email':"anneb@exploradome.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c408.referents.add(hespul_user)
        moo375 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c408,
            organization = o272,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c408.tags.add(t32)
                        
        if contact_created:    
            nc294 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c408,
                note = """accès démo envoyés le 27/09/2019 :

id : anneb@exploradome.com

mdp : demo_EXPLORADOME_2019

--

participa au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:03:34.130690+00:00"),
                updated_at = isoparse("2019-09-16 13:03:34.130690+00:00"),
                # tags,
                # reminder
            )

            rnc294 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc294,
                linked_object_contactable=c408,
                done=False,
        
            # persons
            )
            rnc294.persons.add(hespul_user)
            nc294.created_at = isoparse("2019-09-16 13:03:34.130690+00:00")
            nc294.updated_at = isoparse("2019-09-16 13:03:34.130690+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c407, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Hélène",
            last_name="Anselme",
            email="helene@consoletcie.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Hélène",
                'last_name':"Anselme",
                'email':"helene@consoletcie.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c407.referents.add(hespul_user)
        moo374 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c407,
            organization = o271,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c407.tags.add(t32)
                        
        if contact_created:    
            nc293 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c407,
                note = """inscrite au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:02:05.685983+00:00"),
                updated_at = isoparse("2019-09-16 13:02:05.685983+00:00"),
                # tags,
                # reminder
            )

            rnc293 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc293,
                linked_object_contactable=c407,
                done=False,
        
            # persons
            )
            rnc293.persons.add(hespul_user)
            nc293.created_at = isoparse("2019-09-16 13:02:05.685983+00:00")
            nc293.updated_at = isoparse("2019-09-16 13:02:05.685983+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c406, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Mélanie",
            last_name="Boghos",
            email="melanieboghos@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Mélanie",
                'last_name':"Boghos",
                'email':"melanieboghos@gmail.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c406.referents.add(hespul_user)
        moo373 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c406,
            organization = o270,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c406.tags.add(t32)
                        
        if contact_created:    
            nc292 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c406,
                note = """inscrite au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 12:55:34.028420+00:00"),
                updated_at = isoparse("2019-09-16 12:55:34.028420+00:00"),
                # tags,
                # reminder
            )

            rnc292 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc292,
                linked_object_contactable=c406,
                done=False,
        
            # persons
            )
            rnc292.persons.add(hespul_user)
            nc292.created_at = isoparse("2019-09-16 12:55:34.028420+00:00")
            nc292.updated_at = isoparse("2019-09-16 12:55:34.028420+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c405, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Isabelle",
            last_name="Ruisseau",
            email="i.ruisseau@uriopss-pdl.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Isabelle",
                'last_name':"Ruisseau",
                'email':"i.ruisseau@uriopss-pdl.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c405.referents.add(hespul_user)
        moo372 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c405,
            organization = o269,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c405.tags.add(t32)
                        
        if contact_created:    
            nc291 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c405,
                note = """inscrite au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 12:52:21.246861+00:00"),
                updated_at = isoparse("2019-09-16 12:52:21.246861+00:00"),
                # tags,
                # reminder
            )

            rnc291 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc291,
                linked_object_contactable=c405,
                done=False,
        
            # persons
            )
            rnc291.persons.add(hespul_user)
            nc291.created_at = isoparse("2019-09-16 12:52:21.246861+00:00")
            nc291.updated_at = isoparse("2019-09-16 12:52:21.246861+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c404, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Anne",
            last_name="Fily",
            email="anne.fily@financite.be",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Anne",
                'last_name':"Fily",
                'email':"anne.fily@financite.be",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c404.referents.add(hespul_user)
        moo371 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c404,
            organization = o268,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c404.tags.add(t32)
                        
        if contact_created:    
            nc289 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c404,
                note = """inscrite au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 12:40:25.640588+00:00"),
                updated_at = isoparse("2019-09-16 12:40:25.640588+00:00"),
                # tags,
                # reminder
            )

            rnc289 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc289,
                linked_object_contactable=c404,
                done=False,
        
            # persons
            )
            rnc289.persons.add(hespul_user)
            nc289.created_at = isoparse("2019-09-16 12:40:25.640588+00:00")
            nc289.updated_at = isoparse("2019-09-16 12:40:25.640588+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c403, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Raphaël",
            last_name="Chatelet",
            email="raphael.chatelet@energy-cities.eu",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Raphaël",
                'last_name':"Chatelet",
                'email':"raphael.chatelet@energy-cities.eu",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c403.referents.add(hespul_user)
        moo370 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c403,
            organization = o263,
            use_address_from_organization = True,
            title_in_organization="IT Management and Communications",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c403.tags.add(t32)
                        
        if contact_created:    
            nc286 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c403,
                note = """webinaire dédié mercredi 4 septembre 2019""",
                pinned = False,
                created_at = isoparse("2019-09-02 08:20:44.075291+00:00"),
                updated_at = isoparse("2019-09-02 08:20:44.075291+00:00"),
                # tags,
                # reminder
            )

            rnc286 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc286,
                linked_object_contactable=c403,
                done=False,
        
            # persons
            )
            rnc286.persons.add(hespul_user)
            nc286.created_at = isoparse("2019-09-02 08:20:44.075291+00:00")
            nc286.updated_at = isoparse("2019-09-02 08:20:44.075291+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c401, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Céline",
            last_name="Fallot-Buclet",
            email="celine.fallot@tenerrdis.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Céline",
                'last_name':"Fallot-Buclet",
                'email':"celine.fallot@tenerrdis.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c401.referents.add(hespul_user)
        moo368 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c401,
            organization = o261,
            use_address_from_organization = True,
            title_in_organization="Responsable Innovation",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c401.tags.add(t32)
                        
        if contact_created:    
            nc278 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c401,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

prise de contact via Marc""",
                pinned = False,
                created_at = isoparse("2019-08-28 10:34:08.851596+00:00"),
                updated_at = isoparse("2019-08-28 10:34:08.851596+00:00"),
                # tags,
                # reminder
            )

            rnc278 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc278,
                linked_object_contactable=c401,
                done=False,
        
            # persons
            )
            rnc278.persons.add(hespul_user)
            nc278.created_at = isoparse("2019-08-28 10:34:08.851596+00:00")
            nc278.updated_at = isoparse("2019-08-28 10:34:08.851596+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c400, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Éric",
            last_name="Drouilly",
            email="eie.ecrouves@orange.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Éric",
                'last_name':"Drouilly",
                'email':"eie.ecrouves@orange.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c400.referents.add(hespul_user)
        moo367 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c400,
            organization = o260,
            use_address_from_organization = True,
            title_in_organization="Coordinateur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c400.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c400.tags.add(t32)
                        
        if contact_created:    
            nc276 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c400,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019""",
                pinned = False,
                created_at = isoparse("2019-08-27 14:26:20.966334+00:00"),
                updated_at = isoparse("2019-08-27 14:26:20.966334+00:00"),
                # tags,
                # reminder
            )

            rnc276 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc276,
                linked_object_contactable=c400,
                done=False,
        
            # persons
            )
            rnc276.persons.add(hespul_user)
            nc276.created_at = isoparse("2019-08-27 14:26:20.966334+00:00")
            nc276.updated_at = isoparse("2019-08-27 14:26:20.966334+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c399, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Axel",
            last_name="Cavaleri",
            email="acavaleri@fnab.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Axel",
                'last_name':"Cavaleri",
                'email':"acavaleri@fnab.org",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c399.referents.add(hespul_user)
        moo366 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c399,
            organization = o259,
            use_address_from_organization = True,
            title_in_organization="Directeur adjoint",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c399.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c399.tags.add(t32)
                        
        if contact_created:    
            nc275 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c399,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019""",
                pinned = False,
                created_at = isoparse("2019-08-27 14:22:43.587461+00:00"),
                updated_at = isoparse("2019-08-27 14:22:43.587461+00:00"),
                # tags,
                # reminder
            )

            rnc275 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc275,
                linked_object_contactable=c399,
                done=False,
        
            # persons
            )
            rnc275.persons.add(hespul_user)
            nc275.created_at = isoparse("2019-08-27 14:22:43.587461+00:00")
            nc275.updated_at = isoparse("2019-08-27 14:22:43.587461+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c398, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="nsevaux",
            last_name="",
            email="nsevauxgabbanjou@orange.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"nsevaux",
                'last_name':"",
                'email':"nsevauxgabbanjou@orange.fr",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c398.referents.add(hespul_user)
        moo365 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c398,
            organization = o258,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c398.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c398.tags.add(t32)
                        
        if contact_created:    
            nc274 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c398,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019""",
                pinned = False,
                created_at = isoparse("2019-08-27 14:19:05.415911+00:00"),
                updated_at = isoparse("2019-08-27 14:19:05.415911+00:00"),
                # tags,
                # reminder
            )

            rnc274 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc274,
                linked_object_contactable=c398,
                done=False,
        
            # persons
            )
            rnc274.persons.add(hespul_user)
            nc274.created_at = isoparse("2019-08-27 14:19:05.415911+00:00")
            nc274.updated_at = isoparse("2019-08-27 14:19:05.415911+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c397, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Coordination",
            last_name="",
            email="cab.coordination@biopaysdelaloire.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Coordination",
                'last_name':"",
                'email':"cab.coordination@biopaysdelaloire.fr",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c397.referents.add(hespul_user)
        moo364 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c397,
            organization = o257,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c397.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c397.tags.add(t32)
                        
        if contact_created:    
            nc272 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c397,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019""",
                pinned = False,
                created_at = isoparse("2019-08-27 14:09:21.307685+00:00"),
                updated_at = isoparse("2019-08-27 14:09:21.307685+00:00"),
                # tags,
                # reminder
            )

            rnc272 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc272,
                linked_object_contactable=c397,
                done=False,
        
            # persons
            )
            rnc272.persons.add(hespul_user)
            nc272.created_at = isoparse("2019-08-27 14:09:21.307685+00:00")
            nc272.updated_at = isoparse("2019-08-27 14:09:21.307685+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c396, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Coordination",
            last_name="",
            email="coordination@gab72.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Coordination",
                'last_name':"",
                'email':"coordination@gab72.org",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c396.referents.add(hespul_user)
        moo363 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c396,
            organization = o256,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c396.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c396.tags.add(t32)
                        
        if contact_created:    
            nc271 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c396,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019""",
                pinned = False,
                created_at = isoparse("2019-08-27 14:06:08.403826+00:00"),
                updated_at = isoparse("2019-08-27 14:06:08.403826+00:00"),
                # tags,
                # reminder
            )

            rnc271 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc271,
                linked_object_contactable=c396,
                done=False,
        
            # persons
            )
            rnc271.persons.add(hespul_user)
            nc271.created_at = isoparse("2019-08-27 14:06:08.403826+00:00")
            nc271.updated_at = isoparse("2019-08-27 14:06:08.403826+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c377, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Frédéric",
            last_name="Khadri",
            email="entrepreneuriat@innovales.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Frédéric",
                'last_name':"Khadri",
                'email':"entrepreneuriat@innovales.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c377.referents.add(hespul_user)
        moo352 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c377,
            organization = o245,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c377.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c377.tags.add(t32)
                        
        if contact_created:    
            nc273 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c377,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019""",
                pinned = False,
                created_at = isoparse("2019-08-27 14:13:22.976226+00:00"),
                updated_at = isoparse("2019-08-27 14:13:22.976226+00:00"),
                # tags,
                # reminder
            )

            rnc273 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc273,
                linked_object_contactable=c377,
                done=False,
        
            # persons
            )
            rnc273.persons.add(hespul_user)
            nc273.created_at = isoparse("2019-08-27 14:13:22.976226+00:00")
            nc273.updated_at = isoparse("2019-08-27 14:13:22.976226+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c378, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Rose-Marie",
            last_name="Di Donato",
            email="rmdidonato@resacoop.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Rose-Marie",
                'last_name':"Di Donato",
                'email':"rmdidonato@resacoop.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0472778767",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c378.referents.add(hespul_user)
        moo351 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c378,
            organization = o246,
            use_address_from_organization = True,
            title_in_organization="Directrice",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c378.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c378.tags.add(t32)
                        
        if contact_created:    
            nc277 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c378,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019""",
                pinned = False,
                created_at = isoparse("2019-08-27 14:29:09.573555+00:00"),
                updated_at = isoparse("2019-08-27 14:29:09.573555+00:00"),
                # tags,
                # reminder
            )

            rnc277 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc277,
                linked_object_contactable=c378,
                done=False,
        
            # persons
            )
            rnc277.persons.add(hespul_user)
            nc277.created_at = isoparse("2019-08-27 14:29:09.573555+00:00")
            nc277.updated_at = isoparse("2019-08-27 14:29:09.573555+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c368, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Valérie",
            last_name="Tourrette",
            email="vtourrette@lyon-confluence.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Valérie",
                'last_name':"Tourrette",
                'email':"vtourrette@lyon-confluence.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c368.referents.add(hespul_user)
        moo343 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c368,
            organization = o233,
            use_address_from_organization = True,
            title_in_organization="Responsable administratif et financier",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c368.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c367, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Christian",
            last_name="Couturier",
            email="christian.couturier@solagro.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Christian",
                'last_name':"Couturier",
                'email':"christian.couturier@solagro.asso.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c367.referents.add(hespul_user)
        moo342 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c367,
            organization = o5,
            use_address_from_organization = True,
            title_in_organization="Directeur du pôle énergie",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c367.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c366, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Madeleine",
            last_name="Charru",
            email="madeleine.charru@solagro.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Madeleine",
                'last_name':"Charru",
                'email':"madeleine.charru@solagro.asso.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c366.referents.add(hespul_user)
        moo341 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c366,
            organization = o5,
            use_address_from_organization = True,
            title_in_organization="Directrice",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c366.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c365, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Claudia",
            last_name="Boude",
            email="claudia.boude@gefosat.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Claudia",
                'last_name':"Boude",
                'email':"claudia.boude@gefosat.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c365.referents.add(hespul_user)
        moo340 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c365,
            organization = o231,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c365.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c364, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Sandrine",
            last_name="Buresi",
            email="sandrine.buresi@gefosat.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Sandrine",
                'last_name':"Buresi",
                'email':"sandrine.buresi@gefosat.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c364.referents.add(hespul_user)
        moo339 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c364,
            organization = o231,
            use_address_from_organization = True,
            title_in_organization="Directrice",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c364.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c363, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Janette",
            last_name="Benouahab",
            email="janette.benouahab@gefosat.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Janette",
                'last_name':"Benouahab",
                'email':"janette.benouahab@gefosat.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c363.referents.add(hespul_user)
        moo338 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c363,
            organization = o231,
            use_address_from_organization = True,
            title_in_organization="Gestion financière",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c363.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c362, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Cédric",
            last_name="Fosset",
            email="cfosset@evoly-consulting.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Cédric",
                'last_name':"Fosset",
                'email':"cfosset@evoly-consulting.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c362.referents.add(hespul_user)
        moo337 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c362,
            organization = o235,
            use_address_from_organization = True,
            title_in_organization="Directeur associé",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c362.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c361, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Arnaud",
            last_name="Pougnier",
            email="apougnier@evoly-consulting.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Arnaud",
                'last_name':"Pougnier",
                'email':"apougnier@evoly-consulting.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c361.referents.add(hespul_user)
        moo336 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c361,
            organization = o235,
            use_address_from_organization = True,
            title_in_organization="Directeur associé",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c361.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c360, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Christophe",
            last_name="Lachaise",
            email="christophe.lachaise@ecopole.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Christophe",
                'last_name':"Lachaise",
                'email':"christophe.lachaise@ecopole.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c360.referents.add(hespul_user)
        moo335 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c360,
            organization = o237,
            use_address_from_organization = True,
            title_in_organization="Directeur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c360.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c359, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Jean-Mickaël",
            last_name="Digbo",
            email="jm.digbo@renovation-doremi.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Jean-Mickaël",
                'last_name':"Digbo",
                'email':"jm.digbo@renovation-doremi.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c359.referents.add(hespul_user)
        moo334 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c359,
            organization = o174,
            use_address_from_organization = True,
            title_in_organization="Chargé de projets informatiques",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c359.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c358, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="David",
            last_name="Quinton",
            email="david.quinton@cpie-mayenne.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"David",
                'last_name':"Quinton",
                'email':"david.quinton@cpie-mayenne.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c358.referents.add(hespul_user)
        moo333 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c358,
            organization = o236,
            use_address_from_organization = True,
            title_in_organization="Directeur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c358.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c357, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Jean-Baptiste",
            last_name="Lebrun",
            email="jeanbaptiste.lebrun@cler.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Jean-Baptiste",
                'last_name':"Lebrun",
                'email':"jeanbaptiste.lebrun@cler.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c357.referents.add(hespul_user)
        moo332 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c357,
            organization = o232,
            use_address_from_organization = True,
            title_in_organization="Directeur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c357.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c356, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Bouchra",
            last_name="Zeroual",
            email="bouchra.zeroual@cler.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Bouchra",
                'last_name':"Zeroual",
                'email':"bouchra.zeroual@cler.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c356.referents.add(hespul_user)
        moo331 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c356,
            organization = o232,
            use_address_from_organization = True,
            title_in_organization="Responsable des projets EIE et coordinatrice SLIME",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c356.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c355, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Radhia",
            last_name="Berdaoui",
            email="radhia.berdaoui@cler.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Radhia",
                'last_name':"Berdaoui",
                'email':"radhia.berdaoui@cler.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c355.referents.add(hespul_user)
        moo330 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c355,
            organization = o232,
            use_address_from_organization = True,
            title_in_organization="Responsable administrative et comptable",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c355.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c354, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Laure",
            last_name="Voron",
            email="laure.voron@asder.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Laure",
                'last_name':"Voron",
                'email':"laure.voron@asder.asso.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c354.referents.add(hespul_user)
        moo329 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c354,
            organization = o229,
            use_address_from_organization = True,
            title_in_organization="Co-directrice",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c354.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c353, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Delphine",
            last_name="Mugnier",
            email="delphine.mugnier@asder.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Delphine",
                'last_name':"Mugnier",
                'email':"delphine.mugnier@asder.asso.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c353.referents.add(hespul_user)
        moo328 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c353,
            organization = o229,
            use_address_from_organization = True,
            title_in_organization="Co-directrice",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c353.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c352, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Corine",
            last_name="Vial",
            email="corine.vial@asder.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Corine",
                'last_name':"Vial",
                'email':"corine.vial@asder.asso.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c352.referents.add(hespul_user)
        moo327 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c352,
            organization = o229,
            use_address_from_organization = True,
            title_in_organization="Assistance administrative et comptabilité",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c352.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c351, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Christine",
            last_name="Besson",
            email="christine.besson@asder.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Christine",
                'last_name':"Besson",
                'email':"christine.besson@asder.asso.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c351.referents.add(hespul_user)
        moo326 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c351,
            organization = o229,
            use_address_from_organization = True,
            title_in_organization="Responsable de Gestion et Ressources Humaines",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c351.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c350, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Claire",
            last_name="Hurtaux",
            email="hurtaux@alec07.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Claire",
                'last_name':"Hurtaux",
                'email':"hurtaux@alec07.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c350.referents.add(hespul_user)
        moo325 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c350,
            organization = o193,
            use_address_from_organization = True,
            title_in_organization="Coordinatrice opérationnelle",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c350.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c349, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Julien",
            last_name="Bouron",
            email="jb@alisee.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Julien",
                'last_name':"Bouron",
                'email':"jb@alisee.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c349.referents.add(hespul_user)
        moo324 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c349,
            organization = o122,
            use_address_from_organization = True,
            title_in_organization="Chargé de développement (réseaux)",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c349.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c384, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Maël",
            last_name="Ollivro",
            email="mo@alisee.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Maël",
                'last_name':"Ollivro",
                'email':"mo@alisee.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0285291640",
                'mobile_phone':"0632514105",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c384.referents.add(hespul_user)
        moo323 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c384,
            organization = o122,
            use_address_from_organization = True,
            title_in_organization="Coordinateur réseaux",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c384.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c347, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Hélène",
            last_name="Launay",
            email="helene.launay@alisee.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Hélène",
                'last_name':"Launay",
                'email':"helene.launay@alisee.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c347.referents.add(hespul_user)
        moo322 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c347,
            organization = o122,
            use_address_from_organization = True,
            title_in_organization="Secrétaire générale",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c347.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c346, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Sylvia",
            last_name="Mouda",
            email="sm@alisee.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Sylvia",
                'last_name':"Mouda",
                'email':"sm@alisee.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c346.referents.add(hespul_user)
        moo321 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c346,
            organization = o122,
            use_address_from_organization = True,
            title_in_organization="Assistante de direction",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c346.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c345, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Nathalie",
            last_name="Rocha da Silva",
            email="nathalie.rochadasilva@alec-lyon.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Nathalie",
                'last_name':"Rocha da Silva",
                'email':"nathalie.rochadasilva@alec-lyon.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c345.referents.add(hespul_user)
        moo320 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c345,
            organization = o230,
            use_address_from_organization = True,
            title_in_organization="Gestionnaire admin et RH",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c345.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c344, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Marie-Laure",
            last_name="Ladret",
            email="marie-laure.ladret@alec-lyon.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Marie-Laure",
                'last_name':"Ladret",
                'email':"marie-laure.ladret@alec-lyon.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c344.referents.add(hespul_user)
        moo319 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c344,
            organization = o230,
            use_address_from_organization = True,
            title_in_organization="Gestionnaire financier",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c344.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c343, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Eric",
            last_name="Bergès",
            email="eric.berges@alec-lyon.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Eric",
                'last_name':"Bergès",
                'email':"eric.berges@alec-lyon.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c343.referents.add(hespul_user)
        moo318 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c343,
            organization = o230,
            use_address_from_organization = True,
            title_in_organization="Responsable d'activité (DAF)",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c343.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c342, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Florent",
            last_name="Fenault",
            email="florent.fenault@alec27.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Florent",
                'last_name':"Fenault",
                'email':"florent.fenault@alec27.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c342.referents.add(hespul_user)
        moo317 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c342,
            organization = o234,
            use_address_from_organization = True,
            title_in_organization="Directeur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c342.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c341, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Joseph",
            last_name="Bourez",
            email="bourez@alec07.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Joseph",
                'last_name':"Bourez",
                'email':"bourez@alec07.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c341.referents.add(hespul_user)
        moo316 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c341,
            organization = o193,
            use_address_from_organization = True,
            title_in_organization="Directeur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c341.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c340, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Benoît",
            last_name="Petitcolas",
            email="bpetitcolas@ageden38.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Benoît",
                'last_name':"Petitcolas",
                'email':"bpetitcolas@ageden38.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c340.referents.add(hespul_user)
        moo315 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c340,
            organization = o238,
            use_address_from_organization = True,
            title_in_organization="Responsable pôle Accompagnement de projets collec.",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c340.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c339, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Julien",
            last_name="Ducrotois",
            email="jducrotois@ageden38.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Julien",
                'last_name':"Ducrotois",
                'email':"jducrotois@ageden38.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c339.referents.add(hespul_user)
        moo314 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c339,
            organization = o238,
            use_address_from_organization = True,
            title_in_organization="Responsable du pôle EIE",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c339.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c338, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Dominique",
            last_name="Fournier",
            email="dfournier@ageden38.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Dominique",
                'last_name':"Fournier",
                'email':"dfournier@ageden38.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c338.referents.add(hespul_user)
        moo313 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c338,
            organization = o238,
            use_address_from_organization = True,
            title_in_organization="Comptable",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c338.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c337, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Etienne",
            last_name="Masson",
            email="emasson@ageden38.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Etienne",
                'last_name':"Masson",
                'email':"emasson@ageden38.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c337.referents.add(hespul_user)
        moo312 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c337,
            organization = o238,
            use_address_from_organization = True,
            title_in_organization="Directeur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c337.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c331, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Pierre",
            last_name="Bergeron",
            email="bet.arborescence@orange.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Pierre",
                'last_name':"Bergeron",
                'email':"bet.arborescence@orange.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c331.referents.add(hespul_user)
        moo307 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c331,
            organization = o226,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c331.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c331.tags.add(t32)
                        
        if contact_created:    
            nc210 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c331,
                note = """mail de relance le 27/08/2019

--

accès démo envoyés le 29/03:

id : bet.arborescence@orange.fr

mdp : demo_ARBORESCENCE_29032019

--

participant au webinaire du 29 mars 2019""",
                pinned = False,
                created_at = isoparse("2019-03-29 16:08:09.081330+00:00"),
                updated_at = isoparse("2019-03-29 16:08:09.081330+00:00"),
                # tags,
                # reminder
            )

            rnc210 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc210,
                linked_object_contactable=c331,
                done=False,
        
            # persons
            )
            rnc210.persons.add(hespul_user)
            nc210.created_at = isoparse("2019-03-29 16:08:09.081330+00:00")
            nc210.updated_at = isoparse("2019-03-29 16:08:09.081330+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c330, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Emmanuel",
            last_name="Salomon",
            email="emmanuel.salomon@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Emmanuel",
                'last_name':"Salomon",
                'email':"emmanuel.salomon@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c330.referents.add(hespul_user)
        moo306 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c330,
            organization = o225,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c330.tags.add(t32)
                        
        if contact_created:    
            nc279 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c330,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées""",
                pinned = False,
                created_at = isoparse("2019-08-28 10:35:14.733299+00:00"),
                updated_at = isoparse("2019-08-28 10:35:14.733299+00:00"),
                # tags,
                # reminder
            )

            rnc279 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc279,
                linked_object_contactable=c330,
                done=False,
        
            # persons
            )
            rnc279.persons.add(hespul_user)
            nc279.created_at = isoparse("2019-08-28 10:35:14.733299+00:00")
            nc279.updated_at = isoparse("2019-08-28 10:35:14.733299+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c328, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Philippe",
            last_name="Viel",
            email="philippe.viel@alte-provence.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Philippe",
                'last_name':"Viel",
                'email':"philippe.viel@alte-provence.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c328.referents.add(hespul_user)
        moo305 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c328,
            organization = o220,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c328.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c328.tags.add(t32)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c327, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Charline",
            last_name="Gérard",
            email="cge@dromenet.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Charline",
                'last_name':"Gérard",
                'email':"cge@dromenet.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c327.referents.add(hespul_user)
        moo304 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c327,
            organization = o217,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c327.tags.add(t32)
                        
        if contact_created:    
            nc280 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c327,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées""",
                pinned = False,
                created_at = isoparse("2019-08-28 10:36:47.576302+00:00"),
                updated_at = isoparse("2019-08-28 10:36:47.576302+00:00"),
                # tags,
                # reminder
            )

            rnc280 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc280,
                linked_object_contactable=c327,
                done=False,
        
            # persons
            )
            rnc280.persons.add(hespul_user)
            nc280.created_at = isoparse("2019-08-28 10:36:47.576302+00:00")
            nc280.updated_at = isoparse("2019-08-28 10:36:47.576302+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c326, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Chantal",
            last_name="Plantier",
            email="cpl@dromenet.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Chantal",
                'last_name':"Plantier",
                'email':"cpl@dromenet.org",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c326.referents.add(hespul_user)
        moo303 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c326,
            organization = o224,
            use_address_from_organization = True,
            title_in_organization="Coordonnatrice pôle secrétariat, logistique, comm",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c326.tags.add(t33)
                        
        if contact_created:    
            nc208 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c326,
                note = """inscrit au webinaire du 29 mars""",
                pinned = False,
                created_at = isoparse("2019-03-27 16:17:11.154470+00:00"),
                updated_at = isoparse("2019-03-27 16:17:11.154470+00:00"),
                # tags,
                # reminder
            )

            rnc208 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc208,
                linked_object_contactable=c326,
                done=False,
        
            # persons
            )
            rnc208.persons.add(hespul_user)
            nc208.created_at = isoparse("2019-03-27 16:17:11.154470+00:00")
            nc208.updated_at = isoparse("2019-03-27 16:17:11.154470+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c324, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Mélanie",
            last_name="Thuillier",
            email="m.thuillier@cress-na.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Mélanie",
                'last_name':"Thuillier",
                'email':"m.thuillier@cress-na.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c324.referents.add(hespul_user)
        moo301 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c324,
            organization = o222,
            use_address_from_organization = True,
            title_in_organization="Coordinatrice",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c324.tags.add(t32)
                        
        if contact_created:    
            nc281 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c324,
                note = """inscrite au webinaire du 26/09/19

--

mail envoyé le 28/08/2019 pour demander de relayer la campagne de comm de la rentrée 2019""",
                pinned = False,
                created_at = isoparse("2019-08-28 10:43:10.286747+00:00"),
                updated_at = isoparse("2019-08-28 10:43:10.286747+00:00"),
                # tags,
                # reminder
            )

            rnc281 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc281,
                linked_object_contactable=c324,
                done=False,
        
            # persons
            )
            rnc281.persons.add(hespul_user)
            nc281.created_at = isoparse("2019-08-28 10:43:10.286747+00:00")
            nc281.updated_at = isoparse("2019-08-28 10:43:10.286747+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c323, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="J",
            last_name="Wach",
            email="j.wach@cress-na.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"J",
                'last_name':"Wach",
                'email':"j.wach@cress-na.org",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c323.referents.add(hespul_user)
        moo300 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c323,
            organization = o222,
            use_address_from_organization = True,
            title_in_organization="Chargé de communication",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c323.tags.add(t32)
                        
        if contact_created:    
            nc282 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c323,
                note = """mail envoyé le 28/08/2019 pour demander de relayer la campagne de comm de la rentrée 2019""",
                pinned = False,
                created_at = isoparse("2019-08-28 10:43:22.531676+00:00"),
                updated_at = isoparse("2019-08-28 10:43:22.531676+00:00"),
                # tags,
                # reminder
            )

            rnc282 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc282,
                linked_object_contactable=c323,
                done=False,
        
            # persons
            )
            rnc282.persons.add(hespul_user)
            nc282.created_at = isoparse("2019-08-28 10:43:22.531676+00:00")
            nc282.updated_at = isoparse("2019-08-28 10:43:22.531676+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c322, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Nicolas",
            last_name="Perez",
            email="n.perez@cress-na.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Nicolas",
                'last_name':"Perez",
                'email':"n.perez@cress-na.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c322.referents.add(hespul_user)
        moo299 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c322,
            organization = o222,
            use_address_from_organization = True,
            title_in_organization="Animateur territorial",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c322.tags.add(t32)
                        
        if contact_created:    
            nc290 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c322,
                note = """inscrit au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 12:41:47.530055+00:00"),
                updated_at = isoparse("2019-09-16 12:41:47.530055+00:00"),
                # tags,
                # reminder
            )

            rnc290 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc290,
                linked_object_contactable=c322,
                done=False,
        
            # persons
            )
            rnc290.persons.add(hespul_user)
            nc290.created_at = isoparse("2019-09-16 12:41:47.530055+00:00")
            nc290.updated_at = isoparse("2019-09-16 12:41:47.530055+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c321, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Louise",
            last_name="Barraud",
            email="louise.barraud@cressoccitanie.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Louise",
                'last_name':"Barraud",
                'email':"louise.barraud@cressoccitanie.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c321.referents.add(hespul_user)
        moo298 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c321,
            organization = o221,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c321.tags.add(t32)
                        
        if contact_created:    
            nc283 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c321,
                note = """mail le 28/08/2019 pour demander de relayer la campagne de comm de la rentrée 2019""",
                pinned = False,
                created_at = isoparse("2019-08-28 10:47:39.732457+00:00"),
                updated_at = isoparse("2019-08-28 10:47:39.732457+00:00"),
                # tags,
                # reminder
            )

            rnc283 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc283,
                linked_object_contactable=c321,
                done=False,
        
            # persons
            )
            rnc283.persons.add(hespul_user)
            nc283.created_at = isoparse("2019-08-28 10:47:39.732457+00:00")
            nc283.updated_at = isoparse("2019-08-28 10:47:39.732457+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c320, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Amandine",
            last_name="Michel",
            email="amandine.michel@alte-provence.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Amandine",
                'last_name':"Michel",
                'email':"amandine.michel@alte-provence.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c320.referents.add(hespul_user)
        moo297 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c320,
            organization = o220,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c320.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c320.tags.add(t32)
                        
        if contact_created:    
            nc211 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c320,
                note = """relance mail le 27/08/2019

--

accès démo envoyés le 29/03 :

id : amandine.michel@alte-provence.org

mdp : demo_ALTE_29032019

--

a participé au webinaire du 29 mars 2019""",
                pinned = False,
                created_at = isoparse("2019-03-29 16:10:59.486184+00:00"),
                updated_at = isoparse("2019-03-29 16:10:59.486184+00:00"),
                # tags,
                # reminder
            )

            rnc211 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc211,
                linked_object_contactable=c320,
                done=False,
        
            # persons
            )
            rnc211.persons.add(hespul_user)
            nc211.created_at = isoparse("2019-03-29 16:10:59.486184+00:00")
            nc211.updated_at = isoparse("2019-03-29 16:10:59.486184+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c316, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Raphaël",
            last_name="Ménauge",
            email="rmenauge@adb-emmaus.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Raphaël",
                'last_name':"Ménauge",
                'email':"rmenauge@adb-emmaus.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0967597401",
                'mobile_phone':"0661765789",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c316.referents.add(hespul_user)
        moo293 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c316,
            organization = o204,
            use_address_from_organization = True,
            title_in_organization="Chargé des partenariats et du développement",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c316.tags.add(t32)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c315, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Marie-Cécile",
            last_name="Ricard",
            email="coordination@gab85.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Marie-Cécile",
                'last_name':"Ricard",
                'email':"coordination@gab85.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c315.referents.add(hespul_user)
        moo292 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c315,
            organization = o219,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c315.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c315.tags.add(t32)
                        
        if contact_created:    
            nc183 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c315,
                note = """identifiants demo envoyés le 04/03/2019 :

identifiant : coordination@gab85.org

mot de passe : demo_GAB85_04032019

--

participante webinaire 15/02/2019""",
                pinned = False,
                created_at = isoparse("2019-02-19 09:24:20.873544+00:00"),
                updated_at = isoparse("2019-02-19 09:24:20.873544+00:00"),
                # tags,
                # reminder
            )

            rnc183 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc183,
                linked_object_contactable=c315,
                done=False,
        
            # persons
            )
            rnc183.persons.add(hespul_user)
            nc183.created_at = isoparse("2019-02-19 09:24:20.873544+00:00")
            nc183.updated_at = isoparse("2019-02-19 09:24:20.873544+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c314, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Hervé",
            last_name="Lecomte",
            email="herve.lecomte@sergies.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Hervé",
                'last_name':"Lecomte",
                'email':"herve.lecomte@sergies.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c314.referents.add(hespul_user)
        moo291 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c314,
            organization = o218,
            use_address_from_organization = True,
            title_in_organization="Directeur adjoint",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c314.tags.add(t32)
                        
        if contact_created:    
            nc182 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c314,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

tel le 28/02/2019 : ils sont intéressés par l'outil, mais ce n'est pas dans leur priorité du 1er semestre, période très chargée. À recontacter pour un webinaire 2ème semestre 2019

--

save-the-date envoyé pour le webinaire du 29/03/2019""",
                pinned = False,
                created_at = isoparse("2019-02-19 08:23:07.038888+00:00"),
                updated_at = isoparse("2019-02-19 08:23:07.038888+00:00"),
                # tags,
                # reminder
            )

            rnc182 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc182,
                linked_object_contactable=c314,
                done=True,
        
                            date=isoparse("2019-06-01"),
                        
            # persons
            )
            rnc182.persons.add(hespul_user)
            nc182.created_at = isoparse("2019-02-19 08:23:07.038888+00:00")
            nc182.updated_at = isoparse("2019-02-19 08:23:07.038888+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c313, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Sébastien",
            last_name="Chaillou",
            email="sebastien.chaillou@cressidf.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Sébastien",
                'last_name':"Chaillou",
                'email':"sebastien.chaillou@cressidf.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c313.referents.add(hespul_user)
        moo290 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c313,
            organization = o216,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c313.tags.add(t32)
                        
        if contact_created:    
            nc181 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c313,
                note = """mail le 28/08/2019 pour demander de relayer la campagne de comm de la rentrée 2019

--

Mail du 12/03/2019 (en réponse à une invitation webinaire)

Bonjour,

Je ne vous ai absolument pas oublié et suis très heureux de l'évolution du coutosuix! mais le dossier de développement pour lequel nous pensions utiliser cet outil est pour le moment suspendu à des partenaires et financeurs qui n'ont pas l'air décider à bouger rapidement... croyez bien que j'en suis le premier déçu! Mais du coup nous n'avons pas vraiment de personne ressource qui puisse participer à ce webinaire.. malheureusement.

Néanmoins merci de nous laisser dans le fil d'actu de ce bel outil! 

bien à vous et toute l'équipe d'Hespul!



--

save-the-date envoyé pour le webinaire du 29/03/2019""",
                pinned = False,
                created_at = isoparse("2019-02-18 16:21:26.513945+00:00"),
                updated_at = isoparse("2019-02-18 16:21:26.513945+00:00"),
                # tags,
                # reminder
            )

            rnc181 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc181,
                linked_object_contactable=c313,
                done=False,
        
            # persons
            )
            rnc181.persons.add(hespul_user)
            nc181.created_at = isoparse("2019-02-18 16:21:26.513945+00:00")
            nc181.updated_at = isoparse("2019-02-18 16:21:26.513945+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c312, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Catherine",
            last_name="Vallot",
            email="accueil@iledubeurre.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Catherine",
                'last_name':"Vallot",
                'email':"accueil@iledubeurre.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0474568898",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c312.referents.add(hespul_user)
        moo289 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c312,
            organization = o206,
            use_address_from_organization = True,
            title_in_organization="Assistante de direction",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c312.tags.add(t32)
                        
        if contact_created:    
            nc284 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c312,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées""",
                pinned = False,
                created_at = isoparse("2019-08-28 10:57:50.677404+00:00"),
                updated_at = isoparse("2019-08-28 10:57:50.677404+00:00"),
                # tags,
                # reminder
            )

            rnc284 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc284,
                linked_object_contactable=c312,
                done=False,
        
            # persons
            )
            rnc284.persons.add(hespul_user)
            nc284.created_at = isoparse("2019-08-28 10:57:50.677404+00:00")
            nc284.updated_at = isoparse("2019-08-28 10:57:50.677404+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c311, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Kodjo",
            last_name="Ametowou",
            email="theoametowoukodjo@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Kodjo",
                'last_name':"Ametowou",
                'email':"theoametowoukodjo@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c311.referents.add(hespul_user)
        moo288 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c311,
            organization = o215,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c311.tags.add(t32)
                        
        if contact_created:    
            nc180 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c311,
                note = """inscrit au webinaire du 15/02/2019""",
                pinned = False,
                created_at = isoparse("2019-02-14 09:26:53.993498+00:00"),
                updated_at = isoparse("2019-02-14 09:26:53.993498+00:00"),
                # tags,
                # reminder
            )

            rnc180 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc180,
                linked_object_contactable=c311,
                done=False,
        
            # persons
            )
            rnc180.persons.add(hespul_user)
            nc180.created_at = isoparse("2019-02-14 09:26:53.993498+00:00")
            nc180.updated_at = isoparse("2019-02-14 09:26:53.993498+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c310, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Virginie",
            last_name="Le Stanc",
            email="mab29.lestanc@agrobio-bretagne.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Virginie",
                'last_name':"Le Stanc",
                'email':"mab29.lestanc@agrobio-bretagne.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c310.referents.add(hespul_user)
        moo287 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c310,
            organization = o214,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c310.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c310.tags.add(t32)
                        
        if contact_created:    
            nc179 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c310,
                note = """relance mail le 27/08/2019

--

accès démo envoyés le 19/02/2019

identifiant : mab29.lestanc@agrobio-bretagne.org

mot de passe : demo_MAB29_19022019

--

participante au webinaire du 15/02/2019""",
                pinned = False,
                created_at = isoparse("2019-02-14 09:23:53.569443+00:00"),
                updated_at = isoparse("2019-02-14 09:23:53.569443+00:00"),
                # tags,
                # reminder
            )

            rnc179 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc179,
                linked_object_contactable=c310,
                done=False,
        
            # persons
            )
            rnc179.persons.add(hespul_user)
            nc179.created_at = isoparse("2019-02-14 09:23:53.569443+00:00")
            nc179.updated_at = isoparse("2019-02-14 09:23:53.569443+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c309, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Arthur",
            last_name="Cabaret",
            email="arthur.cabaret@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Arthur",
                'last_name':"Cabaret",
                'email':"arthur.cabaret@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c309.referents.add(hespul_user)
        moo286 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c309,
            organization = o213,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c309.tags.add(t32)
                        
        if contact_created:    
            nc178 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c309,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

Mail reçu le 19/02/2019

Bonjour Pauline,

Merci beaucoup de votre message ainsi que pour la présentation qui était limpide.

Pour moi qui suis encore en phase de création, s'équiper d'un tel logiciel est encore prématuré mais je reviendrai vers vous le moment venu :)

A bientôt,

Arthur Cabaret

06 78 74 60 43

--

participant au webinaire du 15/02/2019""",
                pinned = False,
                created_at = isoparse("2019-02-14 09:22:11.160294+00:00"),
                updated_at = isoparse("2019-02-14 09:22:11.160294+00:00"),
                # tags,
                # reminder
            )

            rnc178 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc178,
                linked_object_contactable=c309,
                done=False,
        
            # persons
            )
            rnc178.persons.add(hespul_user)
            nc178.created_at = isoparse("2019-02-14 09:22:11.160294+00:00")
            nc178.updated_at = isoparse("2019-02-14 09:22:11.160294+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c307, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Céline",
            last_name="Launay",
            email="coordination@civambio53.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Céline",
                'last_name':"Launay",
                'email':"coordination@civambio53.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c307.referents.add(hespul_user)
        moo285 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c307,
            organization = o212,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c307.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c307.tags.add(t32)
                        
        if contact_created:    
            nc177 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c307,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019

--

inscrite au webinaire du 15/02/2019""",
                pinned = False,
                created_at = isoparse("2019-02-14 09:20:01.010981+00:00"),
                updated_at = isoparse("2019-02-14 09:20:01.010981+00:00"),
                # tags,
                # reminder
            )

            rnc177 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc177,
                linked_object_contactable=c307,
                done=False,
        
            # persons
            )
            rnc177.persons.add(hespul_user)
            nc177.created_at = isoparse("2019-02-14 09:20:01.010981+00:00")
            nc177.updated_at = isoparse("2019-02-14 09:20:01.010981+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c306, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Fabien",
            last_name="Brosset",
            email="fabien.brosset@energie-partagee.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Fabien",
                'last_name':"Brosset",
                'email':"fabien.brosset@energie-partagee.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c306.referents.add(hespul_user)
        moo284 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c306,
            organization = o211,
            use_address_from_organization = True,
            title_in_organization="Responsable administratif et financier",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c306.tags.add(t32)
                        
        if contact_created:    
            nc173 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c306,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

save-the-date envoyé pour le webinaire du 29/03/2019

--

invité au webinaire du 15/02/19""",
                pinned = False,
                created_at = isoparse("2019-02-05 08:11:10.723452+00:00"),
                updated_at = isoparse("2019-02-05 08:11:10.723452+00:00"),
                # tags,
                # reminder
            )

            rnc173 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc173,
                linked_object_contactable=c306,
                done=False,
        
            # persons
            )
            rnc173.persons.add(hespul_user)
            nc173.created_at = isoparse("2019-02-05 08:11:10.723452+00:00")
            nc173.updated_at = isoparse("2019-02-05 08:11:10.723452+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c305, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Johann",
            last_name="Vacandare",
            email="johann.vacandare@ec-lr.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Johann",
                'last_name':"Vacandare",
                'email':"johann.vacandare@ec-lr.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"0640369490",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c305.referents.add(hespul_user)
        moo283 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c305,
            organization = o210,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c305.tags.add(t32)
                        
        if contact_created:    
            nc174 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c305,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invité au webinaire du 15/02/19""",
                pinned = False,
                created_at = isoparse("2019-02-05 08:12:25.553611+00:00"),
                updated_at = isoparse("2019-02-05 08:12:25.553611+00:00"),
                # tags,
                # reminder
            )

            rnc174 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc174,
                linked_object_contactable=c305,
                done=False,
        
            # persons
            )
            rnc174.persons.add(hespul_user)
            nc174.created_at = isoparse("2019-02-05 08:12:25.553611+00:00")
            nc174.updated_at = isoparse("2019-02-05 08:12:25.553611+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c304, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Adèle",
            last_name="Gamache",
            email="direction@cpie79.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Adèle",
                'last_name':"Gamache",
                'email':"direction@cpie79.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c304.referents.add(hespul_user)
        moo282 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c304,
            organization = o209,
            use_address_from_organization = True,
            title_in_organization="Directrice",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c304.tags.add(t32)
                        
        if contact_created:    
            nc175 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c304,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invitée au webinaire du 15/02/19""",
                pinned = False,
                created_at = isoparse("2019-02-05 08:13:36.492134+00:00"),
                updated_at = isoparse("2019-02-05 08:13:36.492134+00:00"),
                # tags,
                # reminder
            )

            rnc175 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc175,
                linked_object_contactable=c304,
                done=False,
        
            # persons
            )
            rnc175.persons.add(hespul_user)
            nc175.created_at = isoparse("2019-02-05 08:13:36.492134+00:00")
            nc175.updated_at = isoparse("2019-02-05 08:13:36.492134+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c301, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Paul",
            last_name="Monin",
            email="direction@iledubeurre.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Paul",
                'last_name':"Monin",
                'email':"direction@iledubeurre.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c301.referents.add(hespul_user)
        moo279 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c301,
            organization = o206,
            use_address_from_organization = True,
            title_in_organization="Directeur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c301.tags.add(t32)
                        
        if contact_created:    
            nc172 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c301,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

save-the-date envoyé pour le webinaire du 29/03/2019

--

invité au webinaire du 15 février 2019

--

Connaissance de l'outil par le bouche-à-oreille du SMIRIL""",
                pinned = False,
                created_at = isoparse("2019-02-04 08:47:53.630950+00:00"),
                updated_at = isoparse("2019-02-04 08:47:53.630950+00:00"),
                # tags,
                # reminder
            )

            rnc172 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc172,
                linked_object_contactable=c301,
                done=False,
        
            # persons
            )
            rnc172.persons.add(hespul_user)
            nc172.created_at = isoparse("2019-02-04 08:47:53.630950+00:00")
            nc172.updated_at = isoparse("2019-02-04 08:47:53.630950+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c300, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Céline",
            last_name="Girault",
            email="coordination@gab44.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Céline",
                'last_name':"Girault",
                'email':"coordination@gab44.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0240794657",
                'mobile_phone':"0680886244",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c300.referents.add(hespul_user)
        moo278 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c300,
            organization = o205,
            use_address_from_organization = True,
            title_in_organization="Directrice",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c300.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c300.tags.add(t32)
                        
        if contact_created:    
            nc171 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c300,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019

--

(mail du 19/02/2019) Bonjour,

Oui la présentation nous a paru très claire et attractive. Nous sommes engagés actuellement avec un autre outil et ce normalement jusqu'à fin 2019. Pour autant, nous réfléchissons à anticiper un changement.

Et pour être transparente, certains GAB utilisent un 3ème  outil dont nous allons avoir une présentation en avril. Le choix se fera donc après.

Coutosuix nous a semblé répondre parfaitement à nos besoins.

Nous vous tiendrons au courant au plus vite.

cordialement

Céline Girault

Directrice

--

participante au webinaire du 15/02/2019

--

accès demo envoyé le 30/01/2019

id : coordination@gab44.org

mdp : demo_GAB44_30012019""",
                pinned = False,
                created_at = isoparse("2019-01-30 10:47:03.432509+00:00"),
                updated_at = isoparse("2019-01-30 10:47:03.432509+00:00"),
                # tags,
                # reminder
            )

            rnc171 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc171,
                linked_object_contactable=c300,
                done=False,
        
            # persons
            )
            rnc171.persons.add(hespul_user)
            nc171.created_at = isoparse("2019-01-30 10:47:03.432509+00:00")
            nc171.updated_at = isoparse("2019-01-30 10:47:03.432509+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c299, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Frédéric",
            last_name="Coulon",
            email="",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Frédéric",
                'last_name':"Coulon",
                'email':"",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0567696903",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c299.referents.add(hespul_user)
        moo277 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c299,
            organization = o5,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c297, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Christophe",
            last_name="Goddon",
            email="c.goddon@mres-asso.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Christophe",
                'last_name':"Goddon",
                'email':"c.goddon@mres-asso.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c297.referents.add(hespul_user)
        moo275 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c297,
            organization = o201,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c297.tags.add(t30)
                        
        if contact_created:    
            nc164 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c297,
                note = """accès demo envoyé le 11/01/2019

    identifiant : c.goddon@mres-asso.org

    mot de passe : demo_MRES_11012019""",
                pinned = False,
                created_at = isoparse("2019-01-11 09:49:09.833196+00:00"),
                updated_at = isoparse("2019-01-11 09:49:09.833196+00:00"),
                # tags,
                # reminder
            )

            rnc164 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc164,
                linked_object_contactable=c297,
                done=False,
        
            # persons
            )
            rnc164.persons.add(hespul_user)
            nc164.created_at = isoparse("2019-01-11 09:49:09.833196+00:00")
            nc164.updated_at = isoparse("2019-01-11 09:49:09.833196+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c296, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Solange",
            last_name="Habrard",
            email="s.habrard@mres-asso.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Solange",
                'last_name':"Habrard",
                'email':"s.habrard@mres-asso.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c296.referents.add(hespul_user)
        moo274 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c296,
            organization = o201,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c296.tags.add(t30)
                        
        if contact_created:    
            nc163 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c296,
                note = """accès demo envoyé le 11/01/2019

    identifiant : s.habrard@mres-asso.org

    mot de passe : demo_MRES_11012019""",
                pinned = False,
                created_at = isoparse("2019-01-11 09:48:18.152558+00:00"),
                updated_at = isoparse("2019-01-11 09:48:18.152558+00:00"),
                # tags,
                # reminder
            )

            rnc163 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc163,
                linked_object_contactable=c296,
                done=False,
        
            # persons
            )
            rnc163.persons.add(hespul_user)
            nc163.created_at = isoparse("2019-01-11 09:48:18.152558+00:00")
            nc163.updated_at = isoparse("2019-01-11 09:48:18.152558+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c295, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Nathalie",
            last_name="Sedou",
            email="n.sedou@mres-asso.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Nathalie",
                'last_name':"Sedou",
                'email':"n.sedou@mres-asso.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c295.referents.add(hespul_user)
        moo273 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c295,
            organization = o201,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c295.tags.add(t30)
                        
        if contact_created:    
            nc162 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c295,
                note = """accès demo envoyés le 11/01/2019

    identifiant : n.sedou@mres-asso.org

    mot de passe : demo_MRES_11012019""",
                pinned = False,
                created_at = isoparse("2019-01-11 09:46:49.504186+00:00"),
                updated_at = isoparse("2019-01-11 09:46:49.504186+00:00"),
                # tags,
                # reminder
            )

            rnc162 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc162,
                linked_object_contactable=c295,
                done=False,
        
            # persons
            )
            rnc162.persons.add(hespul_user)
            nc162.created_at = isoparse("2019-01-11 09:46:49.504186+00:00")
            nc162.updated_at = isoparse("2019-01-11 09:46:49.504186+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c294, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Véronique",
            last_name="Pallen",
            email="vpallen@cress-aura.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Véronique",
                'last_name':"Pallen",
                'email':"vpallen@cress-aura.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c294.referents.add(hespul_user)
        moo272 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c294,
            organization = o192,
            use_address_from_organization = True,
            title_in_organization="Responsable administrative et financière",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c294.tags.add(t32)
                        
        if contact_created:    
            nc157 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c294,
                note = """mail le 28/08/2019 pour invitation aux prochains webinaires organisés dès septembre 2019

--

invitée au webinaire du 10/01/2019""",
                pinned = False,
                created_at = isoparse("2019-01-08 13:53:17.470260+00:00"),
                updated_at = isoparse("2019-01-08 13:53:17.470260+00:00"),
                # tags,
                # reminder
            )

            rnc157 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc157,
                linked_object_contactable=c294,
                done=False,
        
            # persons
            )
            rnc157.persons.add(hespul_user)
            nc157.created_at = isoparse("2019-01-08 13:53:17.470260+00:00")
            nc157.updated_at = isoparse("2019-01-08 13:53:17.470260+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c293, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Pauline",
            last_name="Petot",
            email="ppetot@cress-aura.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Pauline",
                'last_name':"Petot",
                'email':"ppetot@cress-aura.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c293.referents.add(hespul_user)
        moo271 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c293,
            organization = o192,
            use_address_from_organization = True,
            title_in_organization="Directrice",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c293.tags.add(t32)
                        
        if contact_created:    
            nc158 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c293,
                note = """invit��e au webinaire du 10/01/2019""",
                pinned = False,
                created_at = isoparse("2019-01-08 13:53:47.462741+00:00"),
                updated_at = isoparse("2019-01-08 13:53:47.462741+00:00"),
                # tags,
                # reminder
            )

            rnc158 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc158,
                linked_object_contactable=c293,
                done=False,
        
            # persons
            )
            rnc158.persons.add(hespul_user)
            nc158.created_at = isoparse("2019-01-08 13:53:47.462741+00:00")
            nc158.updated_at = isoparse("2019-01-08 13:53:47.462741+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c292, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Franck",
            last_name="Barruel",
            email="franck.barruel@ines-solaire.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Franck",
                'last_name':"Barruel",
                'email':"franck.barruel@ines-solaire.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c292.referents.add(hespul_user)
        moo270 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c292,
            organization = o203,
            use_address_from_organization = True,
            title_in_organization="Directeur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c292.tags.add(t32)
                        
        if contact_created:    
            nc155 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c292,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invitation pour le webinaire du 10 janvier 2019""",
                pinned = False,
                created_at = isoparse("2019-01-07 16:45:29.801091+00:00"),
                updated_at = isoparse("2019-01-07 16:45:29.801091+00:00"),
                # tags,
                # reminder
            )

            rnc155 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc155,
                linked_object_contactable=c292,
                done=False,
        
            # persons
            )
            rnc155.persons.add(hespul_user)
            nc155.created_at = isoparse("2019-01-07 16:45:29.801091+00:00")
            nc155.updated_at = isoparse("2019-01-07 16:45:29.801091+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c290, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Mireille",
            last_name="Nivet",
            email="mireille.nivet@cress-pdl.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Mireille",
                'last_name':"Nivet",
                'email':"mireille.nivet@cress-pdl.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0240745777",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c290.referents.add(hespul_user)
        moo269 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c290,
            organization = o202,
            use_address_from_organization = True,
            title_in_organization="Responsable administrative et financière",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c290.tags.add(t33)
                        
        if contact_created:    
            nc151 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c290,
                note = """ajouté à coutosuix@googlegroups.com + Confluence le 18/02/2019

--

facture envoyée le 10/01/2019

--

devis envoyé le 08/01/2019

--

participation au webinaire du 20/12/2018 (pour l'équipe de négaWatt)""",
                pinned = False,
                created_at = isoparse("2018-12-21 14:25:10.246614+00:00"),
                updated_at = isoparse("2018-12-21 14:25:10.246614+00:00"),
                # tags,
                # reminder
            )

            rnc151 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc151,
                linked_object_contactable=c290,
                done=False,
        
            # persons
            )
            rnc151.persons.add(hespul_user)
            nc151.created_at = isoparse("2018-12-21 14:25:10.246614+00:00")
            nc151.updated_at = isoparse("2018-12-21 14:25:10.246614+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c289, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Xavier",
            last_name="Galand",
            email="x.galand@mres-asso.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Xavier",
                'last_name':"Galand",
                'email':"x.galand@mres-asso.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0320521202",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c289.referents.add(hespul_user)
        moo268 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c289,
            organization = o201,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c289.tags.add(t30)
                        
        if contact_created:    
            nc150 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c289,
                note = """relance mail le 27/08/2019

--

accès demo envoyé le 11/01/2019

    identifiant : x.galand@mres-asso.org

    mot de passe : demo_MRES_11012019

--

invité au webinaire de présentation le 10/01/2019

--

Msg depuis le site coutosuix.fr :

Bonjour, J'ai manqué le précédent webinaire (13/12).

Y a t il d'autres programmés ?

Merci de votre retour,

Xavier Galand""",
                pinned = False,
                created_at = isoparse("2018-12-21 14:16:11.772755+00:00"),
                updated_at = isoparse("2018-12-21 14:16:11.772755+00:00"),
                # tags,
                # reminder
            )

            rnc150 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc150,
                linked_object_contactable=c289,
                done=False,
        
            # persons
            )
            rnc150.persons.add(hespul_user)
            nc150.created_at = isoparse("2018-12-21 14:16:11.772755+00:00")
            nc150.updated_at = isoparse("2018-12-21 14:16:11.772755+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c288, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Hélène",
            last_name="Decouvelaere",
            email="helene.decouvelaere@coopawatt.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Hélène",
                'last_name':"Decouvelaere",
                'email':"helene.decouvelaere@coopawatt.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 25 85 19 05",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c288.referents.add(hespul_user)
        moo267 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c288,
            organization = o68,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c288.tags.add(t32)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=hespul_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c288.tags.add(t10)
                        
        if contact_created:    
            nc159 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c288,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invitée au webinaire du 15/02/2019

--

inscrite au webinaire CTSX du 10/01/2019""",
                pinned = False,
                created_at = isoparse("2019-01-09 13:52:10.197344+00:00"),
                updated_at = isoparse("2019-01-09 13:52:10.197344+00:00"),
                # tags,
                # reminder
            )

            rnc159 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc159,
                linked_object_contactable=c288,
                done=False,
        
            # persons
            )
            rnc159.persons.add(hespul_user)
            nc159.created_at = isoparse("2019-01-09 13:52:10.197344+00:00")
            nc159.updated_at = isoparse("2019-01-09 13:52:10.197344+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c281, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Lucille",
            last_name="Jover",
            email="lucille.jover@sudouestemploi.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Lucille",
                'last_name':"Jover",
                'email':"lucille.jover@sudouestemploi.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c281.referents.add(hespul_user)
        moo263 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c281,
            organization = o197,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c281.tags.add(t32)
                        
        if contact_created:    
            nc143 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c281,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

présente afterwork CTSX 08/11/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:24:33.472351+00:00"),
                updated_at = isoparse("2018-12-12 14:24:33.472351+00:00"),
                # tags,
                # reminder
            )

            rnc143 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc143,
                linked_object_contactable=c281,
                done=False,
        
            # persons
            )
            rnc143.persons.add(hespul_user)
            nc143.created_at = isoparse("2018-12-12 14:24:33.472351+00:00")
            nc143.updated_at = isoparse("2018-12-12 14:24:33.472351+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c280, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Floriane",
            last_name="Darennes",
            email="floriane.darennes@sudouestemploi.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Floriane",
                'last_name':"Darennes",
                'email':"floriane.darennes@sudouestemploi.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c280.referents.add(hespul_user)
        moo262 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c280,
            organization = o197,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c280.tags.add(t32)
                        
        if contact_created:    
            nc142 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c280,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invitée pour le webinaire du 10/01/2019

--

inscrite afterwork CTSX 08/11/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:22:28.111206+00:00"),
                updated_at = isoparse("2018-12-12 14:22:28.111206+00:00"),
                # tags,
                # reminder
            )

            rnc142 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc142,
                linked_object_contactable=c280,
                done=False,
        
            # persons
            )
            rnc142.persons.add(hespul_user)
            nc142.created_at = isoparse("2018-12-12 14:22:28.111206+00:00")
            nc142.updated_at = isoparse("2018-12-12 14:22:28.111206+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c279, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Loïc",
            last_name="Sanchez",
            email="secretariat@greenergie-installation.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Loïc",
                'last_name':"Sanchez",
                'email':"secretariat@greenergie-installation.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c279.referents.add(hespul_user)
        moo261 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c279,
            organization = o199,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c279.tags.add(t32)
                        
        if contact_created:    
            nc141 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c279,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

inscrit afterwork CTSX 08/11/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:21:17.743215+00:00"),
                updated_at = isoparse("2018-12-12 14:21:17.743215+00:00"),
                # tags,
                # reminder
            )

            rnc141 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc141,
                linked_object_contactable=c279,
                done=False,
        
            # persons
            )
            rnc141.persons.add(hespul_user)
            nc141.created_at = isoparse("2018-12-12 14:21:17.743215+00:00")
            nc141.updated_at = isoparse("2018-12-12 14:21:17.743215+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c275, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Sébastien",
            last_name="Penidon",
            email="sebastien.penidon@ber.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Sébastien",
                'last_name':"Penidon",
                'email':"sebastien.penidon@ber.asso.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c275.referents.add(hespul_user)
        moo257 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c275,
            organization = o196,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c275.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c275.tags.add(t32)
                        
        if contact_created:    
            nc137 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c275,
                note = """relance le 27/08/2019

--

accès démo envoyés le 09/01/2019 :

- identifiant : sebastien.penidon@ber.asso.fr

- mdp : demo_BER_09012019

--

invité au webinaire CTSX 10/01/2019

--

inscrit au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:13:02.019469+00:00"),
                updated_at = isoparse("2018-12-12 14:13:02.019469+00:00"),
                # tags,
                # reminder
            )

            rnc137 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc137,
                linked_object_contactable=c275,
                done=False,
        
            # persons
            )
            rnc137.persons.add(hespul_user)
            nc137.created_at = isoparse("2018-12-12 14:13:02.019469+00:00")
            nc137.updated_at = isoparse("2018-12-12 14:13:02.019469+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c274, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="François",
            last_name="Soubeyrand",
            email="francois.soubeyrand@agence-ecomobilite.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"François",
                'last_name':"Soubeyrand",
                'email':"francois.soubeyrand@agence-ecomobilite.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c274.referents.add(hespul_user)
        moo256 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c274,
            organization = o195,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c274.tags.add(t32)
                        
        if contact_created:    
            nc136 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c274,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invité au webinaire du 15/02/2019

--

invité au webinaire du 10/01/2019

--

inscrit au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:10:21.256480+00:00"),
                updated_at = isoparse("2018-12-12 14:10:21.256480+00:00"),
                # tags,
                # reminder
            )

            rnc136 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc136,
                linked_object_contactable=c274,
                done=False,
        
            # persons
            )
            rnc136.persons.add(hespul_user)
            nc136.created_at = isoparse("2018-12-12 14:10:21.256480+00:00")
            nc136.updated_at = isoparse("2018-12-12 14:10:21.256480+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c273, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Laurence",
            last_name="Guibert",
            email="coordination@fdcivam44.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Laurence",
                'last_name':"Guibert",
                'email':"coordination@fdcivam44.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c273.referents.add(hespul_user)
        moo255 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c273,
            organization = o194,
            use_address_from_organization = True,
            title_in_organization="Directrice",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c273.tags.add(t33)
                        
        if contact_created:    
            nc135 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c273,
                note = """ajouté à coutosuix@googlegroups.com + Confluence le 18/02/2019

--

facture envoyée le 16/01/2019

--

devis envoyé + déploiement

--

suite au webinaire, accès démo envoyés le 14/12/2018

id : coordination@fdcivam44.org

mdp: demo_CIVAM44_14122018

--

inscrite au webinaire CTSX 13/12/2018

--

Bonjour, Je suis à la recherche d'un outil ergonomique et efficace pour notre association (10 à 11 salariés) d'où mon intérêt pour coutosuix. Cordialement Laurence GUIBERT""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:08:02.094439+00:00"),
                updated_at = isoparse("2018-12-12 14:08:02.094439+00:00"),
                # tags,
                # reminder
            )

            rnc135 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc135,
                linked_object_contactable=c273,
                done=False,
        
            # persons
            )
            rnc135.persons.add(hespul_user)
            nc135.created_at = isoparse("2018-12-12 14:08:02.094439+00:00")
            nc135.updated_at = isoparse("2018-12-12 14:08:02.094439+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c272, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Céline",
            last_name="Berard",
            email="berard@alec07.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Céline",
                'last_name':"Berard",
                'email':"berard@alec07.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c272.referents.add(hespul_user)
        moo254 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c272,
            organization = o193,
            use_address_from_organization = True,
            title_in_organization="Responsable administrative et financière",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c272.tags.add(t33)
                        
        if contact_created:    
            nc134 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c272,
                note = """ajouté à coutosuix@googlegroups.com le 18/02/2019

--

inscrite au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:02:33.378993+00:00"),
                updated_at = isoparse("2018-12-12 14:02:33.378993+00:00"),
                # tags,
                # reminder
            )

            rnc134 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc134,
                linked_object_contactable=c272,
                done=False,
        
            # persons
            )
            rnc134.persons.add(hespul_user)
            nc134.created_at = isoparse("2018-12-12 14:02:33.378993+00:00")
            nc134.updated_at = isoparse("2018-12-12 14:02:33.378993+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c270, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Laure",
            last_name="Gardarin",
            email="lgardarin@cress-aura.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Laure",
                'last_name':"Gardarin",
                'email':"lgardarin@cress-aura.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c270.referents.add(hespul_user)
        moo253 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c270,
            organization = o192,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c270.tags.add(t32)
                        
        if contact_created:    
            nc130 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c270,
                note = """invitée au webinaire du 10/01/2019

--

inscrite au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-11 11:31:54.609379+00:00"),
                updated_at = isoparse("2018-12-11 11:31:54.609379+00:00"),
                # tags,
                # reminder
            )

            rnc130 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc130,
                linked_object_contactable=c270,
                done=False,
        
            # persons
            )
            rnc130.persons.add(hespul_user)
            nc130.created_at = isoparse("2018-12-11 11:31:54.609379+00:00")
            nc130.updated_at = isoparse("2018-12-11 11:31:54.609379+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c269, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Boris",
            last_name="Boucher",
            email="boucher@fibois.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Boris",
                'last_name':"Boucher",
                'email':"boucher@fibois.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c269.referents.add(hespul_user)
        moo252 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c269,
            organization = o191,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c269.tags.add(t32)
                        
        if contact_created:    
            nc129 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c269,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invité au webinaire du 15/02/2019

--

invité au webinaire du 10/01/2019

--

inscrit au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-11 11:29:43.471304+00:00"),
                updated_at = isoparse("2018-12-11 11:29:43.471304+00:00"),
                # tags,
                # reminder
            )

            rnc129 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc129,
                linked_object_contactable=c269,
                done=False,
        
            # persons
            )
            rnc129.persons.add(hespul_user)
            nc129.created_at = isoparse("2018-12-11 11:29:43.471304+00:00")
            nc129.updated_at = isoparse("2018-12-11 11:29:43.471304+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c267, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Anne",
            last_name="Chevallier",
            email="direction@adil73.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Anne",
                'last_name':"Chevallier",
                'email':"direction@adil73.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c267.referents.add(hespul_user)
        moo251 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c267,
            organization = o190,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c267.tags.add(t32)
                        
        if contact_created:    
            nc127 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c267,
                note = """inscrite au webinaire du 26/09/19

--

mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invitée au webinaire du 15/02/2019

--

invitée au webinaire du 10/01/2019

--

inscrite au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-11 11:26:36.320012+00:00"),
                updated_at = isoparse("2018-12-11 11:26:36.320012+00:00"),
                # tags,
                # reminder
            )

            rnc127 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc127,
                linked_object_contactable=c267,
                done=False,
        
            # persons
            )
            rnc127.persons.add(hespul_user)
            nc127.created_at = isoparse("2018-12-11 11:26:36.320012+00:00")
            nc127.updated_at = isoparse("2018-12-11 11:26:36.320012+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c264, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Marine",
            last_name="Cariou",
            email="marine.cariou@puy-de-dome.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Marine",
                'last_name':"Cariou",
                'email':"marine.cariou@puy-de-dome.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c264.referents.add(hespul_user)
        moo249 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c264,
            organization = o188,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c264.tags.add(t32)
                        
        if contact_created:    
            nc124 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c264,
                note = """invitée au webinaire du 15/02/2019

--

invitée au webinaire CTSX 10/01/2019

--

inscrite au webinaire CTSX du 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-11 11:21:14.033081+00:00"),
                updated_at = isoparse("2018-12-11 11:21:14.033081+00:00"),
                # tags,
                # reminder
            )

            rnc124 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc124,
                linked_object_contactable=c264,
                done=False,
        
            # persons
            )
            rnc124.persons.add(hespul_user)
            nc124.created_at = isoparse("2018-12-11 11:21:14.033081+00:00")
            nc124.updated_at = isoparse("2018-12-11 11:21:14.033081+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c263, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Arnaud",
            last_name="Martin",
            email="arnaud.martin@agglo-haguenau.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Arnaud",
                'last_name':"Martin",
                'email':"arnaud.martin@agglo-haguenau.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c263.referents.add(hespul_user)
        moo248 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c263,
            organization = o187,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c263.tags.add(t32)
                        
        if contact_created:    
            nc123 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c263,
                note = """invité au webinaire du 15/02/2019

--

inscrit au webinaire du 10/01/2019

--

inscrit au webinaire CTSX du 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-11 11:14:59.891830+00:00"),
                updated_at = isoparse("2018-12-11 11:14:59.891830+00:00"),
                # tags,
                # reminder
            )

            rnc123 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc123,
                linked_object_contactable=c263,
                done=False,
        
            # persons
            )
            rnc123.persons.add(hespul_user)
            nc123.created_at = isoparse("2018-12-11 11:14:59.891830+00:00")
            nc123.updated_at = isoparse("2018-12-11 11:14:59.891830+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c254, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Céline",
            last_name="Nauleau",
            email="celine.nauleau@eiepdl.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Céline",
                'last_name':"Nauleau",
                'email':"celine.nauleau@eiepdl.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0972587881",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c254.referents.add(hespul_user)
        moo239 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c254,
            organization = o179,
            use_address_from_organization = True,
            title_in_organization="Assistance administrative et comptabilité + comm",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c254.tags.add(t33)
                        
        if contact_created:    
            nc106 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c254,
                note = """ajouté à coutosuix@googlegroups.com + Confluence le 18/02/2019

--

facture envoyée le 7 janvier 2019

--

inscrite au webinaire CTSX 13/12/2018

--

envoyer une invitation pour le webinaire CTSX du 13 décembre !

--

Message de celine.nauleau@eiepdl.fr (via le site CTSX) :

Bonjour,

Nous sommes en réflexion sur un potentiel changement de logiciel pour la gestion de nos heures et des projets.

Nous nous demandions si le logiciel Coutosuix pouvait répondre à nos attentes.

Serait-il possible d’échanger pour en savoir un peu plus sur ce logiciel ?

Est-il possible d'avoir une version test ?

Nos besoins : suivi temps salariés (suivant différentes grilles d’analyse : pôle, client, tâche et thématique), charge de travail, suivi des projets, des budgets, avoir une analyse, des comparatifs…

Céline NAULEAU

Association Elise (Vendée - 85)

09.72.58.78.81""",
                pinned = False,
                created_at = isoparse("2018-11-20 14:37:24.018893+00:00"),
                updated_at = isoparse("2018-11-20 14:37:24.018893+00:00"),
                # tags,
                # reminder
            )

            rnc106 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc106,
                linked_object_contactable=c254,
                done=True,
        
                            date=isoparse("2018-11-26"),
                        
            # persons
            )
            rnc106.persons.add(hespul_user)
            nc106.created_at = isoparse("2018-11-20 14:37:24.018893+00:00")
            nc106.updated_at = isoparse("2018-11-20 14:37:24.018893+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c253, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Stéphane",
            last_name="Boussac",
            email="sboussac@trace-software.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Stéphane",
                'last_name':"Boussac",
                'email':"sboussac@trace-software.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c253.referents.add(hespul_user)
        moo238 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c253,
            organization = o178,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c253.tags.add(t30)
                        
        if contact_created:    
            nc105 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c253,
                note = """relance mail le 27/08/2019

--

accès démo COUTOSUIX envoyés le 20 novembre 2018 :

- id : sboussac@trace-software.com

- mot de passe : demo_TRACESOFTWARE_20112018""",
                pinned = False,
                created_at = isoparse("2018-11-20 14:19:03.761736+00:00"),
                updated_at = isoparse("2018-11-20 14:19:03.761736+00:00"),
                # tags,
                # reminder
            )

            rnc105 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc105,
                linked_object_contactable=c253,
                done=False,
        
            # persons
            )
            rnc105.persons.add(hespul_user)
            nc105.created_at = isoparse("2018-11-20 14:19:03.761736+00:00")
            nc105.updated_at = isoparse("2018-11-20 14:19:03.761736+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c250, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Damien",
            last_name="Dumollard",
            email="damien.dumollard@smiril.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Damien",
                'last_name':"Dumollard",
                'email':"damien.dumollard@smiril.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0437201921",
                'mobile_phone':"0615164943",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c250.referents.add(hespul_user)
        moo235 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c250,
            organization = o176,
            use_address_from_organization = True,
            title_in_organization="Directeur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c250.tags.add(t33)
                        
        if contact_created:    
            nc100 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c250,
                note = """ajouté à coutosuix@googlegroups.com + Confluence le 18/02/2019

--

accès démo envoyés le 14 novembre 2019 :

- identifiant : damien.dumollard@smiril.fr

- mot de passe : demo_SMIRIL_14112018""",
                pinned = False,
                created_at = isoparse("2018-11-20 13:50:48.427013+00:00"),
                updated_at = isoparse("2018-11-20 13:50:48.427013+00:00"),
                # tags,
                # reminder
            )

            rnc100 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc100,
                linked_object_contactable=c250,
                done=False,
        
            # persons
            )
            rnc100.persons.add(hespul_user)
            nc100.created_at = isoparse("2018-11-20 13:50:48.427013+00:00")
            nc100.updated_at = isoparse("2018-11-20 13:50:48.427013+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c248, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Eric",
            last_name="Lhôte",
            email="e.lhote@renovation-doremi.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Eric",
                'last_name':"Lhôte",
                'email':"e.lhote@renovation-doremi.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0481660272",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c248.referents.add(hespul_user)
        moo233 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c248,
            organization = o174,
            use_address_from_organization = True,
            title_in_organization="Directeur administratif et financier",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c248.tags.add(t33)
                        
        if contact_created:    
            nc98 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c248,
                note = """ajouté à coutosuix@googlegroups.com + Conluence le 18/02/2019

--

Facture envoyée le 4 janvier 2019

--

accès demo envoyé le 14 novembre 2018 :

- identifiant : e.lhote@renovation-doremi.com

- mot de passe : demo_DOREMI_14112018""",
                pinned = False,
                created_at = isoparse("2018-11-14 14:15:45.628861+00:00"),
                updated_at = isoparse("2018-11-14 14:15:45.628861+00:00"),
                # tags,
                # reminder
            )

            rnc98 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc98,
                linked_object_contactable=c248,
                done=False,
        
            # persons
            )
            rnc98.persons.add(hespul_user)
            nc98.created_at = isoparse("2018-11-14 14:15:45.628861+00:00")
            nc98.updated_at = isoparse("2018-11-14 14:15:45.628861+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c384, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Maël",
            last_name="Ollivro",
            email="mo@alisee.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Maël",
                'last_name':"Ollivro",
                'email':"mo@alisee.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0285291640",
                'mobile_phone':"0632514105",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c384.referents.add(hespul_user)
        moo139 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c384,
            organization = o122,
            use_address_from_organization = True,
            title_in_organization="Coordinateur de réseaux",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c384.tags.add(t33)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c78, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Jean-Paul",
            last_name="AUCHER",
            email="contact@aloen.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Jean-Paul",
                'last_name':"AUCHER",
                'email':"contact@aloen.fr",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c78.referents.add(hespul_user)
        moo78 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c78,
            organization = o71,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c74, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Arnaud",
            last_name="Clappier",
            email="arnaud.clappier@coopawatt.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Arnaud",
                'last_name':"Clappier",
                'email':"arnaud.clappier@coopawatt.fr",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c74.referents.add(hespul_user)
        moo74 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c74,
            organization = o68,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c7, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Déborah",
            last_name="Turon-Lagot",
            email="deborah.turon-lagot@solagro.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Déborah",
                'last_name':"Turon-Lagot",
                'email':"deborah.turon-lagot@solagro.asso.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c7.referents.add(hespul_user)
        moo7 = MemberOfOrganization.objects.create(
            owning_group=hespul_group,
            contact = c7,
            organization = o5,
            use_address_from_organization = True,
            title_in_organization="Chargée de prospection et communication",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:    
            nc7 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c7,
                note = """rappeler Solagro pour REX mécénat""",
                pinned = False,
                created_at = isoparse("2018-09-06 12:46:01.806480+00:00"),
                updated_at = isoparse("2018-09-06 12:46:01.806480+00:00"),
                # tags,
                # reminder
            )

            rnc7 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc7,
                linked_object_contactable=c7,
                done=True,
        
                            date=isoparse("2018-10-29"),
                        
            # persons
            )
            rnc7.persons.add(hespul_user)
            nc7.created_at = isoparse("2018-09-06 12:46:01.806480+00:00")
            nc7.updated_at = isoparse("2018-09-06 12:46:01.806480+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c437, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Éric",
            last_name="Chanel",
            email="eric.chanel@apf.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Éric",
                'last_name':"Chanel",
                'email':"eric.chanel@apf.asso.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c437.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c437.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c437.tags.add(t32)
                        
        if contact_created:
            nc328 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c437,
                note = """accès démo envoyés le 13/12/19 :

id : eric.chanel@apf.asso.fr

mdp : demo_APF_13122019""",
                pinned = False,
                created_at = isoparse("2019-12-13 14:09:05.567279+00:00"),
                updated_at = isoparse("2019-12-13 14:09:05.567279+00:00"),
                # tags,
                # reminder
            )

            rnc328 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc328,
                linked_object_contactable=c437,
                done=False,
        
            # persons
            )
            rnc328.persons.add(hespul_user)
            nc328.created_at = isoparse("2019-12-13 14:09:05.567279+00:00")
            nc328.updated_at = isoparse("2019-12-13 14:09:05.567279+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c432, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Maryline",
            last_name="Sure",
            email="dev-pfm63@orange.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Maryline",
                'last_name':"Sure",
                'email':"dev-pfm63@orange.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c432.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c432.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c432.tags.add(t32)
                        
        if contact_created:
            nc324 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c432,
                note = """accès démo envoyés le 28/10/19 :

id : dev-pfm63@orange.fr

mdp : demo_PFM63_28102019

--

participation au webinaire du 24/10/19""",
                pinned = False,
                created_at = isoparse("2019-10-28 15:11:40.815085+00:00"),
                updated_at = isoparse("2019-10-28 15:11:40.815085+00:00"),
                # tags,
                # reminder
            )

            rnc324 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc324,
                linked_object_contactable=c432,
                done=False,
        
            # persons
            )
            rnc324.persons.add(hespul_user)
            nc324.created_at = isoparse("2019-10-28 15:11:40.815085+00:00")
            nc324.updated_at = isoparse("2019-10-28 15:11:40.815085+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c431, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Dorothée",
            last_name="Jouan",
            email="d.jouan@cpepesc-lorraine.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Dorothée",
                'last_name':"Jouan",
                'email':"d.jouan@cpepesc-lorraine.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c431.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c431.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c431.tags.add(t32)
                        
        if contact_created:
            nc323 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c431,
                note = """accès démo envoyés le 28/10/19 :

id : d.jouan@cpepesc-lorraine.fr

mdp : demo_CPEPESC_28102019

--

participation au webinaire du 24/10/19""",
                pinned = False,
                created_at = isoparse("2019-10-28 15:04:21.552180+00:00"),
                updated_at = isoparse("2019-10-28 15:04:21.552180+00:00"),
                # tags,
                # reminder
            )

            rnc323 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc323,
                linked_object_contactable=c431,
                done=False,
        
            # persons
            )
            rnc323.persons.add(hespul_user)
            nc323.created_at = isoparse("2019-10-28 15:04:21.552180+00:00")
            nc323.updated_at = isoparse("2019-10-28 15:04:21.552180+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c430, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Christelle",
            last_name="Lomenech",
            email="christellelomenech@aloen.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Christelle",
                'last_name':"Lomenech",
                'email':"christellelomenech@aloen.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c430.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c430.tags.add(t32)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c429, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Valérie",
            last_name="Le Dorner",
            email="valerieledorner@aloen.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Valérie",
                'last_name':"Le Dorner",
                'email':"valerieledorner@aloen.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c429.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c429.tags.add(t32)
                        
        if contact_created:
            nc322 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c429,
                note = """participation au webinaire CTSX du 24/10/19""",
                pinned = False,
                created_at = isoparse("2019-10-28 14:59:00.298410+00:00"),
                updated_at = isoparse("2019-10-28 14:59:00.298410+00:00"),
                # tags,
                # reminder
            )

            rnc322 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc322,
                linked_object_contactable=c429,
                done=False,
        
            # persons
            )
            rnc322.persons.add(hespul_user)
            nc322.created_at = isoparse("2019-10-28 14:59:00.298410+00:00")
            nc322.updated_at = isoparse("2019-10-28 14:59:00.298410+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c428, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Charlotte",
            last_name="Braleret",
            email="charlotte.braleret@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Charlotte",
                'last_name':"Braleret",
                'email':"charlotte.braleret@gmail.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c428.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c428.tags.add(t32)
                        
        if contact_created:
            nc321 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c428,
                note = """participation au webinaire du 24/10/2019""",
                pinned = False,
                created_at = isoparse("2019-10-28 14:57:33.147959+00:00"),
                updated_at = isoparse("2019-10-28 14:57:33.147959+00:00"),
                # tags,
                # reminder
            )

            rnc321 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc321,
                linked_object_contactable=c428,
                done=False,
        
            # persons
            )
            rnc321.persons.add(hespul_user)
            nc321.created_at = isoparse("2019-10-28 14:57:33.147959+00:00")
            nc321.updated_at = isoparse("2019-10-28 14:57:33.147959+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c427, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Corinne",
            last_name="Schadkowski",
            email="corinne.schadkowski@appa.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Corinne",
                'last_name':"Schadkowski",
                'email':"corinne.schadkowski@appa.asso.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c427.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c427.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c427.tags.add(t32)
                        
        if contact_created:
            nc320 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c427,
                note = """accès démo envoyés le 28/10/19 :

id : corinne.schadkowski@appa.asso.fr

mdp : demo_APPA_28102019

--

participation au webinaire du 24/10/19""",
                pinned = False,
                created_at = isoparse("2019-10-28 14:54:26.952739+00:00"),
                updated_at = isoparse("2019-10-28 14:54:26.952739+00:00"),
                # tags,
                # reminder
            )

            rnc320 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc320,
                linked_object_contactable=c427,
                done=False,
        
            # persons
            )
            rnc320.persons.add(hespul_user)
            nc320.created_at = isoparse("2019-10-28 14:54:26.952739+00:00")
            nc320.updated_at = isoparse("2019-10-28 14:54:26.952739+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c426, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Marine",
            last_name="Flodrops",
            email="mflodrops@groupe-eos.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Marine",
                'last_name':"Flodrops",
                'email':"mflodrops@groupe-eos.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c426.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c426.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c426.tags.add(t32)
                        
        if contact_created:
            nc319 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c426,
                note = """accès démo envoyés le 28/10/19 :

id : mflodrops@groupe-eos.fr

mdp : demo_EOS_28102019

--

participation au webinaire du 24/10/19""",
                pinned = False,
                created_at = isoparse("2019-10-28 14:49:46.208616+00:00"),
                updated_at = isoparse("2019-10-28 14:49:46.208616+00:00"),
                # tags,
                # reminder
            )

            rnc319 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc319,
                linked_object_contactable=c426,
                done=False,
        
            # persons
            )
            rnc319.persons.add(hespul_user)
            nc319.created_at = isoparse("2019-10-28 14:49:46.208616+00:00")
            nc319.updated_at = isoparse("2019-10-28 14:49:46.208616+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c420, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Bruno",
            last_name="Livory",
            email="brunolivory@aloen.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Bruno",
                'last_name':"Livory",
                'email':"brunolivory@aloen.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c420.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c420.tags.add(t32)
                        
        if contact_created:
            nc305 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c420,
                note = """inscrit ua webinaire du 26 sept 19""",
                pinned = False,
                created_at = isoparse("2019-09-25 09:17:18.865118+00:00"),
                updated_at = isoparse("2019-09-25 09:17:18.865118+00:00"),
                # tags,
                # reminder
            )

            rnc305 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc305,
                linked_object_contactable=c420,
                done=False,
        
            # persons
            )
            rnc305.persons.add(hespul_user)
            nc305.created_at = isoparse("2019-09-25 09:17:18.865118+00:00")
            nc305.updated_at = isoparse("2019-09-25 09:17:18.865118+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c419, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Lisa",
            last_name="Croyere",
            email="lisacroyere@aloen.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Lisa",
                'last_name':"Croyere",
                'email':"lisacroyere@aloen.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c419.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c419.tags.add(t32)
                        
        if contact_created:
            nc304 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c419,
                note = """inscrite au webinaire du 26/09/2019""",
                pinned = False,
                created_at = isoparse("2019-09-25 09:16:27.573270+00:00"),
                updated_at = isoparse("2019-09-25 09:16:27.573270+00:00"),
                # tags,
                # reminder
            )

            rnc304 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc304,
                linked_object_contactable=c419,
                done=False,
        
            # persons
            )
            rnc304.persons.add(hespul_user)
            nc304.created_at = isoparse("2019-09-25 09:16:27.573270+00:00")
            nc304.updated_at = isoparse("2019-09-25 09:16:27.573270+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c417, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Benoît",
            last_name="Verzat",
            email="b.verzat@institut-negawatt.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Benoît",
                'last_name':"Verzat",
                'email':"b.verzat@institut-negawatt.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c417.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c417.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c416, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Alexandre",
            last_name="Bambagini",
            email="a.bambagini@soliha31.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Alexandre",
                'last_name':"Bambagini",
                'email':"a.bambagini@soliha31.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c416.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c416.tags.add(t32)
                        
        if contact_created:
            nc302 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c416,
                note = """inscrit au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:19:16.649289+00:00"),
                updated_at = isoparse("2019-09-16 13:19:16.649289+00:00"),
                # tags,
                # reminder
            )

            rnc302 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc302,
                linked_object_contactable=c416,
                done=False,
        
            # persons
            )
            rnc302.persons.add(hespul_user)
            nc302.created_at = isoparse("2019-09-16 13:19:16.649289+00:00")
            nc302.updated_at = isoparse("2019-09-16 13:19:16.649289+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c415, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Adrien",
            last_name="Caupert",
            email="adrien.caupert@lilo.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Adrien",
                'last_name':"Caupert",
                'email':"adrien.caupert@lilo.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c415.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c415.tags.add(t32)
                        
        if contact_created:
            nc301 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c415,
                note = """participation au webinaire du 24/10/2019

--

inscrit au webinaire du 26/09/19

projet de création d'entreprise""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:15:48.976986+00:00"),
                updated_at = isoparse("2019-09-16 13:15:48.976986+00:00"),
                # tags,
                # reminder
            )

            rnc301 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc301,
                linked_object_contactable=c415,
                done=False,
        
            # persons
            )
            rnc301.persons.add(hespul_user)
            nc301.created_at = isoparse("2019-09-16 13:15:48.976986+00:00")
            nc301.updated_at = isoparse("2019-09-16 13:15:48.976986+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c414, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Jean-Marc",
            last_name="Armaroli",
            email="jeanmarc.armaroli@cros-nouvelle-aquitaine.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Jean-Marc",
                'last_name':"Armaroli",
                'email':"jeanmarc.armaroli@cros-nouvelle-aquitaine.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c414.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c414.tags.add(t32)
                        
        if contact_created:
            nc300 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c414,
                note = """inscrit au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:13:01.511976+00:00"),
                updated_at = isoparse("2019-09-16 13:13:01.511976+00:00"),
                # tags,
                # reminder
            )

            rnc300 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc300,
                linked_object_contactable=c414,
                done=False,
        
            # persons
            )
            rnc300.persons.add(hespul_user)
            nc300.created_at = isoparse("2019-09-16 13:13:01.511976+00:00")
            nc300.updated_at = isoparse("2019-09-16 13:13:01.511976+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c413, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Hervé",
            last_name="Pennarun",
            email="herve.pennarun@bretagne-vivante.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Hervé",
                'last_name':"Pennarun",
                'email':"herve.pennarun@bretagne-vivante.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c413.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c413.tags.add(t32)
                        
        if contact_created:
            nc299 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c413,
                note = """inscrit au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:11:19.549775+00:00"),
                updated_at = isoparse("2019-09-16 13:11:19.549775+00:00"),
                # tags,
                # reminder
            )

            rnc299 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc299,
                linked_object_contactable=c413,
                done=False,
        
            # persons
            )
            rnc299.persons.add(hespul_user)
            nc299.created_at = isoparse("2019-09-16 13:11:19.549775+00:00")
            nc299.updated_at = isoparse("2019-09-16 13:11:19.549775+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c412, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Yann",
            last_name="Berdellou",
            email="raf@bretagne-vivante.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Yann",
                'last_name':"Berdellou",
                'email':"raf@bretagne-vivante.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c412.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c412.tags.add(t32)
                        
        if contact_created:
            nc298 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c412,
                note = """inscrit au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:09:55.712073+00:00"),
                updated_at = isoparse("2019-09-16 13:09:55.712073+00:00"),
                # tags,
                # reminder
            )

            rnc298 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc298,
                linked_object_contactable=c412,
                done=False,
        
            # persons
            )
            rnc298.persons.add(hespul_user)
            nc298.created_at = isoparse("2019-09-16 13:09:55.712073+00:00")
            nc298.updated_at = isoparse("2019-09-16 13:09:55.712073+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c411, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Henri",
            last_name="Nantillet",
            email="h.nantillet@institut-negawatt.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Henri",
                'last_name':"Nantillet",
                'email':"h.nantillet@institut-negawatt.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c411.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c411.tags.add(t33)
                        
        if contact_created:
            nc297 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c411,
                note = """inscrit au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:07:56.385682+00:00"),
                updated_at = isoparse("2019-09-16 13:07:56.385682+00:00"),
                # tags,
                # reminder
            )

            rnc297 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc297,
                linked_object_contactable=c411,
                done=False,
        
            # persons
            )
            rnc297.persons.add(hespul_user)
            nc297.created_at = isoparse("2019-09-16 13:07:56.385682+00:00")
            nc297.updated_at = isoparse("2019-09-16 13:07:56.385682+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c410, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Xavier",
            last_name="Grimault",
            email="xgrimault@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Xavier",
                'last_name':"Grimault",
                'email':"xgrimault@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c410.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c410.tags.add(t32)
                        
        if contact_created:
            nc296 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c410,
                note = """inscrit au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:06:31.188497+00:00"),
                updated_at = isoparse("2019-09-16 13:06:31.188497+00:00"),
                # tags,
                # reminder
            )

            rnc296 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc296,
                linked_object_contactable=c410,
                done=False,
        
            # persons
            )
            rnc296.persons.add(hespul_user)
            nc296.created_at = isoparse("2019-09-16 13:06:31.188497+00:00")
            nc296.updated_at = isoparse("2019-09-16 13:06:31.188497+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c409, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Fatima",
            last_name="Saadan",
            email="eiapicassociation@yahoo.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Fatima",
                'last_name':"Saadan",
                'email':"eiapicassociation@yahoo.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c409.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c409.tags.add(t32)
                        
        if contact_created:
            nc295 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c409,
                note = """inscrite au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:05:08.195318+00:00"),
                updated_at = isoparse("2019-09-16 13:05:08.195318+00:00"),
                # tags,
                # reminder
            )

            rnc295 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc295,
                linked_object_contactable=c409,
                done=False,
        
            # persons
            )
            rnc295.persons.add(hespul_user)
            nc295.created_at = isoparse("2019-09-16 13:05:08.195318+00:00")
            nc295.updated_at = isoparse("2019-09-16 13:05:08.195318+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c408, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Anne",
            last_name="Blondel",
            email="anneb@exploradome.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Anne",
                'last_name':"Blondel",
                'email':"anneb@exploradome.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c408.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c408.tags.add(t32)
                        
        if contact_created:
            nc294 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c408,
                note = """accès démo envoyés le 27/09/2019 :

id : anneb@exploradome.com

mdp : demo_EXPLORADOME_2019

--

participa au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:03:34.130690+00:00"),
                updated_at = isoparse("2019-09-16 13:03:34.130690+00:00"),
                # tags,
                # reminder
            )

            rnc294 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc294,
                linked_object_contactable=c408,
                done=False,
        
            # persons
            )
            rnc294.persons.add(hespul_user)
            nc294.created_at = isoparse("2019-09-16 13:03:34.130690+00:00")
            nc294.updated_at = isoparse("2019-09-16 13:03:34.130690+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c407, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Hélène",
            last_name="Anselme",
            email="helene@consoletcie.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Hélène",
                'last_name':"Anselme",
                'email':"helene@consoletcie.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c407.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c407.tags.add(t32)
                        
        if contact_created:
            nc293 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c407,
                note = """inscrite au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 13:02:05.685983+00:00"),
                updated_at = isoparse("2019-09-16 13:02:05.685983+00:00"),
                # tags,
                # reminder
            )

            rnc293 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc293,
                linked_object_contactable=c407,
                done=False,
        
            # persons
            )
            rnc293.persons.add(hespul_user)
            nc293.created_at = isoparse("2019-09-16 13:02:05.685983+00:00")
            nc293.updated_at = isoparse("2019-09-16 13:02:05.685983+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c406, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Mélanie",
            last_name="Boghos",
            email="melanieboghos@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Mélanie",
                'last_name':"Boghos",
                'email':"melanieboghos@gmail.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c406.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c406.tags.add(t32)
                        
        if contact_created:
            nc292 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c406,
                note = """inscrite au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 12:55:34.028420+00:00"),
                updated_at = isoparse("2019-09-16 12:55:34.028420+00:00"),
                # tags,
                # reminder
            )

            rnc292 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc292,
                linked_object_contactable=c406,
                done=False,
        
            # persons
            )
            rnc292.persons.add(hespul_user)
            nc292.created_at = isoparse("2019-09-16 12:55:34.028420+00:00")
            nc292.updated_at = isoparse("2019-09-16 12:55:34.028420+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c405, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Isabelle",
            last_name="Ruisseau",
            email="i.ruisseau@uriopss-pdl.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Isabelle",
                'last_name':"Ruisseau",
                'email':"i.ruisseau@uriopss-pdl.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c405.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c405.tags.add(t32)
                        
        if contact_created:
            nc291 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c405,
                note = """inscrite au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 12:52:21.246861+00:00"),
                updated_at = isoparse("2019-09-16 12:52:21.246861+00:00"),
                # tags,
                # reminder
            )

            rnc291 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc291,
                linked_object_contactable=c405,
                done=False,
        
            # persons
            )
            rnc291.persons.add(hespul_user)
            nc291.created_at = isoparse("2019-09-16 12:52:21.246861+00:00")
            nc291.updated_at = isoparse("2019-09-16 12:52:21.246861+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c404, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Anne",
            last_name="Fily",
            email="anne.fily@financite.be",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Anne",
                'last_name':"Fily",
                'email':"anne.fily@financite.be",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c404.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c404.tags.add(t32)
                        
        if contact_created:
            nc289 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c404,
                note = """inscrite au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 12:40:25.640588+00:00"),
                updated_at = isoparse("2019-09-16 12:40:25.640588+00:00"),
                # tags,
                # reminder
            )

            rnc289 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc289,
                linked_object_contactable=c404,
                done=False,
        
            # persons
            )
            rnc289.persons.add(hespul_user)
            nc289.created_at = isoparse("2019-09-16 12:40:25.640588+00:00")
            nc289.updated_at = isoparse("2019-09-16 12:40:25.640588+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c403, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Raphaël",
            last_name="Chatelet",
            email="raphael.chatelet@energy-cities.eu",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Raphaël",
                'last_name':"Chatelet",
                'email':"raphael.chatelet@energy-cities.eu",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c403.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c403.tags.add(t32)
                        
        if contact_created:
            nc286 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c403,
                note = """webinaire dédié mercredi 4 septembre 2019""",
                pinned = False,
                created_at = isoparse("2019-09-02 08:20:44.075291+00:00"),
                updated_at = isoparse("2019-09-02 08:20:44.075291+00:00"),
                # tags,
                # reminder
            )

            rnc286 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc286,
                linked_object_contactable=c403,
                done=False,
        
            # persons
            )
            rnc286.persons.add(hespul_user)
            nc286.created_at = isoparse("2019-09-02 08:20:44.075291+00:00")
            nc286.updated_at = isoparse("2019-09-02 08:20:44.075291+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c401, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Céline",
            last_name="Fallot-Buclet",
            email="celine.fallot@tenerrdis.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Céline",
                'last_name':"Fallot-Buclet",
                'email':"celine.fallot@tenerrdis.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c401.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c401.tags.add(t32)
                        
        if contact_created:
            nc278 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c401,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

prise de contact via Marc""",
                pinned = False,
                created_at = isoparse("2019-08-28 10:34:08.851596+00:00"),
                updated_at = isoparse("2019-08-28 10:34:08.851596+00:00"),
                # tags,
                # reminder
            )

            rnc278 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc278,
                linked_object_contactable=c401,
                done=False,
        
            # persons
            )
            rnc278.persons.add(hespul_user)
            nc278.created_at = isoparse("2019-08-28 10:34:08.851596+00:00")
            nc278.updated_at = isoparse("2019-08-28 10:34:08.851596+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c400, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Éric",
            last_name="Drouilly",
            email="eie.ecrouves@orange.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Éric",
                'last_name':"Drouilly",
                'email':"eie.ecrouves@orange.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c400.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c400.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c400.tags.add(t32)
                        
        if contact_created:
            nc276 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c400,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019""",
                pinned = False,
                created_at = isoparse("2019-08-27 14:26:20.966334+00:00"),
                updated_at = isoparse("2019-08-27 14:26:20.966334+00:00"),
                # tags,
                # reminder
            )

            rnc276 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc276,
                linked_object_contactable=c400,
                done=False,
        
            # persons
            )
            rnc276.persons.add(hespul_user)
            nc276.created_at = isoparse("2019-08-27 14:26:20.966334+00:00")
            nc276.updated_at = isoparse("2019-08-27 14:26:20.966334+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c399, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Axel",
            last_name="Cavaleri",
            email="acavaleri@fnab.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Axel",
                'last_name':"Cavaleri",
                'email':"acavaleri@fnab.org",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c399.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c399.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c399.tags.add(t32)
                        
        if contact_created:
            nc275 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c399,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019""",
                pinned = False,
                created_at = isoparse("2019-08-27 14:22:43.587461+00:00"),
                updated_at = isoparse("2019-08-27 14:22:43.587461+00:00"),
                # tags,
                # reminder
            )

            rnc275 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc275,
                linked_object_contactable=c399,
                done=False,
        
            # persons
            )
            rnc275.persons.add(hespul_user)
            nc275.created_at = isoparse("2019-08-27 14:22:43.587461+00:00")
            nc275.updated_at = isoparse("2019-08-27 14:22:43.587461+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c398, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="nsevaux",
            last_name="",
            email="nsevauxgabbanjou@orange.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"nsevaux",
                'last_name':"",
                'email':"nsevauxgabbanjou@orange.fr",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c398.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c398.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c398.tags.add(t32)
                        
        if contact_created:
            nc274 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c398,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019""",
                pinned = False,
                created_at = isoparse("2019-08-27 14:19:05.415911+00:00"),
                updated_at = isoparse("2019-08-27 14:19:05.415911+00:00"),
                # tags,
                # reminder
            )

            rnc274 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc274,
                linked_object_contactable=c398,
                done=False,
        
            # persons
            )
            rnc274.persons.add(hespul_user)
            nc274.created_at = isoparse("2019-08-27 14:19:05.415911+00:00")
            nc274.updated_at = isoparse("2019-08-27 14:19:05.415911+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c397, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Coordination",
            last_name="",
            email="cab.coordination@biopaysdelaloire.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Coordination",
                'last_name':"",
                'email':"cab.coordination@biopaysdelaloire.fr",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c397.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c397.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c397.tags.add(t32)
                        
        if contact_created:
            nc272 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c397,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019""",
                pinned = False,
                created_at = isoparse("2019-08-27 14:09:21.307685+00:00"),
                updated_at = isoparse("2019-08-27 14:09:21.307685+00:00"),
                # tags,
                # reminder
            )

            rnc272 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc272,
                linked_object_contactable=c397,
                done=False,
        
            # persons
            )
            rnc272.persons.add(hespul_user)
            nc272.created_at = isoparse("2019-08-27 14:09:21.307685+00:00")
            nc272.updated_at = isoparse("2019-08-27 14:09:21.307685+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c396, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Coordination",
            last_name="",
            email="coordination@gab72.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Coordination",
                'last_name':"",
                'email':"coordination@gab72.org",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c396.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c396.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c396.tags.add(t32)
                        
        if contact_created:
            nc271 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c396,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019""",
                pinned = False,
                created_at = isoparse("2019-08-27 14:06:08.403826+00:00"),
                updated_at = isoparse("2019-08-27 14:06:08.403826+00:00"),
                # tags,
                # reminder
            )

            rnc271 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc271,
                linked_object_contactable=c396,
                done=False,
        
            # persons
            )
            rnc271.persons.add(hespul_user)
            nc271.created_at = isoparse("2019-08-27 14:06:08.403826+00:00")
            nc271.updated_at = isoparse("2019-08-27 14:06:08.403826+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c384, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Maël",
            last_name="Ollivro",
            email="mo@alisee.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Maël",
                'last_name':"Ollivro",
                'email':"mo@alisee.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0285291640",
                'mobile_phone':"0632514105",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c384.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c384.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c378, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Rose-Marie",
            last_name="Di Donato",
            email="rmdidonato@resacoop.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Rose-Marie",
                'last_name':"Di Donato",
                'email':"rmdidonato@resacoop.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0472778767",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c378.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c378.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c378.tags.add(t32)
                        
        if contact_created:
            nc277 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c378,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019""",
                pinned = False,
                created_at = isoparse("2019-08-27 14:29:09.573555+00:00"),
                updated_at = isoparse("2019-08-27 14:29:09.573555+00:00"),
                # tags,
                # reminder
            )

            rnc277 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc277,
                linked_object_contactable=c378,
                done=False,
        
            # persons
            )
            rnc277.persons.add(hespul_user)
            nc277.created_at = isoparse("2019-08-27 14:29:09.573555+00:00")
            nc277.updated_at = isoparse("2019-08-27 14:29:09.573555+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c377, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Frédéric",
            last_name="Khadri",
            email="entrepreneuriat@innovales.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Frédéric",
                'last_name':"Khadri",
                'email':"entrepreneuriat@innovales.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c377.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c377.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c377.tags.add(t32)
                        
        if contact_created:
            nc273 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c377,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019""",
                pinned = False,
                created_at = isoparse("2019-08-27 14:13:22.976226+00:00"),
                updated_at = isoparse("2019-08-27 14:13:22.976226+00:00"),
                # tags,
                # reminder
            )

            rnc273 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc273,
                linked_object_contactable=c377,
                done=False,
        
            # persons
            )
            rnc273.persons.add(hespul_user)
            nc273.created_at = isoparse("2019-08-27 14:13:22.976226+00:00")
            nc273.updated_at = isoparse("2019-08-27 14:13:22.976226+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c368, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Valérie",
            last_name="Tourrette",
            email="vtourrette@lyon-confluence.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Valérie",
                'last_name':"Tourrette",
                'email':"vtourrette@lyon-confluence.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c368.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c368.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c367, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Christian",
            last_name="Couturier",
            email="christian.couturier@solagro.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Christian",
                'last_name':"Couturier",
                'email':"christian.couturier@solagro.asso.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c367.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c367.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c366, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Madeleine",
            last_name="Charru",
            email="madeleine.charru@solagro.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Madeleine",
                'last_name':"Charru",
                'email':"madeleine.charru@solagro.asso.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c366.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c366.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c365, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Claudia",
            last_name="Boude",
            email="claudia.boude@gefosat.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Claudia",
                'last_name':"Boude",
                'email':"claudia.boude@gefosat.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c365.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c365.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c364, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Sandrine",
            last_name="Buresi",
            email="sandrine.buresi@gefosat.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Sandrine",
                'last_name':"Buresi",
                'email':"sandrine.buresi@gefosat.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c364.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c364.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c363, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Janette",
            last_name="Benouahab",
            email="janette.benouahab@gefosat.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Janette",
                'last_name':"Benouahab",
                'email':"janette.benouahab@gefosat.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c363.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c363.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c362, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Cédric",
            last_name="Fosset",
            email="cfosset@evoly-consulting.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Cédric",
                'last_name':"Fosset",
                'email':"cfosset@evoly-consulting.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c362.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c362.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c361, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Arnaud",
            last_name="Pougnier",
            email="apougnier@evoly-consulting.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Arnaud",
                'last_name':"Pougnier",
                'email':"apougnier@evoly-consulting.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c361.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c361.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c360, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Christophe",
            last_name="Lachaise",
            email="christophe.lachaise@ecopole.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Christophe",
                'last_name':"Lachaise",
                'email':"christophe.lachaise@ecopole.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c360.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c360.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c359, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Jean-Mickaël",
            last_name="Digbo",
            email="jm.digbo@renovation-doremi.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Jean-Mickaël",
                'last_name':"Digbo",
                'email':"jm.digbo@renovation-doremi.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c359.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c359.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c358, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="David",
            last_name="Quinton",
            email="david.quinton@cpie-mayenne.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"David",
                'last_name':"Quinton",
                'email':"david.quinton@cpie-mayenne.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c358.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c358.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c357, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Jean-Baptiste",
            last_name="Lebrun",
            email="jeanbaptiste.lebrun@cler.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Jean-Baptiste",
                'last_name':"Lebrun",
                'email':"jeanbaptiste.lebrun@cler.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c357.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c357.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c356, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Bouchra",
            last_name="Zeroual",
            email="bouchra.zeroual@cler.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Bouchra",
                'last_name':"Zeroual",
                'email':"bouchra.zeroual@cler.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c356.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c356.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c355, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Radhia",
            last_name="Berdaoui",
            email="radhia.berdaoui@cler.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Radhia",
                'last_name':"Berdaoui",
                'email':"radhia.berdaoui@cler.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c355.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c355.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c354, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Laure",
            last_name="Voron",
            email="laure.voron@asder.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Laure",
                'last_name':"Voron",
                'email':"laure.voron@asder.asso.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c354.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c354.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c353, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Delphine",
            last_name="Mugnier",
            email="delphine.mugnier@asder.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Delphine",
                'last_name':"Mugnier",
                'email':"delphine.mugnier@asder.asso.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c353.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c353.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c352, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Corine",
            last_name="Vial",
            email="corine.vial@asder.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Corine",
                'last_name':"Vial",
                'email':"corine.vial@asder.asso.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c352.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c352.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c351, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Christine",
            last_name="Besson",
            email="christine.besson@asder.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Christine",
                'last_name':"Besson",
                'email':"christine.besson@asder.asso.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c351.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c351.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c350, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Claire",
            last_name="Hurtaux",
            email="hurtaux@alec07.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Claire",
                'last_name':"Hurtaux",
                'email':"hurtaux@alec07.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c350.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c350.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c349, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Julien",
            last_name="Bouron",
            email="jb@alisee.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Julien",
                'last_name':"Bouron",
                'email':"jb@alisee.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c349.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c349.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c347, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Hélène",
            last_name="Launay",
            email="helene.launay@alisee.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Hélène",
                'last_name':"Launay",
                'email':"helene.launay@alisee.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c347.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c347.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c346, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Sylvia",
            last_name="Mouda",
            email="sm@alisee.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Sylvia",
                'last_name':"Mouda",
                'email':"sm@alisee.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c346.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c346.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c345, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Nathalie",
            last_name="Rocha da Silva",
            email="nathalie.rochadasilva@alec-lyon.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Nathalie",
                'last_name':"Rocha da Silva",
                'email':"nathalie.rochadasilva@alec-lyon.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c345.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c345.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c344, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Marie-Laure",
            last_name="Ladret",
            email="marie-laure.ladret@alec-lyon.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Marie-Laure",
                'last_name':"Ladret",
                'email':"marie-laure.ladret@alec-lyon.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c344.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c344.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c343, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Eric",
            last_name="Bergès",
            email="eric.berges@alec-lyon.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Eric",
                'last_name':"Bergès",
                'email':"eric.berges@alec-lyon.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c343.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c343.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c342, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Florent",
            last_name="Fenault",
            email="florent.fenault@alec27.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Florent",
                'last_name':"Fenault",
                'email':"florent.fenault@alec27.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c342.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c342.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c341, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Joseph",
            last_name="Bourez",
            email="bourez@alec07.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Joseph",
                'last_name':"Bourez",
                'email':"bourez@alec07.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c341.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c341.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c340, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Benoît",
            last_name="Petitcolas",
            email="bpetitcolas@ageden38.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Benoît",
                'last_name':"Petitcolas",
                'email':"bpetitcolas@ageden38.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c340.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c340.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c339, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Julien",
            last_name="Ducrotois",
            email="jducrotois@ageden38.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Julien",
                'last_name':"Ducrotois",
                'email':"jducrotois@ageden38.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c339.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c339.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c338, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Dominique",
            last_name="Fournier",
            email="dfournier@ageden38.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Dominique",
                'last_name':"Fournier",
                'email':"dfournier@ageden38.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c338.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c338.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c337, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Etienne",
            last_name="Masson",
            email="emasson@ageden38.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Etienne",
                'last_name':"Masson",
                'email':"emasson@ageden38.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c337.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c337.tags.add(t33)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c331, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Pierre",
            last_name="Bergeron",
            email="bet.arborescence@orange.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Pierre",
                'last_name':"Bergeron",
                'email':"bet.arborescence@orange.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c331.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c331.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c331.tags.add(t32)
                        
        if contact_created:
            nc210 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c331,
                note = """mail de relance le 27/08/2019

--

accès démo envoyés le 29/03:

id : bet.arborescence@orange.fr

mdp : demo_ARBORESCENCE_29032019

--

participant au webinaire du 29 mars 2019""",
                pinned = False,
                created_at = isoparse("2019-03-29 16:08:09.081330+00:00"),
                updated_at = isoparse("2019-03-29 16:08:09.081330+00:00"),
                # tags,
                # reminder
            )

            rnc210 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc210,
                linked_object_contactable=c331,
                done=False,
        
            # persons
            )
            rnc210.persons.add(hespul_user)
            nc210.created_at = isoparse("2019-03-29 16:08:09.081330+00:00")
            nc210.updated_at = isoparse("2019-03-29 16:08:09.081330+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c330, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Emmanuel",
            last_name="Salomon",
            email="emmanuel.salomon@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Emmanuel",
                'last_name':"Salomon",
                'email':"emmanuel.salomon@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c330.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c330.tags.add(t32)
                        
        if contact_created:
            nc279 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c330,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées""",
                pinned = False,
                created_at = isoparse("2019-08-28 10:35:14.733299+00:00"),
                updated_at = isoparse("2019-08-28 10:35:14.733299+00:00"),
                # tags,
                # reminder
            )

            rnc279 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc279,
                linked_object_contactable=c330,
                done=False,
        
            # persons
            )
            rnc279.persons.add(hespul_user)
            nc279.created_at = isoparse("2019-08-28 10:35:14.733299+00:00")
            nc279.updated_at = isoparse("2019-08-28 10:35:14.733299+00:00")
        

        address = "  ".strip() + ",  Lyon"
        if address == "  ,  ":
            address = ""

        c329, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Yannick",
            last_name="Choplin",
            email="yannick.choplin@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Yannick",
                'last_name':"Choplin",
                'email':"yannick.choplin@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Lyon",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c329.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c329.tags.add(t32)
                        
        if contact_created:
            nc209 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c329,
                note = """inscrit au webinaire du 26/09/19

--

mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

indépendant, a eu connaissance du webinaire du 29 mars par le Facebook d'Hespul, inscrit""",
                pinned = False,
                created_at = isoparse("2019-03-27 16:24:04.867568+00:00"),
                updated_at = isoparse("2019-03-27 16:24:04.867568+00:00"),
                # tags,
                # reminder
            )

            rnc209 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc209,
                linked_object_contactable=c329,
                done=False,
        
            # persons
            )
            rnc209.persons.add(hespul_user)
            nc209.created_at = isoparse("2019-03-27 16:24:04.867568+00:00")
            nc209.updated_at = isoparse("2019-03-27 16:24:04.867568+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c328, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Philippe",
            last_name="Viel",
            email="philippe.viel@alte-provence.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Philippe",
                'last_name':"Viel",
                'email':"philippe.viel@alte-provence.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c328.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c328.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c328.tags.add(t32)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c327, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Charline",
            last_name="Gérard",
            email="cge@dromenet.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Charline",
                'last_name':"Gérard",
                'email':"cge@dromenet.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c327.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c327.tags.add(t32)
                        
        if contact_created:
            nc280 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c327,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées""",
                pinned = False,
                created_at = isoparse("2019-08-28 10:36:47.576302+00:00"),
                updated_at = isoparse("2019-08-28 10:36:47.576302+00:00"),
                # tags,
                # reminder
            )

            rnc280 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc280,
                linked_object_contactable=c327,
                done=False,
        
            # persons
            )
            rnc280.persons.add(hespul_user)
            nc280.created_at = isoparse("2019-08-28 10:36:47.576302+00:00")
            nc280.updated_at = isoparse("2019-08-28 10:36:47.576302+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c326, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Chantal",
            last_name="Plantier",
            email="cpl@dromenet.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Chantal",
                'last_name':"Plantier",
                'email':"cpl@dromenet.org",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c326.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c326.tags.add(t33)
                        
        if contact_created:
            nc208 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c326,
                note = """inscrit au webinaire du 29 mars""",
                pinned = False,
                created_at = isoparse("2019-03-27 16:17:11.154470+00:00"),
                updated_at = isoparse("2019-03-27 16:17:11.154470+00:00"),
                # tags,
                # reminder
            )

            rnc208 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc208,
                linked_object_contactable=c326,
                done=False,
        
            # persons
            )
            rnc208.persons.add(hespul_user)
            nc208.created_at = isoparse("2019-03-27 16:17:11.154470+00:00")
            nc208.updated_at = isoparse("2019-03-27 16:17:11.154470+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c324, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Mélanie",
            last_name="Thuillier",
            email="m.thuillier@cress-na.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Mélanie",
                'last_name':"Thuillier",
                'email':"m.thuillier@cress-na.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c324.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c324.tags.add(t32)
                        
        if contact_created:
            nc281 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c324,
                note = """inscrite au webinaire du 26/09/19

--

mail envoyé le 28/08/2019 pour demander de relayer la campagne de comm de la rentrée 2019""",
                pinned = False,
                created_at = isoparse("2019-08-28 10:43:10.286747+00:00"),
                updated_at = isoparse("2019-08-28 10:43:10.286747+00:00"),
                # tags,
                # reminder
            )

            rnc281 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc281,
                linked_object_contactable=c324,
                done=False,
        
            # persons
            )
            rnc281.persons.add(hespul_user)
            nc281.created_at = isoparse("2019-08-28 10:43:10.286747+00:00")
            nc281.updated_at = isoparse("2019-08-28 10:43:10.286747+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c323, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="J",
            last_name="Wach",
            email="j.wach@cress-na.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"J",
                'last_name':"Wach",
                'email':"j.wach@cress-na.org",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c323.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c323.tags.add(t32)
                        
        if contact_created:
            nc282 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c323,
                note = """mail envoyé le 28/08/2019 pour demander de relayer la campagne de comm de la rentrée 2019""",
                pinned = False,
                created_at = isoparse("2019-08-28 10:43:22.531676+00:00"),
                updated_at = isoparse("2019-08-28 10:43:22.531676+00:00"),
                # tags,
                # reminder
            )

            rnc282 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc282,
                linked_object_contactable=c323,
                done=False,
        
            # persons
            )
            rnc282.persons.add(hespul_user)
            nc282.created_at = isoparse("2019-08-28 10:43:22.531676+00:00")
            nc282.updated_at = isoparse("2019-08-28 10:43:22.531676+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c322, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Nicolas",
            last_name="Perez",
            email="n.perez@cress-na.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Nicolas",
                'last_name':"Perez",
                'email':"n.perez@cress-na.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c322.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c322.tags.add(t32)
                        
        if contact_created:
            nc290 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c322,
                note = """inscrit au webinaire du 26/09/19""",
                pinned = False,
                created_at = isoparse("2019-09-16 12:41:47.530055+00:00"),
                updated_at = isoparse("2019-09-16 12:41:47.530055+00:00"),
                # tags,
                # reminder
            )

            rnc290 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc290,
                linked_object_contactable=c322,
                done=False,
        
            # persons
            )
            rnc290.persons.add(hespul_user)
            nc290.created_at = isoparse("2019-09-16 12:41:47.530055+00:00")
            nc290.updated_at = isoparse("2019-09-16 12:41:47.530055+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c321, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Louise",
            last_name="Barraud",
            email="louise.barraud@cressoccitanie.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Louise",
                'last_name':"Barraud",
                'email':"louise.barraud@cressoccitanie.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c321.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c321.tags.add(t32)
                        
        if contact_created:
            nc283 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c321,
                note = """mail le 28/08/2019 pour demander de relayer la campagne de comm de la rentrée 2019""",
                pinned = False,
                created_at = isoparse("2019-08-28 10:47:39.732457+00:00"),
                updated_at = isoparse("2019-08-28 10:47:39.732457+00:00"),
                # tags,
                # reminder
            )

            rnc283 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc283,
                linked_object_contactable=c321,
                done=False,
        
            # persons
            )
            rnc283.persons.add(hespul_user)
            nc283.created_at = isoparse("2019-08-28 10:47:39.732457+00:00")
            nc283.updated_at = isoparse("2019-08-28 10:47:39.732457+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c320, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Amandine",
            last_name="Michel",
            email="amandine.michel@alte-provence.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Amandine",
                'last_name':"Michel",
                'email':"amandine.michel@alte-provence.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c320.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c320.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c320.tags.add(t32)
                        
        if contact_created:
            nc211 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c320,
                note = """relance mail le 27/08/2019

--

accès démo envoyés le 29/03 :

id : amandine.michel@alte-provence.org

mdp : demo_ALTE_29032019

--

a participé au webinaire du 29 mars 2019""",
                pinned = False,
                created_at = isoparse("2019-03-29 16:10:59.486184+00:00"),
                updated_at = isoparse("2019-03-29 16:10:59.486184+00:00"),
                # tags,
                # reminder
            )

            rnc211 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc211,
                linked_object_contactable=c320,
                done=False,
        
            # persons
            )
            rnc211.persons.add(hespul_user)
            nc211.created_at = isoparse("2019-03-29 16:10:59.486184+00:00")
            nc211.updated_at = isoparse("2019-03-29 16:10:59.486184+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c316, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Raphaël",
            last_name="Ménauge",
            email="rmenauge@adb-emmaus.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Raphaël",
                'last_name':"Ménauge",
                'email':"rmenauge@adb-emmaus.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0967597401",
                'mobile_phone':"0661765789",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c316.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c316.tags.add(t32)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c315, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Marie-Cécile",
            last_name="Ricard",
            email="coordination@gab85.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Marie-Cécile",
                'last_name':"Ricard",
                'email':"coordination@gab85.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c315.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c315.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c315.tags.add(t32)
                        
        if contact_created:
            nc183 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c315,
                note = """identifiants demo envoyés le 04/03/2019 :

identifiant : coordination@gab85.org

mot de passe : demo_GAB85_04032019

--

participante webinaire 15/02/2019""",
                pinned = False,
                created_at = isoparse("2019-02-19 09:24:20.873544+00:00"),
                updated_at = isoparse("2019-02-19 09:24:20.873544+00:00"),
                # tags,
                # reminder
            )

            rnc183 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc183,
                linked_object_contactable=c315,
                done=False,
        
            # persons
            )
            rnc183.persons.add(hespul_user)
            nc183.created_at = isoparse("2019-02-19 09:24:20.873544+00:00")
            nc183.updated_at = isoparse("2019-02-19 09:24:20.873544+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c314, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Hervé",
            last_name="Lecomte",
            email="herve.lecomte@sergies.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Hervé",
                'last_name':"Lecomte",
                'email':"herve.lecomte@sergies.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c314.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c314.tags.add(t32)
                        
        if contact_created:
            nc182 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c314,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

tel le 28/02/2019 : ils sont intéressés par l'outil, mais ce n'est pas dans leur priorité du 1er semestre, période très chargée. À recontacter pour un webinaire 2ème semestre 2019

--

save-the-date envoyé pour le webinaire du 29/03/2019""",
                pinned = False,
                created_at = isoparse("2019-02-19 08:23:07.038888+00:00"),
                updated_at = isoparse("2019-02-19 08:23:07.038888+00:00"),
                # tags,
                # reminder
            )

            rnc182 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc182,
                linked_object_contactable=c314,
                done=True,
        
                            date=isoparse("2019-06-01"),
                        
            # persons
            )
            rnc182.persons.add(hespul_user)
            nc182.created_at = isoparse("2019-02-19 08:23:07.038888+00:00")
            nc182.updated_at = isoparse("2019-02-19 08:23:07.038888+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c313, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Sébastien",
            last_name="Chaillou",
            email="sebastien.chaillou@cressidf.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Sébastien",
                'last_name':"Chaillou",
                'email':"sebastien.chaillou@cressidf.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c313.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c313.tags.add(t32)
                        
        if contact_created:
            nc181 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c313,
                note = """mail le 28/08/2019 pour demander de relayer la campagne de comm de la rentrée 2019

--

Mail du 12/03/2019 (en réponse à une invitation webinaire)

Bonjour,

Je ne vous ai absolument pas oublié et suis très heureux de l'évolution du coutosuix! mais le dossier de développement pour lequel nous pensions utiliser cet outil est pour le moment suspendu à des partenaires et financeurs qui n'ont pas l'air décider à bouger rapidement... croyez bien que j'en suis le premier déçu! Mais du coup nous n'avons pas vraiment de personne ressource qui puisse participer à ce webinaire.. malheureusement.

Néanmoins merci de nous laisser dans le fil d'actu de ce bel outil! 

bien à vous et toute l'équipe d'Hespul!



--

save-the-date envoyé pour le webinaire du 29/03/2019""",
                pinned = False,
                created_at = isoparse("2019-02-18 16:21:26.513945+00:00"),
                updated_at = isoparse("2019-02-18 16:21:26.513945+00:00"),
                # tags,
                # reminder
            )

            rnc181 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc181,
                linked_object_contactable=c313,
                done=False,
        
            # persons
            )
            rnc181.persons.add(hespul_user)
            nc181.created_at = isoparse("2019-02-18 16:21:26.513945+00:00")
            nc181.updated_at = isoparse("2019-02-18 16:21:26.513945+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c312, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Catherine",
            last_name="Vallot",
            email="accueil@iledubeurre.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Catherine",
                'last_name':"Vallot",
                'email':"accueil@iledubeurre.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0474568898",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c312.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c312.tags.add(t32)
                        
        if contact_created:
            nc284 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c312,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées""",
                pinned = False,
                created_at = isoparse("2019-08-28 10:57:50.677404+00:00"),
                updated_at = isoparse("2019-08-28 10:57:50.677404+00:00"),
                # tags,
                # reminder
            )

            rnc284 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc284,
                linked_object_contactable=c312,
                done=False,
        
            # persons
            )
            rnc284.persons.add(hespul_user)
            nc284.created_at = isoparse("2019-08-28 10:57:50.677404+00:00")
            nc284.updated_at = isoparse("2019-08-28 10:57:50.677404+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c311, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Kodjo",
            last_name="Ametowou",
            email="theoametowoukodjo@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Kodjo",
                'last_name':"Ametowou",
                'email':"theoametowoukodjo@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c311.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c311.tags.add(t32)
                        
        if contact_created:
            nc180 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c311,
                note = """inscrit au webinaire du 15/02/2019""",
                pinned = False,
                created_at = isoparse("2019-02-14 09:26:53.993498+00:00"),
                updated_at = isoparse("2019-02-14 09:26:53.993498+00:00"),
                # tags,
                # reminder
            )

            rnc180 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc180,
                linked_object_contactable=c311,
                done=False,
        
            # persons
            )
            rnc180.persons.add(hespul_user)
            nc180.created_at = isoparse("2019-02-14 09:26:53.993498+00:00")
            nc180.updated_at = isoparse("2019-02-14 09:26:53.993498+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c310, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Virginie",
            last_name="Le Stanc",
            email="mab29.lestanc@agrobio-bretagne.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Virginie",
                'last_name':"Le Stanc",
                'email':"mab29.lestanc@agrobio-bretagne.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c310.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c310.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c310.tags.add(t32)
                        
        if contact_created:
            nc179 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c310,
                note = """relance mail le 27/08/2019

--

accès démo envoyés le 19/02/2019

identifiant : mab29.lestanc@agrobio-bretagne.org

mot de passe : demo_MAB29_19022019

--

participante au webinaire du 15/02/2019""",
                pinned = False,
                created_at = isoparse("2019-02-14 09:23:53.569443+00:00"),
                updated_at = isoparse("2019-02-14 09:23:53.569443+00:00"),
                # tags,
                # reminder
            )

            rnc179 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc179,
                linked_object_contactable=c310,
                done=False,
        
            # persons
            )
            rnc179.persons.add(hespul_user)
            nc179.created_at = isoparse("2019-02-14 09:23:53.569443+00:00")
            nc179.updated_at = isoparse("2019-02-14 09:23:53.569443+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c309, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Arthur",
            last_name="Cabaret",
            email="arthur.cabaret@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Arthur",
                'last_name':"Cabaret",
                'email':"arthur.cabaret@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c309.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c309.tags.add(t32)
                        
        if contact_created:
            nc178 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c309,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

Mail reçu le 19/02/2019

Bonjour Pauline,

Merci beaucoup de votre message ainsi que pour la présentation qui était limpide.

Pour moi qui suis encore en phase de création, s'équiper d'un tel logiciel est encore prématuré mais je reviendrai vers vous le moment venu :)

A bientôt,

Arthur Cabaret

06 78 74 60 43

--

participant au webinaire du 15/02/2019""",
                pinned = False,
                created_at = isoparse("2019-02-14 09:22:11.160294+00:00"),
                updated_at = isoparse("2019-02-14 09:22:11.160294+00:00"),
                # tags,
                # reminder
            )

            rnc178 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc178,
                linked_object_contactable=c309,
                done=False,
        
            # persons
            )
            rnc178.persons.add(hespul_user)
            nc178.created_at = isoparse("2019-02-14 09:22:11.160294+00:00")
            nc178.updated_at = isoparse("2019-02-14 09:22:11.160294+00:00")
        

        address = "  ".strip() + ",  Lyon"
        if address == "  ,  ":
            address = ""

        c308, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Hélène",
            last_name="Tonetti",
            email="helene.tonetti@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Hélène",
                'last_name':"Tonetti",
                'email':"helene.tonetti@gmail.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"Lyon",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c308.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c308.tags.add(t32)
                        
        if contact_created:
            nc176 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c308,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

inscrite au webinaire du 15/02/2019""",
                pinned = False,
                created_at = isoparse("2019-02-14 09:18:56.399400+00:00"),
                updated_at = isoparse("2019-02-14 09:18:56.399400+00:00"),
                # tags,
                # reminder
            )

            rnc176 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc176,
                linked_object_contactable=c308,
                done=False,
        
            # persons
            )
            rnc176.persons.add(hespul_user)
            nc176.created_at = isoparse("2019-02-14 09:18:56.399400+00:00")
            nc176.updated_at = isoparse("2019-02-14 09:18:56.399400+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c307, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Céline",
            last_name="Launay",
            email="coordination@civambio53.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Céline",
                'last_name':"Launay",
                'email':"coordination@civambio53.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c307.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c307.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c307.tags.add(t32)
                        
        if contact_created:
            nc177 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c307,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019

--

inscrite au webinaire du 15/02/2019""",
                pinned = False,
                created_at = isoparse("2019-02-14 09:20:01.010981+00:00"),
                updated_at = isoparse("2019-02-14 09:20:01.010981+00:00"),
                # tags,
                # reminder
            )

            rnc177 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc177,
                linked_object_contactable=c307,
                done=False,
        
            # persons
            )
            rnc177.persons.add(hespul_user)
            nc177.created_at = isoparse("2019-02-14 09:20:01.010981+00:00")
            nc177.updated_at = isoparse("2019-02-14 09:20:01.010981+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c306, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Fabien",
            last_name="Brosset",
            email="fabien.brosset@energie-partagee.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Fabien",
                'last_name':"Brosset",
                'email':"fabien.brosset@energie-partagee.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c306.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c306.tags.add(t32)
                        
        if contact_created:
            nc173 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c306,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

save-the-date envoyé pour le webinaire du 29/03/2019

--

invité au webinaire du 15/02/19""",
                pinned = False,
                created_at = isoparse("2019-02-05 08:11:10.723452+00:00"),
                updated_at = isoparse("2019-02-05 08:11:10.723452+00:00"),
                # tags,
                # reminder
            )

            rnc173 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc173,
                linked_object_contactable=c306,
                done=False,
        
            # persons
            )
            rnc173.persons.add(hespul_user)
            nc173.created_at = isoparse("2019-02-05 08:11:10.723452+00:00")
            nc173.updated_at = isoparse("2019-02-05 08:11:10.723452+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c305, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Johann",
            last_name="Vacandare",
            email="johann.vacandare@ec-lr.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Johann",
                'last_name':"Vacandare",
                'email':"johann.vacandare@ec-lr.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"0640369490",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c305.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c305.tags.add(t32)
                        
        if contact_created:
            nc174 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c305,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invité au webinaire du 15/02/19""",
                pinned = False,
                created_at = isoparse("2019-02-05 08:12:25.553611+00:00"),
                updated_at = isoparse("2019-02-05 08:12:25.553611+00:00"),
                # tags,
                # reminder
            )

            rnc174 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc174,
                linked_object_contactable=c305,
                done=False,
        
            # persons
            )
            rnc174.persons.add(hespul_user)
            nc174.created_at = isoparse("2019-02-05 08:12:25.553611+00:00")
            nc174.updated_at = isoparse("2019-02-05 08:12:25.553611+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c304, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Adèle",
            last_name="Gamache",
            email="direction@cpie79.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Adèle",
                'last_name':"Gamache",
                'email':"direction@cpie79.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c304.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c304.tags.add(t32)
                        
        if contact_created:
            nc175 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c304,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invitée au webinaire du 15/02/19""",
                pinned = False,
                created_at = isoparse("2019-02-05 08:13:36.492134+00:00"),
                updated_at = isoparse("2019-02-05 08:13:36.492134+00:00"),
                # tags,
                # reminder
            )

            rnc175 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc175,
                linked_object_contactable=c304,
                done=False,
        
            # persons
            )
            rnc175.persons.add(hespul_user)
            nc175.created_at = isoparse("2019-02-05 08:13:36.492134+00:00")
            nc175.updated_at = isoparse("2019-02-05 08:13:36.492134+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c301, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Paul",
            last_name="Monin",
            email="direction@iledubeurre.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Paul",
                'last_name':"Monin",
                'email':"direction@iledubeurre.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c301.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c301.tags.add(t32)
                        
        if contact_created:
            nc172 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c301,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

save-the-date envoyé pour le webinaire du 29/03/2019

--

invité au webinaire du 15 février 2019

--

Connaissance de l'outil par le bouche-à-oreille du SMIRIL""",
                pinned = False,
                created_at = isoparse("2019-02-04 08:47:53.630950+00:00"),
                updated_at = isoparse("2019-02-04 08:47:53.630950+00:00"),
                # tags,
                # reminder
            )

            rnc172 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc172,
                linked_object_contactable=c301,
                done=False,
        
            # persons
            )
            rnc172.persons.add(hespul_user)
            nc172.created_at = isoparse("2019-02-04 08:47:53.630950+00:00")
            nc172.updated_at = isoparse("2019-02-04 08:47:53.630950+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c300, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Céline",
            last_name="Girault",
            email="coordination@gab44.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Céline",
                'last_name':"Girault",
                'email':"coordination@gab44.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0240794657",
                'mobile_phone':"0680886244",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c300.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c300.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c300.tags.add(t32)
                        
        if contact_created:
            nc171 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c300,
                note = """relance mail le 27/08/2019

--

accès compte démo envoyé le 21/06/2016

login : demo-user@coutosuix.fr

mot de passe : demo

--

webinaire démo le 18/06/2019

--

(mail du 19/02/2019) Bonjour,

Oui la présentation nous a paru très claire et attractive. Nous sommes engagés actuellement avec un autre outil et ce normalement jusqu'à fin 2019. Pour autant, nous réfléchissons à anticiper un changement.

Et pour être transparente, certains GAB utilisent un 3ème  outil dont nous allons avoir une présentation en avril. Le choix se fera donc après.

Coutosuix nous a semblé répondre parfaitement à nos besoins.

Nous vous tiendrons au courant au plus vite.

cordialement

Céline Girault

Directrice

--

participante au webinaire du 15/02/2019

--

accès demo envoyé le 30/01/2019

id : coordination@gab44.org

mdp : demo_GAB44_30012019""",
                pinned = False,
                created_at = isoparse("2019-01-30 10:47:03.432509+00:00"),
                updated_at = isoparse("2019-01-30 10:47:03.432509+00:00"),
                # tags,
                # reminder
            )

            rnc171 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc171,
                linked_object_contactable=c300,
                done=False,
        
            # persons
            )
            rnc171.persons.add(hespul_user)
            nc171.created_at = isoparse("2019-01-30 10:47:03.432509+00:00")
            nc171.updated_at = isoparse("2019-01-30 10:47:03.432509+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c297, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Christophe",
            last_name="Goddon",
            email="c.goddon@mres-asso.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Christophe",
                'last_name':"Goddon",
                'email':"c.goddon@mres-asso.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c297.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c297.tags.add(t30)
                        
        if contact_created:
            nc164 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c297,
                note = """accès demo envoyé le 11/01/2019

    identifiant : c.goddon@mres-asso.org

    mot de passe : demo_MRES_11012019""",
                pinned = False,
                created_at = isoparse("2019-01-11 09:49:09.833196+00:00"),
                updated_at = isoparse("2019-01-11 09:49:09.833196+00:00"),
                # tags,
                # reminder
            )

            rnc164 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc164,
                linked_object_contactable=c297,
                done=False,
        
            # persons
            )
            rnc164.persons.add(hespul_user)
            nc164.created_at = isoparse("2019-01-11 09:49:09.833196+00:00")
            nc164.updated_at = isoparse("2019-01-11 09:49:09.833196+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c296, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Solange",
            last_name="Habrard",
            email="s.habrard@mres-asso.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Solange",
                'last_name':"Habrard",
                'email':"s.habrard@mres-asso.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c296.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c296.tags.add(t30)
                        
        if contact_created:
            nc163 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c296,
                note = """accès demo envoyé le 11/01/2019

    identifiant : s.habrard@mres-asso.org

    mot de passe : demo_MRES_11012019""",
                pinned = False,
                created_at = isoparse("2019-01-11 09:48:18.152558+00:00"),
                updated_at = isoparse("2019-01-11 09:48:18.152558+00:00"),
                # tags,
                # reminder
            )

            rnc163 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc163,
                linked_object_contactable=c296,
                done=False,
        
            # persons
            )
            rnc163.persons.add(hespul_user)
            nc163.created_at = isoparse("2019-01-11 09:48:18.152558+00:00")
            nc163.updated_at = isoparse("2019-01-11 09:48:18.152558+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c295, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Nathalie",
            last_name="Sedou",
            email="n.sedou@mres-asso.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Nathalie",
                'last_name':"Sedou",
                'email':"n.sedou@mres-asso.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c295.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c295.tags.add(t30)
                        
        if contact_created:
            nc162 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c295,
                note = """accès demo envoyés le 11/01/2019

    identifiant : n.sedou@mres-asso.org

    mot de passe : demo_MRES_11012019""",
                pinned = False,
                created_at = isoparse("2019-01-11 09:46:49.504186+00:00"),
                updated_at = isoparse("2019-01-11 09:46:49.504186+00:00"),
                # tags,
                # reminder
            )

            rnc162 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc162,
                linked_object_contactable=c295,
                done=False,
        
            # persons
            )
            rnc162.persons.add(hespul_user)
            nc162.created_at = isoparse("2019-01-11 09:46:49.504186+00:00")
            nc162.updated_at = isoparse("2019-01-11 09:46:49.504186+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c294, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Véronique",
            last_name="Pallen",
            email="vpallen@cress-aura.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Véronique",
                'last_name':"Pallen",
                'email':"vpallen@cress-aura.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c294.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c294.tags.add(t32)
                        
        if contact_created:
            nc157 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c294,
                note = """mail le 28/08/2019 pour invitation aux prochains webinaires organisés dès septembre 2019

--

invitée au webinaire du 10/01/2019""",
                pinned = False,
                created_at = isoparse("2019-01-08 13:53:17.470260+00:00"),
                updated_at = isoparse("2019-01-08 13:53:17.470260+00:00"),
                # tags,
                # reminder
            )

            rnc157 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc157,
                linked_object_contactable=c294,
                done=False,
        
            # persons
            )
            rnc157.persons.add(hespul_user)
            nc157.created_at = isoparse("2019-01-08 13:53:17.470260+00:00")
            nc157.updated_at = isoparse("2019-01-08 13:53:17.470260+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c293, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Pauline",
            last_name="Petot",
            email="ppetot@cress-aura.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Pauline",
                'last_name':"Petot",
                'email':"ppetot@cress-aura.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c293.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c293.tags.add(t32)
                        
        if contact_created:
            nc158 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c293,
                note = """invitée au webinaire du 10/01/2019""",
                pinned = False,
                created_at = isoparse("2019-01-08 13:53:47.462741+00:00"),
                updated_at = isoparse("2019-01-08 13:53:47.462741+00:00"),
                # tags,
                # reminder
            )

            rnc158 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc158,
                linked_object_contactable=c293,
                done=False,
        
            # persons
            )
            rnc158.persons.add(hespul_user)
            nc158.created_at = isoparse("2019-01-08 13:53:47.462741+00:00")
            nc158.updated_at = isoparse("2019-01-08 13:53:47.462741+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c292, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Franck",
            last_name="Barruel",
            email="franck.barruel@ines-solaire.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Franck",
                'last_name':"Barruel",
                'email':"franck.barruel@ines-solaire.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c292.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c292.tags.add(t32)
                        
        if contact_created:
            nc155 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c292,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invitation pour le webinaire du 10 janvier 2019""",
                pinned = False,
                created_at = isoparse("2019-01-07 16:45:29.801091+00:00"),
                updated_at = isoparse("2019-01-07 16:45:29.801091+00:00"),
                # tags,
                # reminder
            )

            rnc155 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc155,
                linked_object_contactable=c292,
                done=False,
        
            # persons
            )
            rnc155.persons.add(hespul_user)
            nc155.created_at = isoparse("2019-01-07 16:45:29.801091+00:00")
            nc155.updated_at = isoparse("2019-01-07 16:45:29.801091+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c290, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Mireille",
            last_name="Nivet",
            email="mireille.nivet@cress-pdl.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Mireille",
                'last_name':"Nivet",
                'email':"mireille.nivet@cress-pdl.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0240745777",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c290.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c290.tags.add(t33)
                        
        if contact_created:
            nc151 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c290,
                note = """ajouté à coutosuix@googlegroups.com + Confluence le 18/02/2019

--

facture envoyée le 10/01/2019

--

devis envoyé le 08/01/2019

--

participation au webinaire du 20/12/2018 (pour l'équipe de négaWatt)""",
                pinned = False,
                created_at = isoparse("2018-12-21 14:25:10.246614+00:00"),
                updated_at = isoparse("2018-12-21 14:25:10.246614+00:00"),
                # tags,
                # reminder
            )

            rnc151 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc151,
                linked_object_contactable=c290,
                done=False,
        
            # persons
            )
            rnc151.persons.add(hespul_user)
            nc151.created_at = isoparse("2018-12-21 14:25:10.246614+00:00")
            nc151.updated_at = isoparse("2018-12-21 14:25:10.246614+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c289, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Xavier",
            last_name="Galand",
            email="x.galand@mres-asso.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Xavier",
                'last_name':"Galand",
                'email':"x.galand@mres-asso.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0320521202",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c289.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c289.tags.add(t30)
                        
        if contact_created:
            nc150 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c289,
                note = """relance mail le 27/08/2019

--

accès demo envoyé le 11/01/2019

    identifiant : x.galand@mres-asso.org

    mot de passe : demo_MRES_11012019

--

invité au webinaire de présentation le 10/01/2019

--

Msg depuis le site coutosuix.fr :

Bonjour, J'ai manqué le précédent webinaire (13/12).

Y a t il d'autres programmés ?

Merci de votre retour,

Xavier Galand""",
                pinned = False,
                created_at = isoparse("2018-12-21 14:16:11.772755+00:00"),
                updated_at = isoparse("2018-12-21 14:16:11.772755+00:00"),
                # tags,
                # reminder
            )

            rnc150 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc150,
                linked_object_contactable=c289,
                done=False,
        
            # persons
            )
            rnc150.persons.add(hespul_user)
            nc150.created_at = isoparse("2018-12-21 14:16:11.772755+00:00")
            nc150.updated_at = isoparse("2018-12-21 14:16:11.772755+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c288, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Hélène",
            last_name="Decouvelaere",
            email="helene.decouvelaere@coopawatt.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Hélène",
                'last_name':"Decouvelaere",
                'email':"helene.decouvelaere@coopawatt.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 25 85 19 05",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c288.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c288.tags.add(t32)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=hespul_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c288.tags.add(t10)
                        
        if contact_created:
            nc159 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c288,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invitée au webinaire du 15/02/2019

--

inscrite au webinaire CTSX du 10/01/2019""",
                pinned = False,
                created_at = isoparse("2019-01-09 13:52:10.197344+00:00"),
                updated_at = isoparse("2019-01-09 13:52:10.197344+00:00"),
                # tags,
                # reminder
            )

            rnc159 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc159,
                linked_object_contactable=c288,
                done=False,
        
            # persons
            )
            rnc159.persons.add(hespul_user)
            nc159.created_at = isoparse("2019-01-09 13:52:10.197344+00:00")
            nc159.updated_at = isoparse("2019-01-09 13:52:10.197344+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c284, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Antoine",
            last_name="Miche",
            email="antoine.miche@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Antoine",
                'last_name':"Miche",
                'email':"antoine.miche@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c284.referents.add(hespul_user)
            
        if contact_created:
            t34, created = Tag.objects.get_or_create(
                name="CTSX-relais",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-relais",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c284.tags.add(t34)
                        
        if contact_created:
            nc146 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c284,
                note = """Présent à l'afterwork CTSX 08/11/2018, longs échanges à la fin, administrateur dans plusieurs ONGs : bon relais de COUTOSUIX car l'outil l'a convaincu. Revenir vers lui pour mécénat ? Au sujet des autres outils web ?""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:40:17.503179+00:00"),
                updated_at = isoparse("2018-12-12 14:40:17.503179+00:00"),
                # tags,
                # reminder
            )

            rnc146 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc146,
                linked_object_contactable=c284,
                done=False,
        
            # persons
            )
            rnc146.persons.add(hespul_user)
            nc146.created_at = isoparse("2018-12-12 14:40:17.503179+00:00")
            nc146.updated_at = isoparse("2018-12-12 14:40:17.503179+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c283, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Sarah",
            last_name="Arsac",
            email="direction@mobilite07-26.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Sarah",
                'last_name':"Arsac",
                'email':"direction@mobilite07-26.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c283.referents.add(hespul_user)
            
        if contact_created:
            t36, created = Tag.objects.get_or_create(
                name="CTSX-prospect LT",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect LT",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c283.tags.add(t36)
                        
        if contact_created:
            nc145 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c283,
                note = """Mail reçu le 19/02/2019

Bonjour Pauline,

Pas de souci pour les pb techniques. La présentation a été très claire.

Pour le moment, je pense que nous ne sommes pas assez nombreux à être sur des multi-financements pour que MOBILITÉ 07-26 "investisse" dans coutosix.

En revanche, j'ai bien en tête l'outil et les évolutions à suivre (export/import de compta entre autres).

Je n'hésiterai pas à en parler autour de moi, et à revenir vers vous quand cela sera propice.

Bonne continuation,

Bien cordialement.

Sarah Arsac

--

participante au webinaire du 15 février

--

invitée pour le webinaire du 10 janvier

--

Bonjour, je ne peux malheureusement pas être parmi vous ce jeudi à 17h30, j'ai déjà un impératif. Joseph BOUREZ d'ALEC 07 (Polenergie) m'avait parlé de Coutosuix il y a quelques temps, et je suis bien intéressée. Je suis donc preneuse d'un Webinaire. Bien cordialement. Et bravo pour le travail accompli. Sarah ARSAC MOBILITE 07-26 0475492940""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:36:07.268986+00:00"),
                updated_at = isoparse("2018-12-12 14:36:07.268986+00:00"),
                # tags,
                # reminder
            )

            rnc145 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc145,
                linked_object_contactable=c283,
                done=False,
        
            # persons
            )
            rnc145.persons.add(hespul_user)
            nc145.created_at = isoparse("2018-12-12 14:36:07.268986+00:00")
            nc145.updated_at = isoparse("2018-12-12 14:36:07.268986+00:00")
        

        address = "  ".strip() + ",  Lyon"
        if address == "  ,  ":
            address = ""

        c282, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Elizabeth",
            last_name="Idir",
            email="eidir@sfr.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Elizabeth",
                'last_name':"Idir",
                'email':"eidir@sfr.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"Lyon",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c282.referents.add(hespul_user)
            
        if contact_created:
            t35, created = Tag.objects.get_or_create(
                name="CTSX-inscription",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-inscription",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c282.tags.add(t35)
                        
        if contact_created:
            nc144 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c282,
                note = """inscrite à l'afterwork CTSX 08/11/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:31:11.948336+00:00"),
                updated_at = isoparse("2018-12-12 14:31:11.948336+00:00"),
                # tags,
                # reminder
            )

            rnc144 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc144,
                linked_object_contactable=c282,
                done=False,
        
            # persons
            )
            rnc144.persons.add(hespul_user)
            nc144.created_at = isoparse("2018-12-12 14:31:11.948336+00:00")
            nc144.updated_at = isoparse("2018-12-12 14:31:11.948336+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c281, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Lucille",
            last_name="Jover",
            email="lucille.jover@sudouestemploi.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Lucille",
                'last_name':"Jover",
                'email':"lucille.jover@sudouestemploi.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c281.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c281.tags.add(t32)
                        
        if contact_created:
            nc143 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c281,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

présente afterwork CTSX 08/11/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:24:33.472351+00:00"),
                updated_at = isoparse("2018-12-12 14:24:33.472351+00:00"),
                # tags,
                # reminder
            )

            rnc143 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc143,
                linked_object_contactable=c281,
                done=False,
        
            # persons
            )
            rnc143.persons.add(hespul_user)
            nc143.created_at = isoparse("2018-12-12 14:24:33.472351+00:00")
            nc143.updated_at = isoparse("2018-12-12 14:24:33.472351+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c280, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Floriane",
            last_name="Darennes",
            email="floriane.darennes@sudouestemploi.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Floriane",
                'last_name':"Darennes",
                'email':"floriane.darennes@sudouestemploi.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c280.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c280.tags.add(t32)
                        
        if contact_created:
            nc142 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c280,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invitée pour le webinaire du 10/01/2019

--

inscrite afterwork CTSX 08/11/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:22:28.111206+00:00"),
                updated_at = isoparse("2018-12-12 14:22:28.111206+00:00"),
                # tags,
                # reminder
            )

            rnc142 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc142,
                linked_object_contactable=c280,
                done=False,
        
            # persons
            )
            rnc142.persons.add(hespul_user)
            nc142.created_at = isoparse("2018-12-12 14:22:28.111206+00:00")
            nc142.updated_at = isoparse("2018-12-12 14:22:28.111206+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c279, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Loïc",
            last_name="Sanchez",
            email="secretariat@greenergie-installation.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Loïc",
                'last_name':"Sanchez",
                'email':"secretariat@greenergie-installation.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c279.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c279.tags.add(t32)
                        
        if contact_created:
            nc141 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c279,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

inscrit afterwork CTSX 08/11/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:21:17.743215+00:00"),
                updated_at = isoparse("2018-12-12 14:21:17.743215+00:00"),
                # tags,
                # reminder
            )

            rnc141 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc141,
                linked_object_contactable=c279,
                done=False,
        
            # persons
            )
            rnc141.persons.add(hespul_user)
            nc141.created_at = isoparse("2018-12-12 14:21:17.743215+00:00")
            nc141.updated_at = isoparse("2018-12-12 14:21:17.743215+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c278, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Luisa",
            last_name="Lacaille",
            email="luisa.lacaille@lilo.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Luisa",
                'last_name':"Lacaille",
                'email':"luisa.lacaille@lilo.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c278.referents.add(hespul_user)
            
        if contact_created:
            t36, created = Tag.objects.get_or_create(
                name="CTSX-prospect LT",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect LT",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c278.tags.add(t36)
                        
        if contact_created:
            nc140 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c278,
                note = """participation afterwork CTSX 08/11/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:19:25.294904+00:00"),
                updated_at = isoparse("2018-12-12 14:19:25.294904+00:00"),
                # tags,
                # reminder
            )

            rnc140 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc140,
                linked_object_contactable=c278,
                done=False,
        
            # persons
            )
            rnc140.persons.add(hespul_user)
            nc140.created_at = isoparse("2018-12-12 14:19:25.294904+00:00")
            nc140.updated_at = isoparse("2018-12-12 14:19:25.294904+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c277, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Léo",
            last_name="Astorino",
            email="astorino.leo@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Léo",
                'last_name':"Astorino",
                'email':"astorino.leo@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c277.referents.add(hespul_user)
            
        if contact_created:
            t36, created = Tag.objects.get_or_create(
                name="CTSX-prospect LT",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect LT",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c277.tags.add(t36)
                        
        if contact_created:
            t34, created = Tag.objects.get_or_create(
                name="CTSX-relais",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-relais",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c277.tags.add(t34)
                        
        if contact_created:
            nc139 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c277,
                note = """inscrit afterwork CTSX 08/11/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:18:12.311049+00:00"),
                updated_at = isoparse("2018-12-12 14:18:12.311049+00:00"),
                # tags,
                # reminder
            )

            rnc139 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc139,
                linked_object_contactable=c277,
                done=False,
        
            # persons
            )
            rnc139.persons.add(hespul_user)
            nc139.created_at = isoparse("2018-12-12 14:18:12.311049+00:00")
            nc139.updated_at = isoparse("2018-12-12 14:18:12.311049+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c275, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Sébastien",
            last_name="Penidon",
            email="sebastien.penidon@ber.asso.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Sébastien",
                'last_name':"Penidon",
                'email':"sebastien.penidon@ber.asso.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c275.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c275.tags.add(t30)
                        
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c275.tags.add(t32)
                        
        if contact_created:
            nc137 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c275,
                note = """relance le 27/08/2019

--

accès démo envoyés le 09/01/2019 :

- identifiant : sebastien.penidon@ber.asso.fr

- mdp : demo_BER_09012019

--

invité au webinaire CTSX 10/01/2019

--

inscrit au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:13:02.019469+00:00"),
                updated_at = isoparse("2018-12-12 14:13:02.019469+00:00"),
                # tags,
                # reminder
            )

            rnc137 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc137,
                linked_object_contactable=c275,
                done=False,
        
            # persons
            )
            rnc137.persons.add(hespul_user)
            nc137.created_at = isoparse("2018-12-12 14:13:02.019469+00:00")
            nc137.updated_at = isoparse("2018-12-12 14:13:02.019469+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c274, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="François",
            last_name="Soubeyrand",
            email="francois.soubeyrand@agence-ecomobilite.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"François",
                'last_name':"Soubeyrand",
                'email':"francois.soubeyrand@agence-ecomobilite.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c274.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c274.tags.add(t32)
                        
        if contact_created:
            nc136 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c274,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invité au webinaire du 15/02/2019

--

invité au webinaire du 10/01/2019

--

inscrit au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:10:21.256480+00:00"),
                updated_at = isoparse("2018-12-12 14:10:21.256480+00:00"),
                # tags,
                # reminder
            )

            rnc136 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc136,
                linked_object_contactable=c274,
                done=False,
        
            # persons
            )
            rnc136.persons.add(hespul_user)
            nc136.created_at = isoparse("2018-12-12 14:10:21.256480+00:00")
            nc136.updated_at = isoparse("2018-12-12 14:10:21.256480+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c273, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Laurence",
            last_name="Guibert",
            email="coordination@fdcivam44.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Laurence",
                'last_name':"Guibert",
                'email':"coordination@fdcivam44.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c273.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c273.tags.add(t33)
                        
        if contact_created:
            nc135 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c273,
                note = """ajouté à coutosuix@googlegroups.com + Confluence le 18/02/2019

--

facture envoyée le 16/01/2019

--

devis envoyé + déploiement

--

suite au webinaire, accès démo envoyés le 14/12/2018

id : coordination@fdcivam44.org

mdp: demo_CIVAM44_14122018

--

inscrite au webinaire CTSX 13/12/2018

--

Bonjour, Je suis à la recherche d'un outil ergonomique et efficace pour notre association (10 à 11 salariés) d'où mon intérêt pour coutosuix. Cordialement Laurence GUIBERT""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:08:02.094439+00:00"),
                updated_at = isoparse("2018-12-12 14:08:02.094439+00:00"),
                # tags,
                # reminder
            )

            rnc135 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc135,
                linked_object_contactable=c273,
                done=False,
        
            # persons
            )
            rnc135.persons.add(hespul_user)
            nc135.created_at = isoparse("2018-12-12 14:08:02.094439+00:00")
            nc135.updated_at = isoparse("2018-12-12 14:08:02.094439+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c272, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Céline",
            last_name="Berard",
            email="berard@alec07.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Céline",
                'last_name':"Berard",
                'email':"berard@alec07.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c272.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c272.tags.add(t33)
                        
        if contact_created:
            nc134 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c272,
                note = """ajouté à coutosuix@googlegroups.com le 18/02/2019

--

inscrite au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:02:33.378993+00:00"),
                updated_at = isoparse("2018-12-12 14:02:33.378993+00:00"),
                # tags,
                # reminder
            )

            rnc134 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc134,
                linked_object_contactable=c272,
                done=False,
        
            # persons
            )
            rnc134.persons.add(hespul_user)
            nc134.created_at = isoparse("2018-12-12 14:02:33.378993+00:00")
            nc134.updated_at = isoparse("2018-12-12 14:02:33.378993+00:00")
        

        address = "  ".strip() + ",  Lyon"
        if address == "  ,  ":
            address = ""

        c271, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Olivier",
            last_name="Laurans",
            email="olaurans@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Olivier",
                'last_name':"Laurans",
                'email':"olaurans@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Lyon",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c271.referents.add(hespul_user)
            
        if contact_created:
            t35, created = Tag.objects.get_or_create(
                name="CTSX-inscription",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-inscription",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c271.tags.add(t35)
                        
        if contact_created:
            nc133 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c271,
                note = """inscrit au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-12 14:01:21.497902+00:00"),
                updated_at = isoparse("2018-12-12 14:01:21.497902+00:00"),
                # tags,
                # reminder
            )

            rnc133 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc133,
                linked_object_contactable=c271,
                done=False,
        
            # persons
            )
            rnc133.persons.add(hespul_user)
            nc133.created_at = isoparse("2018-12-12 14:01:21.497902+00:00")
            nc133.updated_at = isoparse("2018-12-12 14:01:21.497902+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c270, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Laure",
            last_name="Gardarin",
            email="lgardarin@cress-aura.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Laure",
                'last_name':"Gardarin",
                'email':"lgardarin@cress-aura.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c270.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c270.tags.add(t32)
                        
        if contact_created:
            nc130 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c270,
                note = """invitée au webinaire du 10/01/2019

--

inscrite au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-11 11:31:54.609379+00:00"),
                updated_at = isoparse("2018-12-11 11:31:54.609379+00:00"),
                # tags,
                # reminder
            )

            rnc130 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc130,
                linked_object_contactable=c270,
                done=False,
        
            # persons
            )
            rnc130.persons.add(hespul_user)
            nc130.created_at = isoparse("2018-12-11 11:31:54.609379+00:00")
            nc130.updated_at = isoparse("2018-12-11 11:31:54.609379+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c269, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Boris",
            last_name="Boucher",
            email="boucher@fibois.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Boris",
                'last_name':"Boucher",
                'email':"boucher@fibois.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c269.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c269.tags.add(t32)
                        
        if contact_created:
            nc129 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c269,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invité au webinaire du 15/02/2019

--

invité au webinaire du 10/01/2019

--

inscrit au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-11 11:29:43.471304+00:00"),
                updated_at = isoparse("2018-12-11 11:29:43.471304+00:00"),
                # tags,
                # reminder
            )

            rnc129 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc129,
                linked_object_contactable=c269,
                done=False,
        
            # persons
            )
            rnc129.persons.add(hespul_user)
            nc129.created_at = isoparse("2018-12-11 11:29:43.471304+00:00")
            nc129.updated_at = isoparse("2018-12-11 11:29:43.471304+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c268, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="",
            last_name="Avranche",
            email="avenir.ecosite@gmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"",
                'last_name':"Avranche",
                'email':"avenir.ecosite@gmail.com",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c268.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c268.tags.add(t32)
                        
        if contact_created:
            nc128 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c268,
                note = """inscrit au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-11 11:27:35.552145+00:00"),
                updated_at = isoparse("2018-12-11 11:27:35.552145+00:00"),
                # tags,
                # reminder
            )

            rnc128 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc128,
                linked_object_contactable=c268,
                done=False,
        
            # persons
            )
            rnc128.persons.add(hespul_user)
            nc128.created_at = isoparse("2018-12-11 11:27:35.552145+00:00")
            nc128.updated_at = isoparse("2018-12-11 11:27:35.552145+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c267, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Anne",
            last_name="Chevallier",
            email="direction@adil73.org",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Anne",
                'last_name':"Chevallier",
                'email':"direction@adil73.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c267.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c267.tags.add(t32)
                        
        if contact_created:
            nc127 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c267,
                note = """inscrite au webinaire du 26/09/19

--

mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invitée au webinaire du 15/02/2019

--

invitée au webinaire du 10/01/2019

--

inscrite au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-11 11:26:36.320012+00:00"),
                updated_at = isoparse("2018-12-11 11:26:36.320012+00:00"),
                # tags,
                # reminder
            )

            rnc127 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc127,
                linked_object_contactable=c267,
                done=False,
        
            # persons
            )
            rnc127.persons.add(hespul_user)
            nc127.created_at = isoparse("2018-12-11 11:26:36.320012+00:00")
            nc127.updated_at = isoparse("2018-12-11 11:26:36.320012+00:00")
        

        address = "  ".strip() + ",  Biol 38"
        if address == "  ,  ":
            address = ""

        c266, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Marie",
            last_name="Daniel",
            email="daniel_marie@hotmail.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Marie",
                'last_name':"Daniel",
                'email':"daniel_marie@hotmail.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"Biol 38",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c266.referents.add(hespul_user)
            
        if contact_created:
            t36, created = Tag.objects.get_or_create(
                name="CTSX-prospect LT",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect LT",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c266.tags.add(t36)
                        
        if contact_created:
            nc126 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c266,
                note = """inscrite au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-11 11:25:09.203680+00:00"),
                updated_at = isoparse("2018-12-11 11:25:09.203680+00:00"),
                # tags,
                # reminder
            )

            rnc126 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc126,
                linked_object_contactable=c266,
                done=False,
        
            # persons
            )
            rnc126.persons.add(hespul_user)
            nc126.created_at = isoparse("2018-12-11 11:25:09.203680+00:00")
            nc126.updated_at = isoparse("2018-12-11 11:25:09.203680+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c265, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Edouard",
            last_name="Ghoul",
            email="protagoras_expert@icloud.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Edouard",
                'last_name':"Ghoul",
                'email':"protagoras_expert@icloud.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c265.referents.add(hespul_user)
            
        if contact_created:
            t35, created = Tag.objects.get_or_create(
                name="CTSX-inscription",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-inscription",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c265.tags.add(t35)
                        
        if contact_created:
            nc125 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c265,
                note = """inscrit au webinaire CTSX 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-11 11:23:31.558816+00:00"),
                updated_at = isoparse("2018-12-11 11:23:31.558816+00:00"),
                # tags,
                # reminder
            )

            rnc125 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc125,
                linked_object_contactable=c265,
                done=False,
        
            # persons
            )
            rnc125.persons.add(hespul_user)
            nc125.created_at = isoparse("2018-12-11 11:23:31.558816+00:00")
            nc125.updated_at = isoparse("2018-12-11 11:23:31.558816+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c264, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Marine",
            last_name="Cariou",
            email="marine.cariou@puy-de-dome.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Marine",
                'last_name':"Cariou",
                'email':"marine.cariou@puy-de-dome.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c264.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c264.tags.add(t32)
                        
        if contact_created:
            nc124 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c264,
                note = """invitée au webinaire du 15/02/2019

--

invitée au webinaire CTSX 10/01/2019

--

inscrite au webinaire CTSX du 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-11 11:21:14.033081+00:00"),
                updated_at = isoparse("2018-12-11 11:21:14.033081+00:00"),
                # tags,
                # reminder
            )

            rnc124 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc124,
                linked_object_contactable=c264,
                done=False,
        
            # persons
            )
            rnc124.persons.add(hespul_user)
            nc124.created_at = isoparse("2018-12-11 11:21:14.033081+00:00")
            nc124.updated_at = isoparse("2018-12-11 11:21:14.033081+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c263, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Arnaud",
            last_name="Martin",
            email="arnaud.martin@agglo-haguenau.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Arnaud",
                'last_name':"Martin",
                'email':"arnaud.martin@agglo-haguenau.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c263.referents.add(hespul_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c263.tags.add(t32)
                        
        if contact_created:
            nc123 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c263,
                note = """invité au webinaire du 15/02/2019

--

inscrit au webinaire du 10/01/2019

--

inscrit au webinaire CTSX du 13/12/2018""",
                pinned = False,
                created_at = isoparse("2018-12-11 11:14:59.891830+00:00"),
                updated_at = isoparse("2018-12-11 11:14:59.891830+00:00"),
                # tags,
                # reminder
            )

            rnc123 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc123,
                linked_object_contactable=c263,
                done=False,
        
            # persons
            )
            rnc123.persons.add(hespul_user)
            nc123.created_at = isoparse("2018-12-11 11:14:59.891830+00:00")
            nc123.updated_at = isoparse("2018-12-11 11:14:59.891830+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c254, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Céline",
            last_name="Nauleau",
            email="celine.nauleau@eiepdl.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Céline",
                'last_name':"Nauleau",
                'email':"celine.nauleau@eiepdl.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0972587881",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c254.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c254.tags.add(t33)
                        
        if contact_created:
            nc106 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c254,
                note = """ajouté à coutosuix@googlegroups.com + Confluence le 18/02/2019

--

facture envoyée le 7 janvier 2019

--

inscrite au webinaire CTSX 13/12/2018

--

envoyer une invitation pour le webinaire CTSX du 13 décembre !

--

Message de celine.nauleau@eiepdl.fr (via le site CTSX) :

Bonjour,

Nous sommes en réflexion sur un potentiel changement de logiciel pour la gestion de nos heures et des projets.

Nous nous demandions si le logiciel Coutosuix pouvait répondre à nos attentes.

Serait-il possible d’échanger pour en savoir un peu plus sur ce logiciel ?

Est-il possible d'avoir une version test ?

Nos besoins : suivi temps salariés (suivant différentes grilles d’analyse : pôle, client, tâche et thématique), charge de travail, suivi des projets, des budgets, avoir une analyse, des comparatifs…

Céline NAULEAU

Association Elise (Vendée - 85)

09.72.58.78.81""",
                pinned = False,
                created_at = isoparse("2018-11-20 14:37:24.018893+00:00"),
                updated_at = isoparse("2018-11-20 14:37:24.018893+00:00"),
                # tags,
                # reminder
            )

            rnc106 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc106,
                linked_object_contactable=c254,
                done=True,
        
                            date=isoparse("2018-11-26"),
                        
            # persons
            )
            rnc106.persons.add(hespul_user)
            nc106.created_at = isoparse("2018-11-20 14:37:24.018893+00:00")
            nc106.updated_at = isoparse("2018-11-20 14:37:24.018893+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c253, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Stéphane",
            last_name="Boussac",
            email="sboussac@trace-software.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Stéphane",
                'last_name':"Boussac",
                'email':"sboussac@trace-software.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c253.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c253.tags.add(t30)
                        
        if contact_created:
            nc105 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c253,
                note = """relance mail le 27/08/2019

--

accès démo COUTOSUIX envoyés le 20 novembre 2018 :

- id : sboussac@trace-software.com

- mot de passe : demo_TRACESOFTWARE_20112018""",
                pinned = False,
                created_at = isoparse("2018-11-20 14:19:03.761736+00:00"),
                updated_at = isoparse("2018-11-20 14:19:03.761736+00:00"),
                # tags,
                # reminder
            )

            rnc105 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc105,
                linked_object_contactable=c253,
                done=False,
        
            # persons
            )
            rnc105.persons.add(hespul_user)
            nc105.created_at = isoparse("2018-11-20 14:19:03.761736+00:00")
            nc105.updated_at = isoparse("2018-11-20 14:19:03.761736+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c252, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Ismaël",
            last_name="Lokhat",
            email="i.lokhat@cythelia.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Ismaël",
                'last_name':"Lokhat",
                'email':"i.lokhat@cythelia.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c252.referents.add(hespul_user)
            
        if contact_created:
            t37, created = Tag.objects.get_or_create(
                name="CTSX-non",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-non",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c252.tags.add(t37)
                        
        if contact_created:
            nc104 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c252,
                note = """accès demo COUTOSUIX envoyés le 20 novembre 2018 :

- id : i.lokhat@cythelia.fr

- mot de passe : demo_CYTHELIA_20112018""",
                pinned = False,
                created_at = isoparse("2018-11-20 14:16:58.440288+00:00"),
                updated_at = isoparse("2018-11-20 14:16:58.440288+00:00"),
                # tags,
                # reminder
            )

            rnc104 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc104,
                linked_object_contactable=c252,
                done=False,
        
            # persons
            )
            rnc104.persons.add(hespul_user)
            nc104.created_at = isoparse("2018-11-20 14:16:58.440288+00:00")
            nc104.updated_at = isoparse("2018-11-20 14:16:58.440288+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c251, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Corinne",
            last_name="Pasquier",
            email="association.leparisolidairelyon@neuf.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Corinne",
                'last_name':"Pasquier",
                'email':"association.leparisolidairelyon@neuf.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"0688207705",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c251.referents.add(hespul_user)
            
        if contact_created:
            t30, created = Tag.objects.get_or_create(
                name="CTSX-en test",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-en test",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c251.tags.add(t30)
                        
        if contact_created:
            t36, created = Tag.objects.get_or_create(
                name="CTSX-prospect LT",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-prospect LT",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c251.tags.add(t36)
                        
        if contact_created:
            nc101 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c251,
                note = """accès démo envoyés le 20 novembre 2018 :

- id : association.leparisolidairelyon@neuf.fr

- mot de passe : demo_LEPARISOLIDAIRE_20112018""",
                pinned = False,
                created_at = isoparse("2018-11-20 14:00:06.273113+00:00"),
                updated_at = isoparse("2018-11-20 14:00:06.273113+00:00"),
                # tags,
                # reminder
            )

            rnc101 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc101,
                linked_object_contactable=c251,
                done=False,
        
            # persons
            )
            rnc101.persons.add(hespul_user)
            nc101.created_at = isoparse("2018-11-20 14:00:06.273113+00:00")
            nc101.updated_at = isoparse("2018-11-20 14:00:06.273113+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c250, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Damien",
            last_name="Dumollard",
            email="damien.dumollard@smiril.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Damien",
                'last_name':"Dumollard",
                'email':"damien.dumollard@smiril.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0437201921",
                'mobile_phone':"0615164943",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c250.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c250.tags.add(t33)
                        
        if contact_created:
            nc100 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c250,
                note = """ajouté à coutosuix@googlegroups.com + Confluence le 18/02/2019

--

accès démo envoyés le 14 novembre 2019 :

- identifiant : damien.dumollard@smiril.fr

- mot de passe : demo_SMIRIL_14112018""",
                pinned = False,
                created_at = isoparse("2018-11-20 13:50:48.427013+00:00"),
                updated_at = isoparse("2018-11-20 13:50:48.427013+00:00"),
                # tags,
                # reminder
            )

            rnc100 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc100,
                linked_object_contactable=c250,
                done=False,
        
            # persons
            )
            rnc100.persons.add(hespul_user)
            nc100.created_at = isoparse("2018-11-20 13:50:48.427013+00:00")
            nc100.updated_at = isoparse("2018-11-20 13:50:48.427013+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c248, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Eric",
            last_name="Lhôte",
            email="e.lhote@renovation-doremi.com",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Eric",
                'last_name':"Lhôte",
                'email':"e.lhote@renovation-doremi.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0481660272",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c248.referents.add(hespul_user)
            
        if contact_created:
            t33, created = Tag.objects.get_or_create(
                name="CTSX-user",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-user",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c248.tags.add(t33)
                        
        if contact_created:
            nc98 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c248,
                note = """ajouté à coutosuix@googlegroups.com + Conluence le 18/02/2019

--

Facture envoyée le 4 janvier 2019

--

accès demo envoyé le 14 novembre 2018 :

- identifiant : e.lhote@renovation-doremi.com

- mot de passe : demo_DOREMI_14112018""",
                pinned = False,
                created_at = isoparse("2018-11-14 14:15:45.628861+00:00"),
                updated_at = isoparse("2018-11-14 14:15:45.628861+00:00"),
                # tags,
                # reminder
            )

            rnc98 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc98,
                linked_object_contactable=c248,
                done=False,
        
            # persons
            )
            rnc98.persons.add(hespul_user)
            nc98.created_at = isoparse("2018-11-14 14:15:45.628861+00:00")
            nc98.updated_at = isoparse("2018-11-14 14:15:45.628861+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c241, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Laurent",
            last_name="Poussin",
            email="l.poussin@cythelia.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Laurent",
                'last_name':"Poussin",
                'email':"l.poussin@cythelia.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 79 25 31 75",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c241.referents.add(hespul_user)
            
        if contact_created:
            t37, created = Tag.objects.get_or_create(
                name="CTSX-non",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-non",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c241.tags.add(t37)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=hespul_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c241.tags.add(t10)
                        
        if contact_created:
            nc269 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c241,
                note = """relancer pour le releve du compteur si pas de nouvelles. 



Et voir si possible de déposer le dossier en septembre.""",
                pinned = False,
                created_at = isoparse("2019-08-19 12:36:37.624064+00:00"),
                updated_at = isoparse("2019-08-19 12:36:37.624064+00:00"),
                # tags,
                # reminder
            )

            rnc269 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc269,
                linked_object_contactable=c241,
                done=True,
        
                            date=isoparse("2019-08-28"),
                        
            # persons
            )
            rnc269.persons.add(hespul_user)
            nc269.created_at = isoparse("2019-08-19 12:36:37.624064+00:00")
            nc269.updated_at = isoparse("2019-08-19 12:36:37.624064+00:00")
        
        if contact_created:
            nc161 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c241,
                note = """Date pour la nouvelle vague. ?""",
                pinned = False,
                created_at = isoparse("2019-01-11 09:19:43.949141+00:00"),
                updated_at = isoparse("2019-01-11 09:19:43.949141+00:00"),
                # tags,
                # reminder
            )

            rnc161 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc161,
                linked_object_contactable=c241,
                done=True,
        
                            date=isoparse("2019-01-16"),
                        
            # persons
            )
            rnc161.persons.add(hespul_user)
            nc161.created_at = isoparse("2019-01-11 09:19:43.949141+00:00")
            nc161.updated_at = isoparse("2019-01-11 09:19:43.949141+00:00")
        
        if contact_created:
            nc132 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c241,
                note = """EF et groupe3F, des nouvelles ?""",
                pinned = False,
                created_at = isoparse("2018-12-12 08:40:13.560514+00:00"),
                updated_at = isoparse("2018-12-12 08:40:13.560514+00:00"),
                # tags,
                # reminder
            )

            rnc132 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc132,
                linked_object_contactable=c241,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc132.persons.add(hespul_user)
            nc132.created_at = isoparse("2018-12-12 08:40:13.560514+00:00")
            nc132.updated_at = isoparse("2018-12-12 08:40:13.560514+00:00")
        
        if contact_created:
            nc103 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c241,
                note = """accès demo COUTOSUIX envoyés le 20 novembre 2018 :

- identifiant : l.poussin@cythelia.fr

- mot de passe : demo_CYTHELIA_20112018""",
                pinned = False,
                created_at = isoparse("2018-11-20 14:10:45.968035+00:00"),
                updated_at = isoparse("2018-11-20 14:10:45.968035+00:00"),
                # tags,
                # reminder
            )

            rnc103 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc103,
                linked_object_contactable=c241,
                done=False,
        
            # persons
            )
            rnc103.persons.add(hespul_user)
            nc103.created_at = isoparse("2018-11-20 14:10:45.968035+00:00")
            nc103.updated_at = isoparse("2018-11-20 14:10:45.968035+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c11, contact_created = Contact.objects.get_or_create(
            owning_group=hespul_group,
            first_name="Benoit",
            last_name="Lelong",
            email="b.lelong@cythelia.fr",
            defaults={
                'owning_group':hespul_group,
                'first_name':"Benoit",
                'last_name':"Lelong",
                'email':"b.lelong@cythelia.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0479253175",
                'mobile_phone':"0659456264",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c11.referents.add(hespul_user)
            
        if contact_created:
            t37, created = Tag.objects.get_or_create(
                name="CTSX-non",
                owning_group=hespul_group,
                defaults={
                    'name': "CTSX-non",
                    'description': "",
                    'owning_group': hespul_group,
                }
            )
            c11.tags.add(t37)
                        
        if contact_created:
            nc102 = Note.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object = c11,
                note = """après démo, outil peu adapté à leur entreprise = pas de suite

--

accès démo COUTOSUIX envoyés le 20 novembre 2018 :

- identifiant : b.lelong@cythelia.fr

- mot de passe : demo_CYTHELIA_20112018""",
                pinned = False,
                created_at = isoparse("2018-11-20 14:06:50.410549+00:00"),
                updated_at = isoparse("2018-11-20 14:06:50.410549+00:00"),
                # tags,
                # reminder
            )

            rnc102 = Reminder.objects.create(
                owning_group=hespul_group,
                creator = hespul_user,
                linked_object_task=nc102,
                linked_object_contactable=c11,
                done=False,
        
            # persons
            )
            rnc102.persons.add(hespul_user)
            nc102.created_at = isoparse("2018-11-20 14:06:50.410549+00:00")
            nc102.updated_at = isoparse("2018-11-20 14:06:50.410549+00:00")
        

        oaddress = "839 route de Sarcey  ".strip() + ", 69490 Saint Romain De Popey"
        if oaddress == "  ,  ":
            oaddress = ""

        o244 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Abattoir Rhône-Ouest SECAT",
            description="",
            reference="",
            address=oaddress,
            town="Saint Romain De Popey",
            zipcode="69490",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="04 74 26 80 10",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o244.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o244.tags.add(t11)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o111 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="ADEME",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o111.referents.add(alte_user)
            

        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o111.tags.add(t9)
                

        oaddress = "15 rue de Sévigné  ".strip() + ", 69003 Lyon"
        if oaddress == "  ,  ":
            oaddress = ""

        o302 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="Agence Technique Départementale",
            description="",
            reference="",
            address=oaddress,
            town="Lyon",
            zipcode="69003",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o302.referents.add(alte_user)
            

        t39, created = Tag.objects.get_or_create(
            name="ALTE 69",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o302.tags.add(t39)
                

        oaddress = "  ".strip() + ",  Saint Just D'Avray"
        if oaddress == "  ,  ":
            oaddress = ""

        o105 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Association Hridaya",
            description="",
            reference="",
            address=oaddress,
            town="Saint Just D'Avray",
            zipcode="",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o105.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o105.tags.add(t11)
                

        oaddress = "ZI du moulin, 2 Bd Jean Monnet  ".strip() + ", 69170 Pontcharra Sur Turdine"
        if oaddress == "  ,  ":
            oaddress = ""

        o185 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Barski Toiture",
            description="",
            reference="",
            address=oaddress,
            town="Pontcharra Sur Turdine",
            zipcode="69170",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="04 74 05 61 28",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o185.referents.add(alte_user)
            

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o185.tags.add(t10)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o208 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="BMF Conseil",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o208.referents.add(alte_user)
            

        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o208.tags.add(t9)
                

        oaddress = "440 route de l'azergues  ".strip() + ",  Chambost Allières"
        if oaddress == "  ,  ":
            oaddress = ""

        o262 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Cars de la vallée d'Azergues",
            description="",
            reference="",
            address=oaddress,
            town="Chambost Allières",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o262.referents.add(alte_user)
            

        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o262.tags.add(t9)
                

        oaddress = "115 rue Paul Bert  ".strip() + ", 69665 Villefranche Sur Saone"
        if oaddress == "  ,  ":
            oaddress = ""

        o288 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="CAVBS",
            description="",
            reference="",
            address=oaddress,
            town="Villefranche Sur Saone",
            zipcode="69665",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o288.referents.add(alte_user)
            

        t39, created = Tag.objects.get_or_create(
            name="ALTE 69",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o288.tags.add(t39)
                

        t38, created = Tag.objects.get_or_create(
            name="ALTE 69 - Autre MO",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69 - Autre MO",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o288.tags.add(t38)
                

        oaddress = "Domaine des communes  ".strip() + ", 69480 Anse"
        if oaddress == "  ,  ":
            oaddress = ""

        o290 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="CCBPD",
            description="",
            reference="",
            address=oaddress,
            town="Anse",
            zipcode="69480",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o290.referents.add(alte_user)
            

        t39, created = Tag.objects.get_or_create(
            name="ALTE 69",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o290.tags.add(t39)
                

        t38, created = Tag.objects.get_or_create(
            name="ALTE 69 - Autre MO",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69 - Autre MO",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o290.tags.add(t38)
                

        oaddress = "CCEL - Aéroport de Lyon Saint Exupéry 40 rue de Norvège ".strip() + ", 69125 Colombier Saugnieu"
        if oaddress == "  ,  ":
            oaddress = ""

        o243 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="CCEL",
            description="",
            reference="",
            address=oaddress,
            town="Colombier Saugnieu",
            zipcode="69125",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="http://www.ccel.fr/",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o243.referents.add(alte_user)
            

        t39, created = Tag.objects.get_or_create(
            name="ALTE 69",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o243.tags.add(t39)
                

        oaddress = "4 rue marengo  ".strip() + ", 42334 Roanne"
        if oaddress == "  ,  ":
            oaddress = ""

        o227 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Syndicat"),
            name="CCI Lyon Métropole - Saint étienne / Roanne",
            description="",
            reference="",
            address=oaddress,
            town="Roanne",
            zipcode="42334",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o227.referents.add(alte_user)
            

        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o227.tags.add(t9)
                

        oaddress = "  ".strip() + ", 69000 Lyon"
        if oaddress == "  ,  ":
            oaddress = ""

        o124 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Chambre d'Agriculture AURA",
            description="",
            reference="",
            address=oaddress,
            town="Lyon",
            zipcode="69000",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o124.referents.add(alte_user)
            

        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o124.tags.add(t9)
                

        oaddress = "Rue de l'industrie  ".strip() + ", 69870 Chambost-Allières"
        if oaddress == "  ,  ":
            oaddress = ""

        o160 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Cincinnati VR",
            description="",
            reference="",
            address=oaddress,
            town="Chambost-Allières",
            zipcode="69870",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o160.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o160.tags.add(t11)
                

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o160.tags.add(t10)
                

        oaddress = "30 Avenue Général Leclerc Espace Saint Germain - Bât Antarès ".strip() + ",  Vienne"
        if oaddress == "  ,  ":
            oaddress = ""

        o295 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="Communauté d'Agglomération Vienne Condrieu",
            description="",
            reference="",
            address=oaddress,
            town="Vienne",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o295.referents.add(alte_user)
            

        t39, created = Tag.objects.get_or_create(
            name="ALTE 69",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o295.tags.add(t39)
                

        oaddress = "Rue de la Venne  ".strip() + ", 69170 Tarare"
        if oaddress == "  ,  ":
            oaddress = ""

        o103 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="COR",
            description="",
            reference="",
            address=oaddress,
            town="Tarare",
            zipcode="69170",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="04 74 05 06 60",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o103.referents.add(alte_user)
            

        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o103.tags.add(t9)
                

        oaddress = "58 Bis Rue de Charlieu  ".strip() + ", 69470 Cours La Ville"
        if oaddress == "  ,  ":
            oaddress = ""

        o163 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Duron Constructeur",
            description="",
            reference="",
            address=oaddress,
            town="Cours La Ville",
            zipcode="69470",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o163.referents.add(alte_user)
            

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o163.tags.add(t10)
                

        oaddress = "  ".strip() + ", 69170 Tarare"
        if oaddress == "  ,  ":
            oaddress = ""

        o181 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Eco-Energie Systemes",
            description="",
            reference="",
            address=oaddress,
            town="Tarare",
            zipcode="69170",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o181.referents.add(alte_user)
            

        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o181.tags.add(t9)
                

        oaddress = "  ".strip() + ",  Vindry sur Turdine"
        if oaddress == "  ,  ":
            oaddress = ""

        o296 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Association"),
            name="Ecole Saint Anne",
            description="",
            reference="",
            address=oaddress,
            town="Vindry sur Turdine",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o296.referents.add(alte_user)
            

        t38, created = Tag.objects.get_or_create(
            name="ALTE 69 - Autre MO",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69 - Autre MO",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o296.tags.add(t38)
                

        oaddress = "19 rue du printemps  ".strip() + ", 73100 Aix-Les-Bains"
        if oaddress == "  ,  ":
            oaddress = ""

        o114 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="EEPOS",
            description="",
            reference="",
            address=oaddress,
            town="Aix-Les-Bains",
            zipcode="73100",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o114.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o114.tags.add(t11)
                

        oaddress = "588 Route de la Roche  ".strip() + ", 69170 Les Sauvages"
        if oaddress == "  ,  ":
            oaddress = ""

        o186 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Association"),
            name="Etablissement La Roche",
            description="",
            reference="",
            address=oaddress,
            town="Les Sauvages",
            zipcode="69170",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o186.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o186.tags.add(t11)
                

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o186.tags.add(t10)
                

        oaddress = "95 Route de La Roche  ".strip() + ", 69170 Les Sauvages"
        if oaddress == "  ,  ":
            oaddress = ""

        o298 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Association"),
            name="Evasion et Loisirs Pour Tous",
            description="",
            reference="",
            address=oaddress,
            town="Les Sauvages",
            zipcode="69170",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o298.referents.add(alte_user)
            

        t38, created = Tag.objects.get_or_create(
            name="ALTE 69 - Autre MO",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69 - Autre MO",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o298.tags.add(t38)
                

        oaddress = "210 boulevard Victore Vermorel  ".strip() + ", 69400 Villefranche sur Saône"
        if oaddress == "  ,  ":
            oaddress = ""

        o108 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Association"),
            name="Fibois Rhône",
            description="",
            reference="",
            address=oaddress,
            town="Villefranche sur Saône",
            zipcode="69400",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="http://www.fibois-rhone.com/",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o108.referents.add(alte_user)
            

        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o108.tags.add(t9)
                

        oaddress = "  ".strip() + ", 69000 Lyon"
        if oaddress == "  ,  ":
            oaddress = ""

        o183 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Bailleur"),
            name="Groupe 3F",
            description="",
            reference="",
            address=oaddress,
            town="Lyon",
            zipcode="69000",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o183.referents.add(alte_user)
            

        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o183.tags.add(t9)
                

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o183.tags.add(t10)
                

        oaddress = "19 rue coquart  ".strip() + ", 69240 Bourg de Thizy"
        if oaddress == "  ,  ":
            oaddress = ""

        o248 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Education"),
            name="Groupe scolaire privé Sainte Thérèse",
            description="",
            reference="",
            address=oaddress,
            town="Bourg de Thizy",
            zipcode="69240",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o248.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o248.tags.add(t11)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o228 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Bailleur"),
            name="HBVS",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o228.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o228.tags.add(t11)
                

        oaddress = "Les granges  ".strip() + ", 69550 Cublize"
        if oaddress == "  ,  ":
            oaddress = ""

        o169 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Helair Ingénierie",
            description="",
            reference="",
            address=oaddress,
            town="Cublize",
            zipcode="69550",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="04 74 89 53 72",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o169.referents.add(alte_user)
            

        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o169.tags.add(t9)
                

        oaddress = "  ".strip() + ", 69210 Arbresle"
        if oaddress == "  ,  ":
            oaddress = ""

        o247 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Ingenef - BE&CO",
            description="",
            reference="",
            address=oaddress,
            town="Arbresle",
            zipcode="69210",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o247.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o247.tags.add(t11)
                

        oaddress = "ZI Du mortier  ".strip() + ", 69490 Saint Forgeux"
        if oaddress == "  ,  ":
            oaddress = ""

        o109 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Jouvé Transport",
            description="",
            reference="",
            address=oaddress,
            town="Saint Forgeux",
            zipcode="69490",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o109.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o109.tags.add(t11)
                

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o109.tags.add(t10)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o301 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Label énergie",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o301.referents.add(alte_user)
            

        t38, created = Tag.objects.get_or_create(
            name="ALTE 69 - Autre MO",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69 - Autre MO",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o301.tags.add(t38)
                

        oaddress = "  ".strip() + ", 69170 Saint Clément Sur Valsonne"
        if oaddress == "  ,  ":
            oaddress = ""

        o172 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Lacroix Chauffagiste",
            description="",
            reference="",
            address=oaddress,
            town="Saint Clément Sur Valsonne",
            zipcode="69170",
            lat=0,
            lon=0,
            country="France",
            email="lacroix-chauffage@wanadoo.fr",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o172.referents.add(alte_user)
            

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o172.tags.add(t10)
                

        oaddress = "84 rue de Thizy  ".strip() + ", 69470 Cours La Ville"
        if oaddress == "  ,  ":
            oaddress = ""

        o164 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Laroche",
            description="",
            reference="",
            address=oaddress,
            town="Cours La Ville",
            zipcode="69470",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o164.referents.add(alte_user)
            

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o164.tags.add(t10)
                

        oaddress = "  ".strip() + ", 69490 Saint Romaine de Popey"
        if oaddress == "  ,  ":
            oaddress = ""

        o184 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Le potager de la coccinelle",
            description="",
            reference="",
            address=oaddress,
            town="Saint Romaine de Popey",
            zipcode="69490",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o184.referents.add(alte_user)
            

        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o184.tags.add(t9)
                

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o184.tags.add(t11)
                

        oaddress = "Rue de la Manacanterie  ".strip() + ", 69870 Claveisolles"
        if oaddress == "  ,  ":
            oaddress = ""

        o291 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Association"),
            name="Les Clefs du Soleil",
            description="",
            reference="",
            address=oaddress,
            town="Claveisolles",
            zipcode="69870",
            lat=0,
            lon=0,
            country="France",
            email="cles.du.soleil@wanadoo.fr",
            website="",
            phone="04 74 02 00 82",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o291.referents.add(alte_user)
            

        t38, created = Tag.objects.get_or_create(
            name="ALTE 69 - Autre MO",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69 - Autre MO",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o291.tags.add(t38)
                

        oaddress = "770 Boulevard Burdeau  ".strip() + ", 69400 Villefranche Sur Saone"
        if oaddress == "  ,  ":
            oaddress = ""

        o297 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Association"),
            name="Ludothèque Villefranche",
            description="",
            reference="",
            address=oaddress,
            town="Villefranche Sur Saone",
            zipcode="69400",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o297.referents.add(alte_user)
            

        t38, created = Tag.objects.get_or_create(
            name="ALTE 69 - Autre MO",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69 - Autre MO",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o297.tags.add(t38)
                

        oaddress = "  ".strip() + ", 69550 Amplepuis"
        if oaddress == "  ,  ":
            oaddress = ""

        o180 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="Mairie Amplepuis",
            description="",
            reference="",
            address=oaddress,
            town="Amplepuis",
            zipcode="69550",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o180.referents.add(alte_user)
            

        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o180.tags.add(t9)
                

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o180.tags.add(t10)
                

        oaddress = "  ".strip() + ",  Ancy"
        if oaddress == "  ,  ":
            oaddress = ""

        o104 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Mairie ANCY",
            description="",
            reference="",
            address=oaddress,
            town="Ancy",
            zipcode="",
            lat=0,
            lon=0,
            country="France",
            email="mairieancy@numericable.com",
            website="",
            phone="04 74 05 83 58",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o104.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o104.tags.add(t11)
                

        oaddress = "  ".strip() + ",  Chambost Allières"
        if oaddress == "  ,  ":
            oaddress = ""

        o223 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="Mairie Chambost Allières",
            description="",
            reference="",
            address=oaddress,
            town="Chambost Allières",
            zipcode="",
            lat=0,
            lon=0,
            country="France",
            email="mairie@chambostallieres.fr",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o223.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o223.tags.add(t11)
                

        oaddress = "  ".strip() + ", 69430 Chenelette"
        if oaddress == "  ,  ":
            oaddress = ""

        o120 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="mairie Chenelette",
            description="",
            reference="",
            address=oaddress,
            town="Chenelette",
            zipcode="69430",
            lat=0,
            lon=0,
            country="",
            email="",
            website="http://www.chenelette.fr",
            phone="04 74 03 62 01",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o120.referents.add(alte_user)
            

        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o120.tags.add(t9)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o294 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Mairie Condrieu",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o294.referents.add(alte_user)
            

        t39, created = Tag.objects.get_or_create(
            name="ALTE 69",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o294.tags.add(t39)
                

        oaddress = "  ".strip() + ", 69490 Dareize"
        if oaddress == "  ,  ":
            oaddress = ""

        o106 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="Mairie DAREIZE",
            description="",
            reference="",
            address=oaddress,
            town="Dareize",
            zipcode="69490",
            lat=0,
            lon=0,
            country="France",
            email="mairie@dareize.fr",
            website="",
            phone="04 74 05 73 75",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o106.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o106.tags.add(t11)
                

        oaddress = "30 rue de l'école  ".strip() + ", 69610 Aveize"
        if oaddress == "  ,  ":
            oaddress = ""

        o266 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Mairie d'Aveize",
            description="",
            reference="",
            address=oaddress,
            town="Aveize",
            zipcode="69610",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="04 74 26 00 03",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o266.referents.add(alte_user)
            

        t39, created = Tag.objects.get_or_create(
            name="ALTE 69",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o266.tags.add(t39)
                

        oaddress = "  ".strip() + ", 69124 Colombier Saugnieu"
        if oaddress == "  ,  ":
            oaddress = ""

        o242 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="Mairie de Colombier Saugnieu",
            description="",
            reference="",
            address=oaddress,
            town="Colombier Saugnieu",
            zipcode="69124",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="http://www.mairie-colombiersaugnieu.fr/",
            phone="04 78 32 80 17",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o242.referents.add(alte_user)
            

        t38, created = Tag.objects.get_or_create(
            name="ALTE 69 - Autre MO",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69 - Autre MO",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o242.tags.add(t38)
                

        oaddress = "  ".strip() + ", 69720 Saint Laurent de Mure"
        if oaddress == "  ,  ":
            oaddress = ""

        o254 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="Mairie de Saint Laurent de Mure",
            description="",
            reference="",
            address=oaddress,
            town="Saint Laurent de Mure",
            zipcode="69720",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o254.referents.add(alte_user)
            

        t38, created = Tag.objects.get_or_create(
            name="ALTE 69 - Autre MO",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69 - Autre MO",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o254.tags.add(t38)
                

        oaddress = "Rue de la mairie  ".strip() + ", 69440 Taluyer"
        if oaddress == "  ,  ":
            oaddress = ""

        o267 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Mairie de Taluyers",
            description="",
            reference="",
            address=oaddress,
            town="Taluyer",
            zipcode="69440",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o267.referents.add(alte_user)
            

        t39, created = Tag.objects.get_or_create(
            name="ALTE 69",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o267.tags.add(t39)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o289 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="Mairie de Villefranche",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o289.referents.add(alte_user)
            

        t38, created = Tag.objects.get_or_create(
            name="ALTE 69 - Autre MO",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69 - Autre MO",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o289.tags.add(t38)
                

        oaddress = "  ".strip() + ", 69330 Jons"
        if oaddress == "  ,  ":
            oaddress = ""

        o280 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="Mairie Jons",
            description="",
            reference="",
            address=oaddress,
            town="Jons",
            zipcode="69330",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="04 78 31 21 35",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o280.referents.add(alte_user)
            

        t39, created = Tag.objects.get_or_create(
            name="ALTE 69",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o280.tags.add(t39)
                

        oaddress = "Place de la Mairie  ".strip() + ", 69170 Joux"
        if oaddress == "  ,  ":
            oaddress = ""

        o117 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="Mairie JOUX",
            description="",
            reference="",
            address=oaddress,
            town="Joux",
            zipcode="69170",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="04 74 63 12 25",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o117.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o117.tags.add(t11)
                

        oaddress = "  ".strip() + ", 69870 Lamure Sur Azergues"
        if oaddress == "  ,  ":
            oaddress = ""

        o121 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="Mairie LAMURE SUR AZERGUES",
            description="",
            reference="",
            address=oaddress,
            town="Lamure Sur Azergues",
            zipcode="69870",
            lat=0,
            lon=0,
            country="France",
            email="mairie@lamuresurazergues.com",
            website="",
            phone="04 74 03 04 73",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o121.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o121.tags.add(t11)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o293 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Mairie Letra",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o293.referents.add(alte_user)
            

        t39, created = Tag.objects.get_or_create(
            name="ALTE 69",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o293.tags.add(t39)
                

        oaddress = "Le bourg  ".strip() + ", 69170 Valsonne"
        if oaddress == "  ,  ":
            oaddress = ""

        o107 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="Mairie VALSONNE",
            description="",
            reference="",
            address=oaddress,
            town="Valsonne",
            zipcode="69170",
            lat=0,
            lon=0,
            country="France",
            email="secretariat@valsonne.fr",
            website="",
            phone="04 74 05 18 06",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o107.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o107.tags.add(t11)
                

        oaddress = "rue mozart  ".strip() + ",  Cublize"
        if oaddress == "  ,  ":
            oaddress = ""

        o279 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Maison de retraite Cublize",
            description="",
            reference="",
            address=oaddress,
            town="Cublize",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o279.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o279.tags.add(t11)
                

        oaddress = "  ".strip() + ", 69470 THEL"
        if oaddress == "  ,  ":
            oaddress = ""

        o167 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="Menuiserie CORGIE",
            description="",
            reference="",
            address=oaddress,
            town="THEL",
            zipcode="69470",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o167.referents.add(alte_user)
            

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o167.tags.add(t10)
                

        oaddress = "4 vallées, Panissière  ".strip() + ", 69870 Lamure sur azergues"
        if oaddress == "  ,  ":
            oaddress = ""

        o207 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("UNKNOWN"),
            name="MFR Lamure",
            description="",
            reference="",
            address=oaddress,
            town="Lamure sur azergues",
            zipcode="69870",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="04 74 03 05 48",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o207.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o207.tags.add(t11)
                

        oaddress = "6 rue du 8 mai 1945  ".strip() + ", 69470 Cours La Ville"
        if oaddress == "  ,  ":
            oaddress = ""

        o165 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Miltec",
            description="",
            reference="",
            address=oaddress,
            town="Cours La Ville",
            zipcode="69470",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o165.referents.add(alte_user)
            

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o165.tags.add(t10)
                

        oaddress = "23 rue gambetta  ".strip() + ", 69240 Thizy Les Bourgs"
        if oaddress == "  ,  ":
            oaddress = ""

        o175 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Morel Boisson",
            description="",
            reference="",
            address=oaddress,
            town="Thizy Les Bourgs",
            zipcode="69240",
            lat=0,
            lon=0,
            country="France",
            email="morel.boissons@orange.fr",
            website="",
            phone="04 74 64 27 84",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o175.referents.add(alte_user)
            

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o175.tags.add(t10)
                

        oaddress = "5 rue Jussieu  ".strip() + ", 69002 Lyon"
        if oaddress == "  ,  ":
            oaddress = ""

        o118 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Reach & Scharff Architectes",
            description="",
            reference="",
            address=oaddress,
            town="Lyon",
            zipcode="69002",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o118.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o118.tags.add(t11)
                

        oaddress = "  ".strip() + ",  Villemoirieu"
        if oaddress == "  ,  ":
            oaddress = ""

        o249 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="SB Thermique",
            description="",
            reference="",
            address=oaddress,
            town="Villemoirieu",
            zipcode="",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o249.referents.add(alte_user)
            

        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o249.tags.add(t9)
                

        oaddress = "  ".strip() + ", 73100 Aix-Les-Bains"
        if oaddress == "  ,  ":
            oaddress = ""

        o171 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Sco2bois",
            description="",
            reference="",
            address=oaddress,
            town="Aix-Les-Bains",
            zipcode="73100",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o171.referents.add(alte_user)
            

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o171.tags.add(t10)
                

        oaddress = "10 rue herman Sabran  ".strip() + ", 69004 Lyon"
        if oaddress == "  ,  ":
            oaddress = ""

        o299 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="SDMIS",
            description="",
            reference="",
            address=oaddress,
            town="Lyon",
            zipcode="69004",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o299.referents.add(alte_user)
            

        t38, created = Tag.objects.get_or_create(
            name="ALTE 69 - Autre MO",
            owning_group=alte_group,
            defaults={
                'name': "ALTE 69 - Autre MO",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o299.tags.add(t38)
                

        oaddress = "50 rue du Pavillon  ".strip() + ", 01009 Bourg En Bresse"
        if oaddress == "  ,  ":
            oaddress = ""

        o116 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="SEMCODA",
            description="",
            reference="",
            address=oaddress,
            town="Bourg En Bresse",
            zipcode="01009",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o116.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o116.tags.add(t11)
                

        oaddress = "  ".strip() + ", 69170 Tarare"
        if oaddress == "  ,  ":
            oaddress = ""

        o110 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="ShopStore",
            description="",
            reference="",
            address=oaddress,
            town="Tarare",
            zipcode="69170",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o110.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o110.tags.add(t11)
                

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o110.tags.add(t10)
                

        oaddress = "  ".strip() + ",  "
        if oaddress == "  ,  ":
            oaddress = ""

        o241 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Solemat",
            description="",
            reference="",
            address=oaddress,
            town="",
            zipcode="",
            lat=0,
            lon=0,
            country="",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o241.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o241.tags.add(t11)
                

        oaddress = "27 rue Joannes Carret  ".strip() + ", 69256 Lyon"
        if oaddress == "  ,  ":
            oaddress = ""

        o115 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Sudarchitectes",
            description="",
            reference="",
            address=oaddress,
            town="Lyon",
            zipcode="69256",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="04 78 64 07 07",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o115.referents.add(alte_user)
            

        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o115.tags.add(t11)
                

        oaddress = "61 Chemin du Moulin Carron  ".strip() + ", 69574 Dardilly"
        if oaddress == "  ,  ":
            oaddress = ""

        o113 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Syndicat"),
            name="SYDER",
            description="",
            reference="",
            address=oaddress,
            town="Dardilly",
            zipcode="69574",
            lat=0,
            lon=0,
            country="France",
            email="syder@syder.fr",
            website="",
            phone="04 72 18 75 00",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o113.referents.add(alte_user)
            

        t12, created = Tag.objects.get_or_create(
            name="COT TERMINE",
            owning_group=alte_group,
            defaults={
                'name': "COT TERMINE",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o113.tags.add(t12)
                

        oaddress = "25 chemin du stade  ".strip() + ", 69670 Vaugneray"
        if oaddress == "  ,  ":
            oaddress = ""

        o119 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Collectivity"),
            name="Syndicat de l'Ouest Lyonnais",
            description="",
            reference="",
            address=oaddress,
            town="Vaugneray",
            zipcode="69670",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="04 78 48 37 47",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o119.referents.add(alte_user)
            

        t13, created = Tag.objects.get_or_create(
            name="SOL",
            owning_group=alte_group,
            defaults={
                'name': "SOL",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o119.tags.add(t13)
                

        oaddress = "9 avenue des granges  ".strip() + ", 69240 Thizy Les Bourgs"
        if oaddress == "  ,  ":
            oaddress = ""

        o161 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Thera Sana",
            description="",
            reference="",
            address=oaddress,
            town="Thizy Les Bourgs",
            zipcode="69240",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="04 74 64 04 87",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o161.referents.add(alte_user)
            

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o161.tags.add(t10)
                

        oaddress = "54 Route de Charlieu  ".strip() + ", 69470 Cours La Ville"
        if oaddress == "  ,  ":
            oaddress = ""

        o112 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Thion SAS",
            description="",
            reference="",
            address=oaddress,
            town="Cours La Ville",
            zipcode="69470",
            lat=0,
            lon=0,
            country="France",
            email="herve.thion@thion-arvix.com",
            website="",
            phone="04 74 89 89 69",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o112.referents.add(alte_user)
            

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o112.tags.add(t10)
                

        oaddress = "LE BAS DE CHABOUT  ".strip() + ", 69170 Valsonne"
        if oaddress == "  ,  ":
            oaddress = ""

        o173 = Organization.objects.create(
            owning_group=alte_group,
            type_of_organization=type_of_organization("Company"),
            name="Valtex",
            description="",
            reference="",
            address=oaddress,
            town="Valsonne",
            zipcode="69170",
            lat=0,
            lon=0,
            country="France",
            email="",
            website="",
            phone="",
            fax="",
            phone_cache='',
            fax_cache='',
            # tags=,
            # referents=None,
            # fileimport=,
            # folders=,
            # files=,
            # notes=,
            # ecorenover_simulations=None,
        )
        o173.referents.add(alte_user)
            

        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        o173.tags.add(t10)
                
        no80 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o223,
            note = """Dossier COR ? 



Mise en place démarche compteur""",
            pinned = False,
            created_at = isoparse("2020-03-09 15:39:07.898506+00:00"),
            updated_at = isoparse("2020-03-09 15:39:07.898506+00:00"),
            # tags,
            # reminder
        )
        rno80 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no80,
            linked_object_contactable=o223,
            done=True,
            
                        date=isoparse("2020-09-21"),
                    
            # persons
        )
        rno80.persons.add(alte_user)
        no80.created_at = isoparse("2020-03-09 15:39:07.898506+00:00")
        no80.updated_at = isoparse("2020-03-09 15:39:07.898506+00:00")
        
        no79 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o297,
            note = """A t on des nouvelles de la part d'ALLIADE sur notre rapport ?

Sinon recontacter M. berbouzier""",
            pinned = False,
            created_at = isoparse("2020-03-09 11:49:23.704653+00:00"),
            updated_at = isoparse("2020-03-09 11:49:23.704653+00:00"),
            # tags,
            # reminder
        )
        rno79 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no79,
            linked_object_contactable=o297,
            done=True,
            
                        date=isoparse("2020-06-08"),
                    
            # persons
        )
        rno79.persons.add(alte_user)
        no79.created_at = isoparse("2020-03-09 11:49:23.704653+00:00")
        no79.updated_at = isoparse("2020-03-09 11:49:23.704653+00:00")
        
        no78 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o291,
            note = """Relancer car toujours pas de nouvelles""",
            pinned = False,
            created_at = isoparse("2020-02-25 14:37:44.994492+00:00"),
            updated_at = isoparse("2020-02-25 14:37:44.994492+00:00"),
            # tags,
            # reminder
        )
        rno78 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no78,
            linked_object_contactable=o291,
            done=True,
            
                        date=isoparse("2020-06-01"),
                    
            # persons
        )
        rno78.persons.add(alte_user)
        no78.created_at = isoparse("2020-02-25 14:37:44.994492+00:00")
        no78.updated_at = isoparse("2020-02-25 14:37:44.994492+00:00")
        
        no77 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o280,
            note = """Relancer si pas de nouvelles.""",
            pinned = False,
            created_at = isoparse("2020-02-25 14:37:02.219769+00:00"),
            updated_at = isoparse("2020-02-25 14:37:02.219769+00:00"),
            # tags,
            # reminder
        )
        rno77 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no77,
            linked_object_contactable=o280,
            done=True,
            
                        date=isoparse("2020-04-27"),
                    
            # persons
        )
        rno77.persons.add(alte_user)
        no77.created_at = isoparse("2020-02-25 14:37:02.219769+00:00")
        no77.updated_at = isoparse("2020-02-25 14:37:02.219769+00:00")
        
        no76 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o111,
            note = """Préparer demande de paiement""",
            pinned = False,
            created_at = isoparse("2019-12-23 09:09:49.090298+00:00"),
            updated_at = isoparse("2019-12-23 09:09:49.090298+00:00"),
            # tags,
            # reminder
        )
        rno76 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no76,
            linked_object_contactable=o111,
            done=True,
            
                        date=isoparse("2020-05-25"),
                    
            # persons
        )
        rno76.persons.add(alte_user)
        no76.created_at = isoparse("2019-12-23 09:09:49.090298+00:00")
        no76.updated_at = isoparse("2019-12-23 09:09:49.090298+00:00")
        
        no75 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o111,
            note = """Commencer la rédaction du rapport final.""",
            pinned = False,
            created_at = isoparse("2019-12-23 09:01:55.317927+00:00"),
            updated_at = isoparse("2019-12-23 09:01:55.317927+00:00"),
            # tags,
            # reminder
        )
        rno75 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no75,
            linked_object_contactable=o111,
            done=True,
            
                        date=isoparse("2020-02-18"),
                    
            # persons
        )
        rno75.persons.add(alte_user)
        no75.created_at = isoparse("2019-12-23 09:01:55.317927+00:00")
        no75.updated_at = isoparse("2019-12-23 09:01:55.317927+00:00")
        
        no74 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o244,
            note = """Prendre nouvelle projet 



Contacter BET pour lui expliquer la situation?""",
            pinned = False,
            created_at = isoparse("2019-12-23 09:01:04.625129+00:00"),
            updated_at = isoparse("2019-12-23 09:01:04.625129+00:00"),
            # tags,
            # reminder
        )
        rno74 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no74,
            linked_object_contactable=o244,
            done=True,
            
                        date=isoparse("2020-01-09"),
                    
            # persons
        )
        rno74.persons.add(alte_user)
        no74.created_at = isoparse("2019-12-23 09:01:04.625129+00:00")
        no74.updated_at = isoparse("2019-12-23 09:01:04.625129+00:00")
        
        no73 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o186,
            note = """Prendre nouvelles avancement projet ?""",
            pinned = False,
            created_at = isoparse("2019-12-23 08:58:23.804704+00:00"),
            updated_at = isoparse("2019-12-23 08:58:23.804704+00:00"),
            # tags,
            # reminder
        )
        rno73 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no73,
            linked_object_contactable=o186,
            done=True,
            
                        date=isoparse("2020-03-05"),
                    
            # persons
        )
        rno73.persons.add(alte_user)
        no73.created_at = isoparse("2019-12-23 08:58:23.804704+00:00")
        no73.updated_at = isoparse("2019-12-23 08:58:23.804704+00:00")
        
        no72 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o120,
            note = """Prendre des nouvelles. S'informer en ce qui concerne le compteur.""",
            pinned = False,
            created_at = isoparse("2019-12-23 08:57:41.692107+00:00"),
            updated_at = isoparse("2019-12-23 08:57:41.692107+00:00"),
            # tags,
            # reminder
        )
        rno72 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no72,
            linked_object_contactable=o120,
            done=True,
            
                        date=isoparse("2020-02-20"),
                    
            # persons
        )
        rno72.persons.add(alte_user)
        no72.created_at = isoparse("2019-12-23 08:57:41.692107+00:00")
        no72.updated_at = isoparse("2019-12-23 08:57:41.692107+00:00")
        
        no71 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o184,
            note = """Travaux ? Qui est retenu ? Montage dossier Région avec devis définitif ?""",
            pinned = False,
            created_at = isoparse("2019-12-23 08:56:51.411222+00:00"),
            updated_at = isoparse("2019-12-23 08:56:51.411222+00:00"),
            # tags,
            # reminder
        )
        rno71 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no71,
            linked_object_contactable=o184,
            done=True,
            
                        date=isoparse("2020-04-20"),
                    
            # persons
        )
        rno71.persons.add(alte_user)
        no71.created_at = isoparse("2019-12-23 08:56:51.411222+00:00")
        no71.updated_at = isoparse("2019-12-23 08:56:51.411222+00:00")
        
        no70 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o173,
            note = """Reprendre contact pour mettre en place une procédure pour le suivi des consommations""",
            pinned = False,
            created_at = isoparse("2019-12-23 08:56:03.679593+00:00"),
            updated_at = isoparse("2019-12-23 08:56:03.679593+00:00"),
            # tags,
            # reminder
        )
        rno70 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no70,
            linked_object_contactable=o173,
            done=True,
            
                        date=isoparse("2020-02-27"),
                    
            # persons
        )
        rno70.persons.add(alte_user)
        no70.created_at = isoparse("2019-12-23 08:56:03.679593+00:00")
        no70.updated_at = isoparse("2019-12-23 08:56:03.679593+00:00")
        
        no69 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o105,
            note = """Prendre des nouvelles du commencement des travaux.



Montage subvention région""",
            pinned = False,
            created_at = isoparse("2019-12-23 08:48:35.564568+00:00"),
            updated_at = isoparse("2019-12-23 08:48:35.564568+00:00"),
            # tags,
            # reminder
        )
        rno69 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no69,
            linked_object_contactable=o105,
            done=True,
            
                        date=isoparse("2020-01-20"),
                    
            # persons
        )
        rno69.persons.add(alte_user)
        no69.created_at = isoparse("2019-12-23 08:48:35.564568+00:00")
        no69.updated_at = isoparse("2019-12-23 08:48:35.564568+00:00")
        
        no68 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o120,
            note = """Des nouvelles concernant le Paiement ?""",
            pinned = False,
            created_at = isoparse("2019-11-20 14:09:39.223047+00:00"),
            updated_at = isoparse("2019-11-20 14:09:39.223047+00:00"),
            # tags,
            # reminder
        )
        rno68 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no68,
            linked_object_contactable=o120,
            done=True,
            
                        date=isoparse("2019-12-12"),
                    
            # persons
        )
        rno68.persons.add(alte_user)
        no68.created_at = isoparse("2019-11-20 14:09:39.223047+00:00")
        no68.updated_at = isoparse("2019-11-20 14:09:39.223047+00:00")
        
        no67 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o267,
            note = """Des retours de leur part ?""",
            pinned = False,
            created_at = isoparse("2019-11-20 14:06:05.722222+00:00"),
            updated_at = isoparse("2019-11-20 14:06:05.722222+00:00"),
            # tags,
            # reminder
        )
        rno67 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no67,
            linked_object_contactable=o267,
            done=True,
            
                        date=isoparse("2020-01-16"),
                    
            # persons
        )
        rno67.persons.add(alte_user)
        no67.created_at = isoparse("2019-11-20 14:06:05.722222+00:00")
        no67.updated_at = isoparse("2019-11-20 14:06:05.722222+00:00")
        
        no66 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o266,
            note = """Quelle stratégie donc avec la mairie ?""",
            pinned = False,
            created_at = isoparse("2019-10-29 16:58:48.667240+00:00"),
            updated_at = isoparse("2019-10-29 16:58:48.667240+00:00"),
            # tags,
            # reminder
        )
        rno66 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no66,
            linked_object_contactable=o266,
            done=True,
            
                        date=isoparse("2020-01-20"),
                    
            # persons
        )
        rno66.persons.add(alte_user)
        no66.created_at = isoparse("2019-10-29 16:58:48.667240+00:00")
        no66.updated_at = isoparse("2019-10-29 16:58:48.667240+00:00")
        
        no65 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o266,
            note = """la région a t elle fait un retour sur la demande ? John gère l'AMI""",
            pinned = False,
            created_at = isoparse("2019-10-25 12:16:21.387830+00:00"),
            updated_at = isoparse("2019-10-25 12:16:21.387830+00:00"),
            # tags,
            # reminder
        )
        rno65 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no65,
            linked_object_contactable=o266,
            done=True,
            
                        date=isoparse("2019-10-31"),
                    
            # persons
        )
        rno65.persons.add(alte_user)
        no65.created_at = isoparse("2019-10-25 12:16:21.387830+00:00")
        no65.updated_at = isoparse("2019-10-25 12:16:21.387830+00:00")
        
        no64 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o242,
            note = """faire le tableur et préparer les rapports""",
            pinned = False,
            created_at = isoparse("2019-10-25 12:14:43.861732+00:00"),
            updated_at = isoparse("2019-10-25 12:14:43.861732+00:00"),
            # tags,
            # reminder
        )
        rno64 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no64,
            linked_object_contactable=o242,
            done=True,
            
                        date=isoparse("2019-10-31"),
                    
            # persons
        )
        rno64.persons.add(alte_user)
        no64.created_at = isoparse("2019-10-25 12:14:43.861732+00:00")
        no64.updated_at = isoparse("2019-10-25 12:14:43.861732+00:00")
        
        no63 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o103,
            note = """Y a t il eu un retour sur les devis proposés par SF2E ?""",
            pinned = False,
            created_at = isoparse("2019-10-25 12:13:05.913096+00:00"),
            updated_at = isoparse("2019-10-25 12:13:05.913096+00:00"),
            # tags,
            # reminder
        )
        rno63 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no63,
            linked_object_contactable=o103,
            done=True,
            
                        date=isoparse("2019-11-07"),
                    
            # persons
        )
        rno63.persons.add(alte_user)
        no63.created_at = isoparse("2019-10-25 12:13:05.913096+00:00")
        no63.updated_at = isoparse("2019-10-25 12:13:05.913096+00:00")
        
        no62 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o244,
            note = """Des nouvelles du rendu. ? Prendre des nouvelles pour l'éventuelle rendu de l'étude""",
            pinned = False,
            created_at = isoparse("2019-10-25 12:12:19.153695+00:00"),
            updated_at = isoparse("2019-10-25 12:12:19.153695+00:00"),
            # tags,
            # reminder
        )
        rno62 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no62,
            linked_object_contactable=o244,
            done=True,
            
                        date=isoparse("2019-11-26"),
                    
            # persons
        )
        rno62.persons.add(alte_user)
        no62.created_at = isoparse("2019-10-25 12:12:19.153695+00:00")
        no62.updated_at = isoparse("2019-10-25 12:12:19.153695+00:00")
        
        no61 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o223,
            note = """Ont ils payé leur facture ? est ce que les compteurs ont été mis en place ?""",
            pinned = False,
            created_at = isoparse("2019-10-25 12:11:26.462047+00:00"),
            updated_at = isoparse("2019-10-25 12:11:26.462047+00:00"),
            # tags,
            # reminder
        )
        rno61 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no61,
            linked_object_contactable=o223,
            done=True,
            
                        date=isoparse("2020-03-09"),
                    
            # persons
        )
        rno61.persons.add(alte_user)
        no61.created_at = isoparse("2019-10-25 12:11:26.462047+00:00")
        no61.updated_at = isoparse("2019-10-25 12:11:26.462047+00:00")
        
        no60 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o120,
            note = """Ont ils eu un retour de APAVE ? ont ils payé la facture LEPINE ?""",
            pinned = False,
            created_at = isoparse("2019-10-25 12:09:53.696305+00:00"),
            updated_at = isoparse("2019-10-25 12:09:53.696305+00:00"),
            # tags,
            # reminder
        )
        rno60 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no60,
            linked_object_contactable=o120,
            done=True,
            
                        date=isoparse("2019-11-12"),
                    
            # persons
        )
        rno60.persons.add(alte_user)
        no60.created_at = isoparse("2019-10-25 12:09:53.696305+00:00")
        no60.updated_at = isoparse("2019-10-25 12:09:53.696305+00:00")
        
        no59 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o105,
            note = """Monter dossier de subvention définitivement.""",
            pinned = False,
            created_at = isoparse("2019-10-25 12:06:43.729997+00:00"),
            updated_at = isoparse("2019-10-25 12:06:43.729997+00:00"),
            # tags,
            # reminder
        )
        rno59 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no59,
            linked_object_contactable=o105,
            done=True,
            
                        date=isoparse("2019-11-19"),
                    
            # persons
        )
        rno59.persons.add(alte_user)
        no59.created_at = isoparse("2019-10-25 12:06:43.729997+00:00")
        no59.updated_at = isoparse("2019-10-25 12:06:43.729997+00:00")
        
        no58 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o267,
            note = """Faire le rapport - échange avec Matt et Léa""",
            pinned = False,
            created_at = isoparse("2019-10-23 07:10:29.777665+00:00"),
            updated_at = isoparse("2019-10-23 07:10:29.777665+00:00"),
            # tags,
            # reminder
        )
        rno58 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no58,
            linked_object_contactable=o267,
            done=True,
            
                        date=isoparse("2019-11-18"),
                    
            # persons
        )
        rno58.persons.add(alte_user)
        no58.created_at = isoparse("2019-10-23 07:10:29.777665+00:00")
        no58.updated_at = isoparse("2019-10-23 07:10:29.777665+00:00")
        
        no57 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o104,
            note = """Projet va se lancer ou pas ?""",
            pinned = False,
            created_at = isoparse("2019-10-11 10:38:03.121949+00:00"),
            updated_at = isoparse("2019-10-11 10:38:03.121949+00:00"),
            # tags,
            # reminder
        )
        rno57 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no57,
            linked_object_contactable=o104,
            done=True,
            
                        date=isoparse("2020-02-24"),
                    
            # persons
        )
        rno57.persons.add(alte_user)
        no57.created_at = isoparse("2019-10-11 10:38:03.121949+00:00")
        no57.updated_at = isoparse("2019-10-11 10:38:03.121949+00:00")
        
        no56 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o267,
            note = """Ont ils envoyé les différentes pièces pour le dossier?""",
            pinned = False,
            created_at = isoparse("2019-10-11 09:31:56.005110+00:00"),
            updated_at = isoparse("2019-10-11 09:31:56.005110+00:00"),
            # tags,
            # reminder
        )
        rno56 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no56,
            linked_object_contactable=o267,
            done=True,
            
                        date=isoparse("2019-10-22"),
                    
            # persons
        )
        rno56.persons.add(alte_user)
        no56.created_at = isoparse("2019-10-11 09:31:56.005110+00:00")
        no56.updated_at = isoparse("2019-10-11 09:31:56.005110+00:00")
        
        no55 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o105,
            note = """Faire dossier de subvention et l'envoyer a Xavier !!!""",
            pinned = False,
            created_at = isoparse("2019-10-08 10:10:21.100097+00:00"),
            updated_at = isoparse("2019-10-08 10:10:21.100097+00:00"),
            # tags,
            # reminder
        )
        rno55 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no55,
            linked_object_contactable=o105,
            done=True,
            
                        date=isoparse("2019-10-11"),
                    
            # persons
        )
        rno55.persons.add(alte_user)
        no55.created_at = isoparse("2019-10-08 10:10:21.100097+00:00")
        no55.updated_at = isoparse("2019-10-08 10:10:21.100097+00:00")
        
        no54 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o103,
            note = """Faire le tour des installations - Prendre des photos etc. 

Organiser journée de visite.""",
            pinned = False,
            created_at = isoparse("2019-10-08 10:09:43.716332+00:00"),
            updated_at = isoparse("2019-10-08 10:09:43.716332+00:00"),
            # tags,
            # reminder
        )
        rno54 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no54,
            linked_object_contactable=o103,
            done=True,
            
                        date=isoparse("2019-12-02"),
                    
            # persons
        )
        rno54.persons.add(alte_user)
        no54.created_at = isoparse("2019-10-08 10:09:43.716332+00:00")
        no54.updated_at = isoparse("2019-10-08 10:09:43.716332+00:00")
        
        no53 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o254,
            note = """Faire un thermix metro.""",
            pinned = False,
            created_at = isoparse("2019-10-01 13:49:21.416687+00:00"),
            updated_at = isoparse("2019-10-01 13:49:21.416687+00:00"),
            # tags,
            # reminder
        )
        rno53 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no53,
            linked_object_contactable=o254,
            done=True,
            
                        date=isoparse("2019-10-21"),
                    
            # persons
        )
        rno53.persons.add(alte_user)
        no53.created_at = isoparse("2019-10-01 13:49:21.416687+00:00")
        no53.updated_at = isoparse("2019-10-01 13:49:21.416687+00:00")
        
        no52 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o121,
            note = """relève compteur""",
            pinned = False,
            created_at = isoparse("2019-10-01 10:48:26.231751+00:00"),
            updated_at = isoparse("2019-10-01 10:48:26.231751+00:00"),
            # tags,
            # reminder
        )
        rno52 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no52,
            linked_object_contactable=o121,
            done=True,
            
                        date=isoparse("2020-10-12"),
                    
            # persons
        )
        rno52.persons.add(alte_user)
        no52.created_at = isoparse("2019-10-01 10:48:26.231751+00:00")
        no52.updated_at = isoparse("2019-10-01 10:48:26.231751+00:00")
        
        no51 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o267,
            note = """Préparer la visite école - pb confort été""",
            pinned = False,
            created_at = isoparse("2019-10-01 10:08:24.718668+00:00"),
            updated_at = isoparse("2019-10-01 10:08:24.718668+00:00"),
            # tags,
            # reminder
        )
        rno51 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no51,
            linked_object_contactable=o267,
            done=True,
            
                        date=isoparse("2019-10-07"),
                    
            # persons
        )
        rno51.persons.add(alte_user)
        no51.created_at = isoparse("2019-10-01 10:08:24.718668+00:00")
        no51.updated_at = isoparse("2019-10-01 10:08:24.718668+00:00")
        
        no49 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o111,
            note = """Faire un point avec Fred sur les formations ADEME et autres et définir une stratégie commune.""",
            pinned = False,
            created_at = isoparse("2019-09-24 09:51:03.526759+00:00"),
            updated_at = isoparse("2019-09-24 09:51:03.526759+00:00"),
            # tags,
            # reminder
        )
        rno49 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no49,
            linked_object_contactable=o111,
            done=True,
            
                        date=isoparse("2019-10-01"),
                    
            # persons
        )
        rno49.persons.add(alte_user)
        no49.created_at = isoparse("2019-09-24 09:51:03.526759+00:00")
        no49.updated_at = isoparse("2019-09-24 09:51:03.526759+00:00")
        
        no48 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o103,
            note = """Retour de Cécile pour La Voisinée ?""",
            pinned = False,
            created_at = isoparse("2019-09-24 09:38:00.713392+00:00"),
            updated_at = isoparse("2019-09-24 09:38:00.713392+00:00"),
            # tags,
            # reminder
        )
        rno48 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no48,
            linked_object_contactable=o103,
            done=True,
            
                        date=isoparse("2019-09-30"),
                    
            # persons
        )
        rno48.persons.add(alte_user)
        no48.created_at = isoparse("2019-09-24 09:38:00.713392+00:00")
        no48.updated_at = isoparse("2019-09-24 09:38:00.713392+00:00")
        
        no47 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o103,
            note = """Michelland - est ce qu'il y a d'autre EF a faire faire ?""",
            pinned = False,
            created_at = isoparse("2019-09-19 12:08:03.666163+00:00"),
            updated_at = isoparse("2019-09-19 12:08:03.666163+00:00"),
            # tags,
            # reminder
        )
        rno47 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no47,
            linked_object_contactable=o103,
            done=True,
            
                        date=isoparse("2019-10-21"),
                    
            # persons
        )
        rno47.persons.add(alte_user)
        no47.created_at = isoparse("2019-09-19 12:08:03.666163+00:00")
        no47.updated_at = isoparse("2019-09-19 12:08:03.666163+00:00")
        
        no46 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o105,
            note = """Faire dossier de subvention - prendre un rdv avec Xavier""",
            pinned = False,
            created_at = isoparse("2019-09-19 11:36:08.306840+00:00"),
            updated_at = isoparse("2019-09-19 11:36:08.306840+00:00"),
            # tags,
            # reminder
        )
        rno46 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no46,
            linked_object_contactable=o105,
            done=True,
            
                        date=isoparse("2019-09-30"),
                    
            # persons
        )
        rno46.persons.add(alte_user)
        no46.created_at = isoparse("2019-09-19 11:36:08.306840+00:00")
        no46.updated_at = isoparse("2019-09-19 11:36:08.306840+00:00")
        
        no43 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o266,
            note = """Des nouvelles du Maire ?""",
            pinned = False,
            created_at = isoparse("2019-09-16 10:50:28.388527+00:00"),
            updated_at = isoparse("2019-09-16 10:50:28.388527+00:00"),
            # tags,
            # reminder
        )
        rno43 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no43,
            linked_object_contactable=o266,
            done=True,
            
                        date=isoparse("2019-10-01"),
                    
            # persons
        )
        rno43.persons.add(alte_user)
        no43.created_at = isoparse("2019-09-16 10:50:28.388527+00:00")
        no43.updated_at = isoparse("2019-09-16 10:50:28.388527+00:00")
        
        no40 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o254,
            note = """répondre à sa demande""",
            pinned = False,
            created_at = isoparse("2019-09-12 13:23:08.549103+00:00"),
            updated_at = isoparse("2019-09-12 13:23:08.549103+00:00"),
            # tags,
            # reminder
        )
        rno40 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no40,
            linked_object_contactable=o254,
            done=True,
            
                        date=isoparse("2019-09-18"),
                    
            # persons
        )
        rno40.persons.add(alte_user)
        no40.created_at = isoparse("2019-09-12 13:23:08.549103+00:00")
        no40.updated_at = isoparse("2019-09-12 13:23:08.549103+00:00")
        
        no39 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o267,
            note = """Faire le point avec Julien""",
            pinned = False,
            created_at = isoparse("2019-09-12 13:17:03.095123+00:00"),
            updated_at = isoparse("2019-09-12 13:17:03.095123+00:00"),
            # tags,
            # reminder
        )
        rno39 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no39,
            linked_object_contactable=o267,
            done=True,
            
                        date=isoparse("2019-09-19"),
                    
            # persons
        )
        rno39.persons.add(alte_user)
        no39.created_at = isoparse("2019-09-12 13:17:03.095123+00:00")
        no39.updated_at = isoparse("2019-09-12 13:17:03.095123+00:00")
        
        no38 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o108,
            note = """faire une relance mail - études granulés""",
            pinned = False,
            created_at = isoparse("2019-09-12 12:59:59.719959+00:00"),
            updated_at = isoparse("2019-09-12 12:59:59.719959+00:00"),
            # tags,
            # reminder
        )
        rno38 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no38,
            linked_object_contactable=o108,
            done=True,
            
                        date=isoparse("2019-09-17"),
                    
            # persons
        )
        rno38.persons.add(alte_user)
        no38.created_at = isoparse("2019-09-12 12:59:59.719959+00:00")
        no38.updated_at = isoparse("2019-09-12 12:59:59.719959+00:00")
        
        no37 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o108,
            note = """contacter entreprises ...""",
            pinned = False,
            created_at = isoparse("2019-09-12 12:59:08.704957+00:00"),
            updated_at = isoparse("2019-09-12 12:59:08.704957+00:00"),
            # tags,
            # reminder
        )
        rno37 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no37,
            linked_object_contactable=o108,
            done=True,
            
                        date=isoparse("2019-09-24"),
                    
            # persons
        )
        rno37.persons.add(alte_user)
        no37.created_at = isoparse("2019-09-12 12:59:08.704957+00:00")
        no37.updated_at = isoparse("2019-09-12 12:59:08.704957+00:00")
        
        no36 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o186,
            note = """Des nouvelles des études ? Se rapprocher de l'OPAC et des établissements La roche et du BET.""",
            pinned = False,
            created_at = isoparse("2019-09-12 12:57:13.813577+00:00"),
            updated_at = isoparse("2019-09-12 12:57:13.813577+00:00"),
            # tags,
            # reminder
        )
        rno36 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no36,
            linked_object_contactable=o186,
            done=True,
            
                        date=isoparse("2019-10-30"),
                    
            # persons
        )
        rno36.persons.add(alte_user)
        no36.created_at = isoparse("2019-09-12 12:57:13.813577+00:00")
        no36.updated_at = isoparse("2019-09-12 12:57:13.813577+00:00")
        
        no35 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o103,
            note = """Plus que deux semaines pour instruire des dossiers COT !!!!!""",
            pinned = False,
            created_at = isoparse("2019-09-12 12:53:25.310429+00:00"),
            updated_at = isoparse("2019-09-12 12:53:25.310429+00:00"),
            # tags,
            # reminder
        )
        rno35 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no35,
            linked_object_contactable=o103,
            done=True,
            
                        date=isoparse("2019-11-12"),
                    
            # persons
        )
        rno35.persons.add(alte_user)
        no35.created_at = isoparse("2019-09-12 12:53:25.310429+00:00")
        no35.updated_at = isoparse("2019-09-12 12:53:25.310429+00:00")
        
        no34 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o173,
            note = """Travaux ou pas? On monte un dossier ou pas ?""",
            pinned = False,
            created_at = isoparse("2019-09-12 12:52:50.322315+00:00"),
            updated_at = isoparse("2019-09-12 12:52:50.322315+00:00"),
            # tags,
            # reminder
        )
        rno34 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no34,
            linked_object_contactable=o173,
            done=True,
            
                        date=isoparse("2019-10-14"),
                    
            # persons
        )
        rno34.persons.add(alte_user)
        no34.created_at = isoparse("2019-09-12 12:52:50.322315+00:00")
        no34.updated_at = isoparse("2019-09-12 12:52:50.322315+00:00")
        
        no33 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o103,
            note = """Faire dernier relevé et demander le nombre de nuitée sur la période de septembre..-""",
            pinned = False,
            created_at = isoparse("2019-09-12 12:51:45.803711+00:00"),
            updated_at = isoparse("2019-09-12 12:51:45.803711+00:00"),
            # tags,
            # reminder
        )
        rno33 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no33,
            linked_object_contactable=o103,
            done=True,
            
                        date=isoparse("2019-10-01"),
                    
            # persons
        )
        rno33.persons.add(alte_user)
        no33.created_at = isoparse("2019-09-12 12:51:45.803711+00:00")
        no33.updated_at = isoparse("2019-09-12 12:51:45.803711+00:00")
        
        no32 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o104,
            note = """Est ce qu'ils ont envoyé le dossier de demande de subvention...""",
            pinned = False,
            created_at = isoparse("2019-09-12 12:50:52.944115+00:00"),
            updated_at = isoparse("2019-09-12 12:50:52.944115+00:00"),
            # tags,
            # reminder
        )
        rno32 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no32,
            linked_object_contactable=o104,
            done=True,
            
                        date=isoparse("2019-09-16"),
                    
            # persons
        )
        rno32.persons.add(alte_user)
        no32.created_at = isoparse("2019-09-12 12:50:52.944115+00:00")
        no32.updated_at = isoparse("2019-09-12 12:50:52.944115+00:00")
        
        no31 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o105,
            note = """Relancer Lionel pour installateur.



Pas de réponses d'autres installateurs.. Il faut que Mathieu me rappelle. On va rester avec LEPINE sans doute""",
            pinned = False,
            created_at = isoparse("2019-09-12 12:48:45.604119+00:00"),
            updated_at = isoparse("2019-09-12 12:48:45.604119+00:00"),
            # tags,
            # reminder
        )
        rno31 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no31,
            linked_object_contactable=o105,
            done=True,
            
                        date=isoparse("2019-09-18"),
                    
            # persons
        )
        rno31.persons.add(alte_user)
        no31.created_at = isoparse("2019-09-12 12:48:45.604119+00:00")
        no31.updated_at = isoparse("2019-09-12 12:48:45.604119+00:00")
        
        no30 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o223,
            note = """factures et mise en service ?""",
            pinned = False,
            created_at = isoparse("2019-08-30 08:37:56.553505+00:00"),
            updated_at = isoparse("2019-08-30 08:37:56.553505+00:00"),
            # tags,
            # reminder
        )
        rno30 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no30,
            linked_object_contactable=o223,
            done=True,
            
                        date=isoparse("2019-09-10"),
                    
            # persons
        )
        rno30.persons.add(alte_user)
        no30.created_at = isoparse("2019-08-30 08:37:56.553505+00:00")
        no30.updated_at = isoparse("2019-08-30 08:37:56.553505+00:00")
        
        no29 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o103,
            note = """faire un doodle pour cotech

date ciblée : 

jeudi 12 septembre 9h30-12h30

mardi 17 septebmre 9h30-12h30

Mercredi 18 septebmre 14h17h

Vendredi 20 septembre 9h30-12h30""",
            pinned = False,
            created_at = isoparse("2019-08-26 10:01:56.500653+00:00"),
            updated_at = isoparse("2019-08-26 10:01:56.500653+00:00"),
            # tags,
            # reminder
        )
        rno29 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no29,
            linked_object_contactable=o103,
            done=True,
            
                        date=isoparse("2019-09-02"),
                    
            # persons
        )
        rno29.persons.add(alte_user)
        no29.created_at = isoparse("2019-08-26 10:01:56.500653+00:00")
        no29.updated_at = isoparse("2019-08-26 10:01:56.500653+00:00")
        
        no28 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o103,
            note = """Faire rapport et tutti pour bureau""",
            pinned = False,
            created_at = isoparse("2019-08-26 09:56:04.225016+00:00"),
            updated_at = isoparse("2019-08-26 09:56:04.225016+00:00"),
            # tags,
            # reminder
        )
        rno28 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no28,
            linked_object_contactable=o103,
            done=True,
            
                        date=isoparse("2019-09-16"),
                    
            # persons
        )
        rno28.persons.add(alte_user)
        no28.created_at = isoparse("2019-08-26 09:56:04.225016+00:00")
        no28.updated_at = isoparse("2019-08-26 09:56:04.225016+00:00")
        
        no27 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o108,
            note = """Contacter l'équipe pour se constituer une équipe""",
            pinned = False,
            created_at = isoparse("2019-08-19 09:19:44.966074+00:00"),
            updated_at = isoparse("2019-08-19 09:19:44.966074+00:00"),
            # tags,
            # reminder
        )
        rno27 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no27,
            linked_object_contactable=o108,
            done=True,
            
                        date=isoparse("2019-08-26"),
                    
            # persons
        )
        rno27.persons.add(alte_user)
        no27.created_at = isoparse("2019-08-19 09:19:44.966074+00:00")
        no27.updated_at = isoparse("2019-08-19 09:19:44.966074+00:00")
        
        no26 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o108,
            note = """Ont ils répondu à notre demande ? lettre de soutien""",
            pinned = False,
            created_at = isoparse("2019-08-13 12:57:21.057212+00:00"),
            updated_at = isoparse("2019-08-13 12:57:21.057212+00:00"),
            # tags,
            # reminder
        )
        rno26 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no26,
            linked_object_contactable=o108,
            done=True,
            
                        date=isoparse("2019-08-27"),
                    
            # persons
        )
        rno26.persons.add(alte_user)
        no26.created_at = isoparse("2019-08-13 12:57:21.057212+00:00")
        no26.updated_at = isoparse("2019-08-13 12:57:21.057212+00:00")
        
        no25 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o103,
            note = """Relancer david F si pas de relevé vendredi.

corentin fillon relance lundi""",
            pinned = False,
            created_at = isoparse("2019-08-05 12:15:23.378088+00:00"),
            updated_at = isoparse("2019-08-05 12:15:23.378088+00:00"),
            # tags,
            # reminder
        )
        rno25 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no25,
            linked_object_contactable=o103,
            done=True,
            
                        date=isoparse("2019-08-19"),
                    
            # persons
        )
        rno25.persons.add(alte_user)
        no25.created_at = isoparse("2019-08-05 12:15:23.378088+00:00")
        no25.updated_at = isoparse("2019-08-05 12:15:23.378088+00:00")
        
        no24 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o103,
            note = """Alors il en est ou le matos ?""",
            pinned = False,
            created_at = isoparse("2019-06-13 15:42:54.937511+00:00"),
            updated_at = isoparse("2019-06-13 15:42:54.937511+00:00"),
            # tags,
            # reminder
        )
        rno24 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no24,
            linked_object_contactable=o103,
            done=True,
            
                        date=isoparse("2019-07-11"),
                    
            # persons
        )
        rno24.persons.add(alte_user)
        no24.created_at = isoparse("2019-06-13 15:42:54.937511+00:00")
        no24.updated_at = isoparse("2019-06-13 15:42:54.937511+00:00")
        
        no23 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o120,
            note = """On prend contact avec Mme le Maire pour savoir où on en est ?""",
            pinned = False,
            created_at = isoparse("2019-06-13 13:51:00.819795+00:00"),
            updated_at = isoparse("2019-06-13 13:51:00.819795+00:00"),
            # tags,
            # reminder
        )
        rno23 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no23,
            linked_object_contactable=o120,
            done=True,
            
                        date=isoparse("2019-07-09"),
                    
            # persons
        )
        rno23.persons.add(alte_user)
        no23.created_at = isoparse("2019-06-13 13:51:00.819795+00:00")
        no23.updated_at = isoparse("2019-06-13 13:51:00.819795+00:00")
        
        no22 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o103,
            note = """Comment ça se passe à présent pour le PV ?""",
            pinned = False,
            created_at = isoparse("2019-06-13 13:49:12.878970+00:00"),
            updated_at = isoparse("2019-06-13 13:49:12.878970+00:00"),
            # tags,
            # reminder
        )
        rno22 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no22,
            linked_object_contactable=o103,
            done=True,
            
                        date=isoparse("2019-07-11"),
                    
            # persons
        )
        rno22.persons.add(alte_user)
        no22.created_at = isoparse("2019-06-13 13:49:12.878970+00:00")
        no22.updated_at = isoparse("2019-06-13 13:49:12.878970+00:00")
        
        no21 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o103,
            note = """AMI : projet Eco musée ?



Nouvelle pour ST ?""",
            pinned = False,
            created_at = isoparse("2019-06-13 13:18:28.897650+00:00"),
            updated_at = isoparse("2019-06-13 13:18:28.897650+00:00"),
            # tags,
            # reminder
        )
        rno21 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no21,
            linked_object_contactable=o103,
            done=True,
            
                        date=isoparse("2019-07-11"),
                    
            # persons
        )
        rno21.persons.add(alte_user)
        no21.created_at = isoparse("2019-06-13 13:18:28.897650+00:00")
        no21.updated_at = isoparse("2019-06-13 13:18:28.897650+00:00")
        
        no20 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o121,
            note = """Relancer marie pierre pour facture si tjs pas recu""",
            pinned = False,
            created_at = isoparse("2019-06-13 09:38:52.082984+00:00"),
            updated_at = isoparse("2019-06-13 09:38:52.082984+00:00"),
            # tags,
            # reminder
        )
        rno20 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no20,
            linked_object_contactable=o121,
            done=True,
            
                        date=isoparse("2019-07-11"),
                    
            # persons
        )
        rno20.persons.add(alte_user)
        no20.created_at = isoparse("2019-06-13 09:38:52.082984+00:00")
        no20.updated_at = isoparse("2019-06-13 09:38:52.082984+00:00")
        
        no19 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o105,
            note = """Ont ils contacté des entreprises pour visite ?



Tjs pas de nouvelles de Mr Parades ? ...""",
            pinned = False,
            created_at = isoparse("2019-06-03 14:53:54.282894+00:00"),
            updated_at = isoparse("2019-06-03 14:53:54.282894+00:00"),
            # tags,
            # reminder
        )
        rno19 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no19,
            linked_object_contactable=o105,
            done=True,
            
                        date=isoparse("2019-06-11"),
                    
            # persons
        )
        rno19.persons.add(alte_user)
        no19.created_at = isoparse("2019-06-03 14:53:54.282894+00:00")
        no19.updated_at = isoparse("2019-06-03 14:53:54.282894+00:00")
        
        no18 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o223,
            note = """AAP région ? Répondu ? 



quand les travaux sont ils prévus ?""",
            pinned = False,
            created_at = isoparse("2019-06-03 14:53:03.181348+00:00"),
            updated_at = isoparse("2019-06-03 14:53:03.181348+00:00"),
            # tags,
            # reminder
        )
        rno18 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no18,
            linked_object_contactable=o223,
            done=True,
            
                        date=isoparse("2019-06-06"),
                    
            # persons
        )
        rno18.persons.add(alte_user)
        no18.created_at = isoparse("2019-06-03 14:53:03.181348+00:00")
        no18.updated_at = isoparse("2019-06-03 14:53:03.181348+00:00")
        
        no17 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o120,
            note = """Est ce que l'on a recu des offres ? 



- Ont ils eu des réponses d'APAVE et des fournisseurs de granulés ?""",
            pinned = False,
            created_at = isoparse("2019-06-03 14:50:56.293601+00:00"),
            updated_at = isoparse("2019-06-03 14:50:56.293601+00:00"),
            # tags,
            # reminder
        )
        rno17 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no17,
            linked_object_contactable=o120,
            done=True,
            
                        date=isoparse("2019-06-05"),
                    
            # persons
        )
        rno17.persons.add(alte_user)
        no17.created_at = isoparse("2019-06-03 14:50:56.293601+00:00")
        no17.updated_at = isoparse("2019-06-03 14:50:56.293601+00:00")
        
        no16 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o223,
            note = """Aide région, où ça en est ?""",
            pinned = False,
            created_at = isoparse("2019-05-06 10:33:58.637311+00:00"),
            updated_at = isoparse("2019-05-06 10:33:58.637311+00:00"),
            # tags,
            # reminder
        )
        rno16 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no16,
            linked_object_contactable=o223,
            done=True,
            
                        date=isoparse("2019-05-09"),
                    
            # persons
        )
        rno16.persons.add(alte_user)
        no16.created_at = isoparse("2019-05-06 10:33:58.637311+00:00")
        no16.updated_at = isoparse("2019-05-06 10:33:58.637311+00:00")
        
        no15 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o121,
            note = """Les compteurs ont ils été posés ?""",
            pinned = False,
            created_at = isoparse("2019-05-06 10:33:12.537351+00:00"),
            updated_at = isoparse("2019-05-06 10:33:12.537351+00:00"),
            # tags,
            # reminder
        )
        rno15 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no15,
            linked_object_contactable=o121,
            done=True,
            
                        date=isoparse("2019-05-07"),
                    
            # persons
        )
        rno15.persons.add(alte_user)
        no15.created_at = isoparse("2019-05-06 10:33:12.537351+00:00")
        no15.updated_at = isoparse("2019-05-06 10:33:12.537351+00:00")
        
        no14 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o103,
            note = """relance projet PV""",
            pinned = False,
            created_at = isoparse("2019-04-24 08:44:34.994473+00:00"),
            updated_at = isoparse("2019-04-24 08:44:34.994473+00:00"),
            # tags,
            # reminder
        )
        rno14 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no14,
            linked_object_contactable=o103,
            done=True,
            
                        date=isoparse("2019-05-15"),
                    
            # persons
        )
        rno14.persons.add(alte_user)
        no14.created_at = isoparse("2019-04-24 08:44:34.994473+00:00")
        no14.updated_at = isoparse("2019-04-24 08:44:34.994473+00:00")
        
        no13 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o228,
            note = """Relancer si pas de nouvelles....""",
            pinned = False,
            created_at = isoparse("2019-04-11 08:14:12.777899+00:00"),
            updated_at = isoparse("2019-04-11 08:14:12.777899+00:00"),
            # tags,
            # reminder
        )
        rno13 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no13,
            linked_object_contactable=o228,
            done=True,
            
                        date=isoparse("2019-05-15"),
                    
            # persons
        )
        rno13.persons.add(alte_user)
        no13.created_at = isoparse("2019-04-11 08:14:12.777899+00:00")
        no13.updated_at = isoparse("2019-04-11 08:14:12.777899+00:00")
        
        no7 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o120,
            note = """Rappeler pour 1ère prise de contact

message laissé le 25/09""",
            pinned = False,
            created_at = isoparse("2018-09-17 14:56:02.064041+00:00"),
            updated_at = isoparse("2018-09-17 14:56:02.064041+00:00"),
            # tags,
            # reminder
        )
        rno7 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no7,
            linked_object_contactable=o120,
            done=True,
            
                        date=isoparse("2018-09-28"),
                    
            # persons
        )
        rno7.persons.add(alte_user)
        no7.created_at = isoparse("2018-09-17 14:56:02.064041+00:00")
        no7.updated_at = isoparse("2018-09-17 14:56:02.064041+00:00")
        
        no6 = Note.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object = o106,
            note = """A relancer pour avoir la délibération !!""",
            pinned = False,
            created_at = isoparse("2018-09-06 13:20:37.408603+00:00"),
            updated_at = isoparse("2018-09-06 13:20:37.408603+00:00"),
            # tags,
            # reminder
        )
        rno6 = Reminder.objects.create(
            owning_group=alte_group,
            creator = alte_user,
            linked_object_task=no6,
            linked_object_contactable=o106,
            done=True,
            
                        date=isoparse("2018-09-17"),
                    
            # persons
        )
        rno6.persons.add(alte_user)
        no6.created_at = isoparse("2018-09-06 13:20:37.408603+00:00")
        no6.updated_at = isoparse("2018-09-06 13:20:37.408603+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c470, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="François",
            last_name="Bride",
            email="francoisbride@yahoo.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"François",
                'last_name':"Bride",
                'email':"francoisbride@yahoo.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 72 14 49 12",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c470.referents.add(alte_user)
        moo434 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c470,
            organization = o117,
            use_address_from_organization = True,
            title_in_organization="Adjoint DD - Bâtiment - Energie",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c466, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Hélène",
            last_name="Kaminski",
            email="helene.kaminski@rhone.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Hélène",
                'last_name':"Kaminski",
                'email':"helene.kaminski@rhone.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 29 55 43 78",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c466.referents.add(alte_user)
        moo430 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c466,
            organization = o302,
            use_address_from_organization = True,
            title_in_organization="Chargé de projet",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c465, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Enzo",
            last_name="Casnici",
            email="enzo.casnici@rhone.chambagri.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Enzo",
                'last_name':"Casnici",
                'email':"enzo.casnici@rhone.chambagri.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c465.referents.add(alte_user)
        moo429 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c465,
            organization = o124,
            use_address_from_organization = True,
            title_in_organization="Chargé EnR",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c463, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Laure",
            last_name="Mellier",
            email="laure.mellier@rhone.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Laure",
                'last_name':"Mellier",
                'email':"laure.mellier@rhone.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 72 61 70 50",
                'mobile_phone':"06 19 40 29 03",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c463.referents.add(alte_user)
        moo427 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c463,
            organization = o302,
            use_address_from_organization = True,
            title_in_organization="Chargée de Projet",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c460, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Julien",
            last_name="Garçon",
            email="",
            defaults={
                'owning_group':alte_group,
                'first_name':"Julien",
                'last_name':"Garçon",
                'email':"",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"06 25 30 60 78",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c460.referents.add(alte_user)
        moo424 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c460,
            organization = o113,
            use_address_from_organization = True,
            title_in_organization="Chargé offre achat groupé",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:    
            nc361 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c460,
                note = """A rappeler concernant les offres groupées.""",
                pinned = False,
                created_at = isoparse("2020-08-21 08:45:32.662760+00:00"),
                updated_at = isoparse("2020-08-21 08:45:32.662760+00:00"),
                # tags,
                # reminder
            )

            rnc361 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc361,
                linked_object_contactable=c460,
                done=True,
        
                            date=isoparse("2020-09-02"),
                        
            # persons
            )
            rnc361.persons.add(alte_user)
            nc361.created_at = isoparse("2020-08-21 08:45:32.662760+00:00")
            nc361.updated_at = isoparse("2020-08-21 08:45:32.662760+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c459, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Olivier",
            last_name="Peyreron",
            email="opereyron@syder.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Olivier",
                'last_name':"Peyreron",
                'email':"opereyron@syder.fr",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"06 25 30 60 58",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c459.referents.add(alte_user)
        moo423 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c459,
            organization = o113,
            use_address_from_organization = True,
            title_in_organization="Chargé de mission PV",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c459.tags.add(t38)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c457, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Nelly",
            last_name="Lafaye",
            email="nelly.lafaye@ademe.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Nelly",
                'last_name':"Lafaye",
                'email':"nelly.lafaye@ademe.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 73 31 52 90",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c457.referents.add(alte_user)
        moo422 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c457,
            organization = o111,
            use_address_from_organization = True,
            title_in_organization="Chargée des CDT",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c456, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Laurent",
            last_name="Petrelli",
            email="Laurent.PETRELLI@rhone.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Laurent",
                'last_name':"Petrelli",
                'email':"Laurent.PETRELLI@rhone.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 72 61 76 57",
                'mobile_phone':"06 28 03 84 52",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c456.referents.add(alte_user)
        moo421 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c456,
            organization = o302,
            use_address_from_organization = True,
            title_in_organization="Responsable d'Agence",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c456.tags.add(t39)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c454, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Florent",
            last_name="Réginensi",
            email="",
            defaults={
                'owning_group':alte_group,
                'first_name':"Florent",
                'last_name':"Réginensi",
                'email':"",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"06 25 36 65 84",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c454.referents.add(alte_user)
        moo419 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c454,
            organization = o301,
            use_address_from_organization = True,
            title_in_organization="Technico-Commercial",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c454.tags.add(t39)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c452, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Christophe",
            last_name="Séve",
            email="Christophe.SEVE@sdmis.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Christophe",
                'last_name':"Séve",
                'email':"Christophe.SEVE@sdmis.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 72 84 37 71",
                'mobile_phone':"06 18 22 55 02",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c452.referents.add(alte_user)
        moo417 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c452,
            organization = o299,
            use_address_from_organization = True,
            title_in_organization="Chef de projet bâtiment",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c451, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Rija",
            last_name="Randria",
            email="rija@evasionetloisirs.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Rija",
                'last_name':"Randria",
                'email':"rija@evasionetloisirs.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 89 10 85",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c451.referents.add(alte_user)
        moo416 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c451,
            organization = o298,
            use_address_from_organization = True,
            title_in_organization="Gérant",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:    
            nc355 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c451,
                note = """Convenir d'une date de visite""",
                pinned = False,
                created_at = isoparse("2020-04-17 14:05:01.015232+00:00"),
                updated_at = isoparse("2020-04-17 14:05:01.015232+00:00"),
                # tags,
                # reminder
            )

            rnc355 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc355,
                linked_object_contactable=c451,
                done=True,
        
                            date=isoparse("2020-05-04"),
                        
            # persons
            )
            rnc355.persons.add(alte_user)
            nc355.created_at = isoparse("2020-04-17 14:05:01.015232+00:00")
            nc355.updated_at = isoparse("2020-04-17 14:05:01.015232+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c450, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Juliane",
            last_name="Oudot",
            email="joudot@villefranche.net",
            defaults={
                'owning_group':alte_group,
                'first_name':"Juliane",
                'last_name':"Oudot",
                'email':"joudot@villefranche.net",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 62 83 84",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c450.referents.add(alte_user)
        moo415 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c450,
            organization = o288,
            use_address_from_organization = True,
            title_in_organization="Mission DD - Gestion des Risques",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c450.tags.add(t38)
                        
        if contact_created:    
            nc352 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c450,
                note = """Dépôt du dossier CEE ?""",
                pinned = False,
                created_at = isoparse("2020-04-14 12:44:30.882069+00:00"),
                updated_at = isoparse("2020-04-14 12:44:30.882069+00:00"),
                # tags,
                # reminder
            )

            rnc352 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc352,
                linked_object_contactable=c450,
                done=True,
        
                            date=isoparse("2020-05-25"),
                        
            # persons
            )
            rnc352.persons.add(alte_user)
            nc352.created_at = isoparse("2020-04-14 12:44:30.882069+00:00")
            nc352.updated_at = isoparse("2020-04-14 12:44:30.882069+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c449, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Claude",
            last_name="Villard",
            email="Claude.Villard@mairie-jons.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Claude",
                'last_name':"Villard",
                'email':"Claude.Villard@mairie-jons.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 72 93 01 81",
                'mobile_phone':"06 89 94 31 65",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c449.referents.add(alte_user)
        moo414 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c449,
            organization = o280,
            use_address_from_organization = True,
            title_in_organization="Maire",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c449.tags.add(t38)
                        
        if contact_created:    
            nc351 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c449,
                note = """Relancer pour prendre des nouvelles.""",
                pinned = False,
                created_at = isoparse("2020-04-14 12:31:01.907923+00:00"),
                updated_at = isoparse("2020-04-14 12:31:01.907923+00:00"),
                # tags,
                # reminder
            )

            rnc351 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc351,
                linked_object_contactable=c449,
                done=True,
        
                            date=isoparse("2020-04-22"),
                        
            # persons
            )
            rnc351.persons.add(alte_user)
            nc351.created_at = isoparse("2020-04-14 12:31:01.907923+00:00")
            nc351.updated_at = isoparse("2020-04-14 12:31:01.907923+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c448, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Anaïs",
            last_name="Vincent",
            email="a.vincent@agglo-villefranche.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Anaïs",
                'last_name':"Vincent",
                'email':"a.vincent@agglo-villefranche.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04.74.68.92.22",
                'mobile_phone':"06.08.21.35.29",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c448.referents.add(alte_user)
        moo413 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c448,
            organization = o288,
            use_address_from_organization = True,
            title_in_organization="Technicienne Bâtiment",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c448.tags.add(t38)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c438, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Pierre",
            last_name="Arricot",
            email="p.arricot@agglo-villefranche.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Pierre",
                'last_name':"Arricot",
                'email':"p.arricot@agglo-villefranche.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 69 08 66",
                'mobile_phone':"06 87 82 34 50",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c438.referents.add(alte_user)
        moo412 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c438,
            organization = o288,
            use_address_from_organization = True,
            title_in_organization="Chargée des Grands Projets",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c438.tags.add(t38)
                        
        if contact_created:    
            nc341 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c438,
                note = """Faire complément rapport.""",
                pinned = False,
                created_at = isoparse("2020-02-25 14:36:15.485230+00:00"),
                updated_at = isoparse("2020-02-25 14:36:15.485230+00:00"),
                # tags,
                # reminder
            )

            rnc341 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc341,
                linked_object_contactable=c438,
                done=True,
        
                            date=isoparse("2020-02-27"),
                        
            # persons
            )
            rnc341.persons.add(alte_user)
            nc341.created_at = isoparse("2020-02-25 14:36:15.485230+00:00")
            nc341.updated_at = isoparse("2020-02-25 14:36:15.485230+00:00")
        
        if contact_created:    
            nc338 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c438,
                note = """Faire rapport thermo""",
                pinned = False,
                created_at = isoparse("2020-01-24 09:07:37.732896+00:00"),
                updated_at = isoparse("2020-01-24 09:07:37.732896+00:00"),
                # tags,
                # reminder
            )

            rnc338 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc338,
                linked_object_contactable=c438,
                done=True,
        
                            date=isoparse("2020-02-11"),
                        
            # persons
            )
            rnc338.persons.add(alte_user)
            nc338.created_at = isoparse("2020-01-24 09:07:37.732896+00:00")
            nc338.updated_at = isoparse("2020-01-24 09:07:37.732896+00:00")
        
        if contact_created:    
            nc329 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c438,
                note = """Préparer thermographie""",
                pinned = False,
                created_at = isoparse("2019-12-17 11:47:21.658328+00:00"),
                updated_at = isoparse("2019-12-17 11:47:21.658328+00:00"),
                # tags,
                # reminder
            )

            rnc329 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc329,
                linked_object_contactable=c438,
                done=True,
        
                            date=isoparse("2020-01-20"),
                        
            # persons
            )
            rnc329.persons.add(alte_user)
            nc329.created_at = isoparse("2019-12-17 11:47:21.658328+00:00")
            nc329.updated_at = isoparse("2019-12-17 11:47:21.658328+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c447, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Juliane",
            last_name="Oudot",
            email="joudot@villefranche.net",
            defaults={
                'owning_group':alte_group,
                'first_name':"Juliane",
                'last_name':"Oudot",
                'email':"joudot@villefranche.net",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 62 83 84",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c447.referents.add(alte_user)
        moo411 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c447,
            organization = o289,
            use_address_from_organization = True,
            title_in_organization="Chargée Mission DD - Gestion des Risques",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c447.tags.add(t38)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c446, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Marie Laure",
            last_name="Jas",
            email="pcaet@cc-pierresdorees.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Marie Laure",
                'last_name':"Jas",
                'email':"pcaet@cc-pierresdorees.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 37 55 87 42",
                'mobile_phone':"07 64 39 76 47",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c446.referents.add(alte_user)
        moo410 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c446,
            organization = o290,
            use_address_from_organization = True,
            title_in_organization="Chargée de mission PCAET",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:    
            nc345 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c446,
                note = """Relancer concernant ses projets (salon de coiffure etc.)""",
                pinned = False,
                created_at = isoparse("2020-03-09 15:55:23.305532+00:00"),
                updated_at = isoparse("2020-03-09 15:55:23.305532+00:00"),
                # tags,
                # reminder
            )

            rnc345 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc345,
                linked_object_contactable=c446,
                done=True,
        
                            date=isoparse("2020-06-08"),
                        
            # persons
            )
            rnc345.persons.add(alte_user)
            nc345.created_at = isoparse("2020-03-09 15:55:23.305532+00:00")
            nc345.updated_at = isoparse("2020-03-09 15:55:23.305532+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c445, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Florence",
            last_name="Pelloux",
            email="ass.ludovillefranche@sfr.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Florence",
                'last_name':"Pelloux",
                'email':"ass.ludovillefranche@sfr.fr",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"06 2 454 35 51",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c445.referents.add(alte_user)
        moo409 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c445,
            organization = o297,
            use_address_from_organization = True,
            title_in_organization="Salariée",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c445.tags.add(t38)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c444, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Pierrick",
            last_name="Lancien",
            email="pierrick.lancien@gmail.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Pierrick",
                'last_name':"Lancien",
                'email':"pierrick.lancien@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 70 71 42 24",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c444.referents.add(alte_user)
        moo408 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c444,
            organization = o296,
            use_address_from_organization = True,
            title_in_organization="Responsable technique",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c444.tags.add(t38)
                        
        if contact_created:    
            nc342 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c444,
                note = """A relancer si pas de nouvelles""",
                pinned = False,
                created_at = isoparse("2020-03-03 10:19:13.474176+00:00"),
                updated_at = isoparse("2020-03-03 10:19:13.474176+00:00"),
                # tags,
                # reminder
            )

            rnc342 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc342,
                linked_object_contactable=c444,
                done=True,
        
                            date=isoparse("2020-03-17"),
                        
            # persons
            )
            rnc342.persons.add(alte_user)
            nc342.created_at = isoparse("2020-03-03 10:19:13.474176+00:00")
            nc342.updated_at = isoparse("2020-03-03 10:19:13.474176+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c443, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="L'haoua",
            last_name="Mustapha",
            email="mlhaoua@vienne-condrieu-agglomeration.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"L'haoua",
                'last_name':"Mustapha",
                'email':"mlhaoua@vienne-condrieu-agglomeration.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 82 06 33 17",
                'mobile_phone':"06 25 78 79 93",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c443.referents.add(alte_user)
        moo407 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c443,
            organization = o295,
            use_address_from_organization = True,
            title_in_organization="Responsable Transition Energétique et Biodiversité",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c443.tags.add(t39)
                        
        if contact_created:    
            nc350 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c443,
                note = """Reprendre contact pour lancer les projets.""",
                pinned = False,
                created_at = isoparse("2020-03-11 16:10:04.044441+00:00"),
                updated_at = isoparse("2020-03-11 16:10:04.044441+00:00"),
                # tags,
                # reminder
            )

            rnc350 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc350,
                linked_object_contactable=c443,
                done=True,
        
                            date=isoparse("2020-06-01"),
                        
            # persons
            )
            rnc350.persons.add(alte_user)
            nc350.created_at = isoparse("2020-03-11 16:10:04.044441+00:00")
            nc350.updated_at = isoparse("2020-03-11 16:10:04.044441+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c442, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Vincent",
            last_name="Bracco",
            email="",
            defaults={
                'owning_group':alte_group,
                'first_name':"Vincent",
                'last_name':"Bracco",
                'email':"",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 02 31 24 68",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c442.referents.add(alte_user)
        moo406 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c442,
            organization = o294,
            use_address_from_organization = True,
            title_in_organization="Adjoint bâtiment, énergie, mobilité & sports",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c442.tags.add(t39)
                        
        if contact_created:    
            nc346 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c442,
                note = """Répondre à sa demande - le contacter pour la définir""",
                pinned = False,
                created_at = isoparse("2020-03-09 16:45:11.080676+00:00"),
                updated_at = isoparse("2020-03-09 16:45:11.080676+00:00"),
                # tags,
                # reminder
            )

            rnc346 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc346,
                linked_object_contactable=c442,
                done=True,
        
                            date=isoparse("2020-05-25"),
                        
            # persons
            )
            rnc346.persons.add(alte_user)
            nc346.created_at = isoparse("2020-03-09 16:45:11.080676+00:00")
            nc346.updated_at = isoparse("2020-03-09 16:45:11.080676+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c441, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Jean François",
            last_name="Rivier",
            email="jef.rivier@orange.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Jean François",
                'last_name':"Rivier",
                'email':"jef.rivier@orange.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c441.referents.add(alte_user)
        moo405 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c441,
            organization = o293,
            use_address_from_organization = True,
            title_in_organization="Adjoint",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c441.tags.add(t39)
                        
        if contact_created:    
            nc340 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c441,
                note = """Prendre nouvelles des avancements pour AO PV auprès de Fred D""",
                pinned = False,
                created_at = isoparse("2020-02-25 14:26:08.508284+00:00"),
                updated_at = isoparse("2020-02-25 14:26:08.508284+00:00"),
                # tags,
                # reminder
            )

            rnc340 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc340,
                linked_object_contactable=c441,
                done=True,
        
                            date=isoparse("2020-05-18"),
                        
            # persons
            )
            rnc340.persons.add(alte_user)
            nc340.created_at = isoparse("2020-02-25 14:26:08.508284+00:00")
            nc340.updated_at = isoparse("2020-02-25 14:26:08.508284+00:00")
        
        if contact_created:    
            nc339 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c441,
                note = """A contacter pour demande""",
                pinned = False,
                created_at = isoparse("2020-02-19 16:52:29.006377+00:00"),
                updated_at = isoparse("2020-02-19 16:52:29.006377+00:00"),
                # tags,
                # reminder
            )

            rnc339 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc339,
                linked_object_contactable=c441,
                done=True,
        
                            date=isoparse("2020-02-24"),
                        
            # persons
            )
            rnc339.persons.add(alte_user)
            nc339.created_at = isoparse("2020-02-19 16:52:29.006377+00:00")
            nc339.updated_at = isoparse("2020-02-19 16:52:29.006377+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c439, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Sébastien",
            last_name="Carreno",
            email="s.carreno@saintlaurentdemure.org",
            defaults={
                'owning_group':alte_group,
                'first_name':"Sébastien",
                'last_name':"Carreno",
                'email':"s.carreno@saintlaurentdemure.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 72 48 61 21",
                'mobile_phone':"06 07 72 28 06",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c439.referents.add(alte_user)
        moo403 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c439,
            organization = o254,
            use_address_from_organization = True,
            title_in_organization="DST",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c439.tags.add(t38)
                        
        if contact_created:    
            nc349 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c439,
                note = """Prendre des nouvelles de son projet de RC""",
                pinned = False,
                created_at = isoparse("2020-03-10 10:06:45.352937+00:00"),
                updated_at = isoparse("2020-03-10 10:06:45.352937+00:00"),
                # tags,
                # reminder
            )

            rnc349 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc349,
                linked_object_contactable=c439,
                done=True,
        
                            date=isoparse("2020-09-07"),
                        
            # persons
            )
            rnc349.persons.add(alte_user)
            nc349.created_at = isoparse("2020-03-10 10:06:45.352937+00:00")
            nc349.updated_at = isoparse("2020-03-10 10:06:45.352937+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c436, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Aurélie",
            last_name="Ghirardi",
            email="a.ghirardi@cc-pierresdorees.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Aurélie",
                'last_name':"Ghirardi",
                'email':"a.ghirardi@cc-pierresdorees.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 67 95 02",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c436.referents.add(alte_user)
        moo401 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c436,
            organization = o290,
            use_address_from_organization = True,
            title_in_organization="Chargé de mission DD",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c436.tags.add(t39)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c434, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Sandrine",
            last_name="Sarrazin",
            email="S.SARRAZIN@agglo-villefranche.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Sandrine",
                'last_name':"Sarrazin",
                'email':"S.SARRAZIN@agglo-villefranche.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 03 32 66",
                'mobile_phone':"06 72 23 65 76",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c434.referents.add(alte_user)
        moo400 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c434,
            organization = o288,
            use_address_from_organization = True,
            title_in_organization="Chargé mobilité et DD",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:    
            nc344 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c434,
                note = """Info PV pour Ombrières""",
                pinned = False,
                created_at = isoparse("2020-03-09 15:45:24.853363+00:00"),
                updated_at = isoparse("2020-03-09 15:45:24.853363+00:00"),
                # tags,
                # reminder
            )

            rnc344 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc344,
                linked_object_contactable=c434,
                done=True,
        
                            date=isoparse("2020-04-20"),
                        
            # persons
            )
            rnc344.persons.add(alte_user)
            nc344.created_at = isoparse("2020-03-09 15:45:24.853363+00:00")
            nc344.updated_at = isoparse("2020-03-09 15:45:24.853363+00:00")
        
        if contact_created:    
            nc337 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c434,
                note = """Prendre RDV pour échange PV, suivi conso, 2020""",
                pinned = False,
                created_at = isoparse("2019-12-23 11:00:00.796263+00:00"),
                updated_at = isoparse("2019-12-23 11:00:00.796263+00:00"),
                # tags,
                # reminder
            )

            rnc337 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc337,
                linked_object_contactable=c434,
                done=True,
        
                            date=isoparse("2020-01-06"),
                        
            # persons
            )
            rnc337.persons.add(alte_user)
            nc337.created_at = isoparse("2019-12-23 11:00:00.796263+00:00")
            nc337.updated_at = isoparse("2019-12-23 11:00:00.796263+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c423, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Stéphane",
            last_name="Matray",
            email="rst@mairie-jons.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Stéphane",
                'last_name':"Matray",
                'email':"rst@mairie-jons.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"07 89 81 41 06",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c423.referents.add(alte_user)
        moo391 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c423,
            organization = o280,
            use_address_from_organization = True,
            title_in_organization="Responsable Service Technique",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c423.tags.add(t38)
                        
        if contact_created:    
            nc317 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c423,
                note = """Le rapport lui a t il été utile. ?""",
                pinned = False,
                created_at = isoparse("2019-10-25 12:15:42.643487+00:00"),
                updated_at = isoparse("2019-10-25 12:15:42.643487+00:00"),
                # tags,
                # reminder
            )

            rnc317 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc317,
                linked_object_contactable=c423,
                done=True,
        
                            date=isoparse("2019-11-18"),
                        
            # persons
            )
            rnc317.persons.add(alte_user)
            nc317.created_at = isoparse("2019-10-25 12:15:42.643487+00:00")
            nc317.updated_at = isoparse("2019-10-25 12:15:42.643487+00:00")
        
        if contact_created:    
            nc308 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c423,
                note = """A t il envoyé les documents pour le rapport ?""",
                pinned = False,
                created_at = isoparse("2019-10-11 09:31:14.968075+00:00"),
                updated_at = isoparse("2019-10-11 09:31:14.968075+00:00"),
                # tags,
                # reminder
            )

            rnc308 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc308,
                linked_object_contactable=c423,
                done=True,
        
                            date=isoparse("2019-10-22"),
                        
            # persons
            )
            rnc308.persons.add(alte_user)
            nc308.created_at = isoparse("2019-10-11 09:31:14.968075+00:00")
            nc308.updated_at = isoparse("2019-10-11 09:31:14.968075+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c422, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Joëlle",
            last_name="Saunier",
            email="joelle.saunier@chbv69.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Joëlle",
                'last_name':"Saunier",
                'email':"joelle.saunier@chbv69.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04.74.64.57.11",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c422.referents.add(alte_user)
        moo387 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c422,
            organization = o279,
            use_address_from_organization = True,
            title_in_organization="Directrice",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:    
            nc309 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c422,
                note = """Faire rapport""",
                pinned = False,
                created_at = isoparse("2019-10-11 10:40:01.803573+00:00"),
                updated_at = isoparse("2019-10-11 10:40:01.803573+00:00"),
                # tags,
                # reminder
            )

            rnc309 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc309,
                linked_object_contactable=c422,
                done=True,
        
                            date=isoparse("2019-10-18"),
                        
            # persons
            )
            rnc309.persons.add(alte_user)
            nc309.created_at = isoparse("2019-10-11 10:40:01.803573+00:00")
            nc309.updated_at = isoparse("2019-10-11 10:40:01.803573+00:00")
        
        t11, created = Tag.objects.get_or_create(
            name="COT EN COURS",
            owning_group=alte_group,
            defaults={
                'name': "COT EN COURS",
                'description': "",
                'owning_group': alte_group,
            }
        )
        moo387.tags.add(t11)

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c418, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Gaëlle",
            last_name="Charmette",
            email="",
            defaults={
                'owning_group':alte_group,
                'first_name':"Gaëlle",
                'last_name':"Charmette",
                'email':"",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 89 50 65",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c418.referents.add(alte_user)
        moo384 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c418,
            organization = o279,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c418.tags.add(t11)
                        
        if contact_created:    
            nc303 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c418,
                note = """Préparer visite Madame Charmette - Maison de retraite COR""",
                pinned = False,
                created_at = isoparse("2019-09-24 10:31:35.579808+00:00"),
                updated_at = isoparse("2019-09-24 10:31:35.579808+00:00"),
                # tags,
                # reminder
            )

            rnc303 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc303,
                linked_object_contactable=c418,
                done=True,
        
                            date=isoparse("2019-10-02"),
                        
            # persons
            )
            rnc303.persons.add(alte_user)
            nc303.created_at = isoparse("2019-09-24 10:31:35.579808+00:00")
            nc303.updated_at = isoparse("2019-09-24 10:31:35.579808+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c402, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Stéphane",
            last_name="Martin",
            email="stephane.martin@valleedazergues.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Stéphane",
                'last_name':"Martin",
                'email':"stephane.martin@valleedazergues.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 72 77 98 68",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c402.referents.add(alte_user)
        moo369 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c402,
            organization = o262,
            use_address_from_organization = True,
            title_in_organization="Directeur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c402.tags.add(t38)
                        
        if contact_created:    
            nc285 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c402,
                note = """A t il renvoyé les infos pour le PV ?""",
                pinned = False,
                created_at = isoparse("2019-08-30 08:34:08.973753+00:00"),
                updated_at = isoparse("2019-08-30 08:34:08.973753+00:00"),
                # tags,
                # reminder
            )

            rnc285 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc285,
                linked_object_contactable=c402,
                done=True,
        
                            date=isoparse("2019-09-09"),
                        
            # persons
            )
            rnc285.persons.add(alte_user)
            nc285.created_at = isoparse("2019-08-30 08:34:08.973753+00:00")
            nc285.updated_at = isoparse("2019-08-30 08:34:08.973753+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c393, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Béatrice",
            last_name="Savary",
            email="b.savary@saintlaurentdemure.org",
            defaults={
                'owning_group':alte_group,
                'first_name':"Béatrice",
                'last_name':"Savary",
                'email':"b.savary@saintlaurentdemure.org",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 72 48 61 24",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c393.referents.add(alte_user)
        moo361 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c393,
            organization = o254,
            use_address_from_organization = True,
            title_in_organization="Responsable finance / Marchés Publics / Assurances",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:    
            nc316 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c393,
                note = """relancer pour prendre des nouvelles des prochains projets""",
                pinned = False,
                created_at = isoparse("2019-10-25 12:15:13.370184+00:00"),
                updated_at = isoparse("2019-10-25 12:15:13.370184+00:00"),
                # tags,
                # reminder
            )

            rnc316 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc316,
                linked_object_contactable=c393,
                done=True,
        
                            date=isoparse("2019-12-16"),
                        
            # persons
            )
            rnc316.persons.add(alte_user)
            nc316.created_at = isoparse("2019-10-25 12:15:13.370184+00:00")
            nc316.updated_at = isoparse("2019-10-25 12:15:13.370184+00:00")
        
        if contact_created:    
            nc307 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c393,
                note = """Répondre à son mail.""",
                pinned = False,
                created_at = isoparse("2019-10-08 10:08:19.709148+00:00"),
                updated_at = isoparse("2019-10-08 10:08:19.709148+00:00"),
                # tags,
                # reminder
            )

            rnc307 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc307,
                linked_object_contactable=c393,
                done=True,
        
                            date=isoparse("2019-10-11"),
                        
            # persons
            )
            rnc307.persons.add(alte_user)
            nc307.created_at = isoparse("2019-10-08 10:08:19.709148+00:00")
            nc307.updated_at = isoparse("2019-10-08 10:08:19.709148+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c385, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Gilles",
            last_name="Chauvin",
            email="rst@mairie-colombiersaugnieu.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Gilles",
                'last_name':"Chauvin",
                'email':"rst@mairie-colombiersaugnieu.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"07 89 86 38 96",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c385.referents.add(alte_user)
        moo358 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c385,
            organization = o242,
            use_address_from_organization = True,
            title_in_organization="DST",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c385.tags.add(t38)
                        
        if contact_created:    
            nc347 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c385,
                note = """Relance concernant les projets bâtiments et PV""",
                pinned = False,
                created_at = isoparse("2020-03-09 16:52:05.215135+00:00"),
                updated_at = isoparse("2020-03-09 16:52:05.215135+00:00"),
                # tags,
                # reminder
            )

            rnc347 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc347,
                linked_object_contactable=c385,
                done=True,
        
                            date=isoparse("2020-09-14"),
                        
            # persons
            )
            rnc347.persons.add(alte_user)
            nc347.created_at = isoparse("2020-03-09 16:52:05.215135+00:00")
            nc347.updated_at = isoparse("2020-03-09 16:52:05.215135+00:00")
        
        if contact_created:    
            nc327 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c385,
                note = """Des retours de sa part ?""",
                pinned = False,
                created_at = isoparse("2019-11-20 14:06:42.067418+00:00"),
                updated_at = isoparse("2019-11-20 14:06:42.067418+00:00"),
                # tags,
                # reminder
            )

            rnc327 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc327,
                linked_object_contactable=c385,
                done=True,
        
                            date=isoparse("2020-01-07"),
                        
            # persons
            )
            rnc327.persons.add(alte_user)
            nc327.created_at = isoparse("2019-11-20 14:06:42.067418+00:00")
            nc327.updated_at = isoparse("2019-11-20 14:06:42.067418+00:00")
        
        if contact_created:    
            nc263 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c385,
                note = """Préparer la trame pour les rapports.""",
                pinned = False,
                created_at = isoparse("2019-08-02 13:05:46.236425+00:00"),
                updated_at = isoparse("2019-08-02 13:05:46.236425+00:00"),
                # tags,
                # reminder
            )

            rnc263 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc263,
                linked_object_contactable=c385,
                done=True,
        
                            date=isoparse("2019-08-30"),
                        
            # persons
            )
            rnc263.persons.add(alte_user)
            nc263.created_at = isoparse("2019-08-02 13:05:46.236425+00:00")
            nc263.updated_at = isoparse("2019-08-02 13:05:46.236425+00:00")
        
        if contact_created:    
            nc262 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c385,
                note = """Contacter pour avoir les factures énergétiques des bâtiments.""",
                pinned = False,
                created_at = isoparse("2019-08-02 12:44:30.970381+00:00"),
                updated_at = isoparse("2019-08-02 12:44:30.970381+00:00"),
                # tags,
                # reminder
            )

            rnc262 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc262,
                linked_object_contactable=c385,
                done=True,
        
                            date=isoparse("2019-09-16"),
                        
            # persons
            )
            rnc262.persons.add(alte_user)
            nc262.created_at = isoparse("2019-08-02 12:44:30.970381+00:00")
            nc262.updated_at = isoparse("2019-08-02 12:44:30.970381+00:00")
        
        if contact_created:    
            nc244 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c385,
                note = """Relance s'il n'a pas envoyé les documents pour études.""",
                pinned = False,
                created_at = isoparse("2019-07-23 09:39:03.485549+00:00"),
                updated_at = isoparse("2019-07-23 09:39:03.485549+00:00"),
                # tags,
                # reminder
            )

            rnc244 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc244,
                linked_object_contactable=c385,
                done=True,
        
                            date=isoparse("2019-07-29"),
                        
            # persons
            )
            rnc244.persons.add(alte_user)
            nc244.created_at = isoparse("2019-07-23 09:39:03.485549+00:00")
            nc244.updated_at = isoparse("2019-07-23 09:39:03.485549+00:00")
        
        address = "  ".strip() + ", 38640 Villemoirieu"
        if address == "  ,  ":
            address = ""
        c383, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Lionel",
            last_name="Pauletto",
            email="lionel.pauletto@sbthermique.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Lionel",
                'last_name':"Pauletto",
                'email':"lionel.pauletto@sbthermique.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Villemoirieu",
                'zipcode':"38640",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"",
                'mobile_phone':"06 14 41 92 69",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c383.referents.add(alte_user)
        moo357 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c383,
            organization = o249,
            use_address_from_organization = True,
            title_in_organization="Directeur Thecnique",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c383.tags.add(t9)
                        
        if contact_created:    
            nc250 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c383,
                note = """Rappeler si pas de nouvelles.""",
                pinned = False,
                created_at = isoparse("2019-07-23 12:12:36.061247+00:00"),
                updated_at = isoparse("2019-07-23 12:12:36.061247+00:00"),
                # tags,
                # reminder
            )

            rnc250 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc250,
                linked_object_contactable=c383,
                done=True,
        
                            date=isoparse("2019-08-05"),
                        
            # persons
            )
            rnc250.persons.add(alte_user)
            nc250.created_at = isoparse("2019-07-23 12:12:36.061247+00:00")
            nc250.updated_at = isoparse("2019-07-23 12:12:36.061247+00:00")
        
        address = "40 rue de norvège  ".strip() + ", 69125 Colombier Saugnieu"
        if address == "  ,  ":
            address = ""
        c382, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Sophie",
            last_name="Bal",
            email="sophie.bal@ccel.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Sophie",
                'last_name':"Bal",
                'email':"sophie.bal@ccel.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"Colombier Saugnieu",
                'zipcode':"69125",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"04 72 79 79 13",
                'mobile_phone':"06 98 76 36 64",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c382.referents.add(alte_user)
        moo356 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c382,
            organization = o243,
            use_address_from_organization = True,
            title_in_organization="Responsable de l'Habitat",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c382.tags.add(t39)
                        
        if contact_created:    
            nc334 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c382,
                note = """Contacter pour contact DGS etc.""",
                pinned = False,
                created_at = isoparse("2019-12-23 09:59:23.907639+00:00"),
                updated_at = isoparse("2019-12-23 09:59:23.907639+00:00"),
                # tags,
                # reminder
            )

            rnc334 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc334,
                linked_object_contactable=c382,
                done=True,
        
                            date=isoparse("2020-01-15"),
                        
            # persons
            )
            rnc334.persons.add(alte_user)
            nc334.created_at = isoparse("2019-12-23 09:59:23.907639+00:00")
            nc334.updated_at = isoparse("2019-12-23 09:59:23.907639+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c381, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="",
            last_name="Brunaud",
            email="brunaud@netcourrier.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"",
                'last_name':"Brunaud",
                'email':"brunaud@netcourrier.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 59 39 46 86",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c381.referents.add(alte_user)
        moo355 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c381,
            organization = o248,
            use_address_from_organization = True,
            title_in_organization="Membre du CA-Bureau",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c381.tags.add(t11)
                        
        if contact_created:    
            nc256 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c381,
                note = """Relancer si pas de nouvelles""",
                pinned = False,
                created_at = isoparse("2019-08-02 09:14:32.310732+00:00"),
                updated_at = isoparse("2019-08-02 09:14:32.310732+00:00"),
                # tags,
                # reminder
            )

            rnc256 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc256,
                linked_object_contactable=c381,
                done=True,
        
                            date=isoparse("2019-10-01"),
                        
            # persons
            )
            rnc256.persons.add(alte_user)
            nc256.created_at = isoparse("2019-08-02 09:14:32.310732+00:00")
            nc256.updated_at = isoparse("2019-08-02 09:14:32.310732+00:00")
        
        if contact_created:    
            nc242 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c381,
                note = """Faire rapport comparatif gaz-bois.

Se référer aux factures.""",
                pinned = False,
                created_at = isoparse("2019-06-13 14:17:47.896467+00:00"),
                updated_at = isoparse("2019-06-13 14:17:47.896467+00:00"),
                # tags,
                # reminder
            )

            rnc242 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc242,
                linked_object_contactable=c381,
                done=True,
        
                            date=isoparse("2019-07-15"),
                        
            # persons
            )
            rnc242.persons.add(alte_user)
            nc242.created_at = isoparse("2019-06-13 14:17:47.896467+00:00")
            nc242.updated_at = isoparse("2019-06-13 14:17:47.896467+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c380, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Xavier",
            last_name="Lequarré",
            email="xavier@hridaya-yoga.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Xavier",
                'last_name':"Lequarré",
                'email':"xavier@hridaya-yoga.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"00 41 76 386 0 99",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c380.referents.add(alte_user)
        moo354 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c380,
            organization = o105,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c380.tags.add(t11)
                        
        if contact_created:    
            nc240 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c380,
                note = """Alors des nouvelles concernant les devis ?Bureau de controle ? etc.""",
                pinned = False,
                created_at = isoparse("2019-06-13 13:48:13.542532+00:00"),
                updated_at = isoparse("2019-06-13 13:48:13.542532+00:00"),
                # tags,
                # reminder
            )

            rnc240 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc240,
                linked_object_contactable=c380,
                done=True,
        
                            date=isoparse("2019-07-09"),
                        
            # persons
            )
            rnc240.persons.add(alte_user)
            nc240.created_at = isoparse("2019-06-13 13:48:13.542532+00:00")
            nc240.updated_at = isoparse("2019-06-13 13:48:13.542532+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c379, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Clément",
            last_name="Daval",
            email="clement.daval@ingenef.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Clément",
                'last_name':"Daval",
                'email':"clement.daval@ingenef.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"07 85 09 54 73",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c379.referents.add(alte_user)
        moo353 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c379,
            organization = o247,
            use_address_from_organization = True,
            title_in_organization="co-gérant",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c379.tags.add(t11)
                        
        if contact_created:    
            nc252 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c379,
                note = """L'étude de devrait plus trop tarder =)""",
                pinned = False,
                created_at = isoparse("2019-07-23 15:33:13.907147+00:00"),
                updated_at = isoparse("2019-07-23 15:33:13.907147+00:00"),
                # tags,
                # reminder
            )

            rnc252 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc252,
                linked_object_contactable=c379,
                done=True,
        
                            date=isoparse("2019-08-19"),
                        
            # persons
            )
            rnc252.persons.add(alte_user)
            nc252.created_at = isoparse("2019-07-23 15:33:13.907147+00:00")
            nc252.updated_at = isoparse("2019-07-23 15:33:13.907147+00:00")
        
        if contact_created:    
            nc236 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c379,
                note = """Où en est l'étude ?""",
                pinned = False,
                created_at = isoparse("2019-06-03 14:48:17.182426+00:00"),
                updated_at = isoparse("2019-06-03 14:48:17.182426+00:00"),
                # tags,
                # reminder
            )

            rnc236 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc236,
                linked_object_contactable=c379,
                done=True,
        
                            date=isoparse("2019-07-10"),
                        
            # persons
            )
            rnc236.persons.add(alte_user)
            nc236.created_at = isoparse("2019-06-03 14:48:17.182426+00:00")
            nc236.updated_at = isoparse("2019-06-03 14:48:17.182426+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c376, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Vicky",
            last_name="Valencin",
            email="valencin.secat@orange.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Vicky",
                'last_name':"Valencin",
                'email':"valencin.secat@orange.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 26 80 10",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c376.referents.add(alte_user)
        moo350 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c376,
            organization = o244,
            use_address_from_organization = True,
            title_in_organization="Gérante",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c376.tags.add(t11)
                        
        if contact_created:    
            nc326 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c376,
                note = """Etude finie ?""",
                pinned = False,
                created_at = isoparse("2019-11-20 14:05:03.183728+00:00"),
                updated_at = isoparse("2019-11-20 14:05:03.183728+00:00"),
                # tags,
                # reminder
            )

            rnc326 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc326,
                linked_object_contactable=c376,
                done=True,
        
                            date=isoparse("2019-11-25"),
                        
            # persons
            )
            rnc326.persons.add(alte_user)
            nc326.created_at = isoparse("2019-11-20 14:05:03.183728+00:00")
            nc326.updated_at = isoparse("2019-11-20 14:05:03.183728+00:00")
        
        if contact_created:    
            nc325 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c376,
                note = """relancer pour demande BET""",
                pinned = False,
                created_at = isoparse("2019-11-12 11:32:07.983841+00:00"),
                updated_at = isoparse("2019-11-12 11:32:07.983841+00:00"),
                # tags,
                # reminder
            )

            rnc325 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc325,
                linked_object_contactable=c376,
                done=True,
        
                            date=isoparse("2019-11-13"),
                        
            # persons
            )
            rnc325.persons.add(alte_user)
            nc325.created_at = isoparse("2019-11-12 11:32:07.983841+00:00")
            nc325.updated_at = isoparse("2019-11-12 11:32:07.983841+00:00")
        
        if contact_created:    
            nc310 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c376,
                note = """Retour rdv BET?""",
                pinned = False,
                created_at = isoparse("2019-10-11 10:43:14.126858+00:00"),
                updated_at = isoparse("2019-10-11 10:43:14.126858+00:00"),
                # tags,
                # reminder
            )

            rnc310 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc310,
                linked_object_contactable=c376,
                done=True,
        
                            date=isoparse("2019-10-22"),
                        
            # persons
            )
            rnc310.persons.add(alte_user)
            nc310.created_at = isoparse("2019-10-11 10:43:14.126858+00:00")
            nc310.updated_at = isoparse("2019-10-11 10:43:14.126858+00:00")
        
        if contact_created:    
            nc260 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c376,
                note = """attendre retour de claire pour valider un devis reçu.



Devis envoyé à : apesbat, héliasol, senova, sf2e,helair""",
                pinned = False,
                created_at = isoparse("2019-08-02 09:19:44.026969+00:00"),
                updated_at = isoparse("2019-08-02 09:19:44.026969+00:00"),
                # tags,
                # reminder
            )

            rnc260 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc260,
                linked_object_contactable=c376,
                done=True,
        
                            date=isoparse("2019-09-03"),
                        
            # persons
            )
            rnc260.persons.add(alte_user)
            nc260.created_at = isoparse("2019-08-02 09:19:44.026969+00:00")
            nc260.updated_at = isoparse("2019-08-02 09:19:44.026969+00:00")
        
        if contact_created:    
            nc253 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c376,
                note = """Des nouvelles et feu vert pour réaliser des devis aurpès des BE ?""",
                pinned = False,
                created_at = isoparse("2019-07-23 15:47:10.742776+00:00"),
                updated_at = isoparse("2019-07-23 15:47:10.742776+00:00"),
                # tags,
                # reminder
            )

            rnc253 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc253,
                linked_object_contactable=c376,
                done=True,
        
                            date=isoparse("2019-07-25"),
                        
            # persons
            )
            rnc253.persons.add(alte_user)
            nc253.created_at = isoparse("2019-07-23 15:47:10.742776+00:00")
            nc253.updated_at = isoparse("2019-07-23 15:47:10.742776+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c375, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Laurent",
            last_name="Dumouchel",
            email="laurent.dumouchel@ccel.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Laurent",
                'last_name':"Dumouchel",
                'email':"laurent.dumouchel@ccel.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 72 79 79 11",
                'mobile_phone':"06 98 25 33 96",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c375.referents.add(alte_user)
        moo349 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c375,
            organization = o243,
            use_address_from_organization = True,
            title_in_organization="Chargé de mission Dev éco, Mob, DD",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c375.tags.add(t39)
                        
        if contact_created:    
            nc353 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c375,
                note = """parler des AO PV et du recensement !""",
                pinned = False,
                created_at = isoparse("2020-04-14 13:28:51.114189+00:00"),
                updated_at = isoparse("2020-04-14 13:28:51.114189+00:00"),
                # tags,
                # reminder
            )

            rnc353 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc353,
                linked_object_contactable=c375,
                done=True,
        
                            date=isoparse("2020-06-01"),
                        
            # persons
            )
            rnc353.persons.add(alte_user)
            nc353.created_at = isoparse("2020-04-14 13:28:51.114189+00:00")
            nc353.updated_at = isoparse("2020-04-14 13:28:51.114189+00:00")
        
        if contact_created:    
            nc336 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c375,
                note = """Lui faire part du fait que l'on a une dizaine de jours supplémentaires. 



Lui faire un retour des réunions colombier et saint laurent.""",
                pinned = False,
                created_at = isoparse("2019-12-23 10:18:32.783759+00:00"),
                updated_at = isoparse("2019-12-23 10:18:32.783759+00:00"),
                # tags,
                # reminder
            )

            rnc336 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc336,
                linked_object_contactable=c375,
                done=True,
        
                            date=isoparse("2020-01-20"),
                        
            # persons
            )
            rnc336.persons.add(alte_user)
            nc336.created_at = isoparse("2019-12-23 10:18:32.783759+00:00")
            nc336.updated_at = isoparse("2019-12-23 10:18:32.783759+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c374, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Pierre",
            last_name="Marmonier",
            email="pierre-marmonier@mairie-colombiersaugnieu.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Pierre",
                'last_name':"Marmonier",
                'email':"pierre-marmonier@mairie-colombiersaugnieu.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 78 32 80 55",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c374.referents.add(alte_user)
        moo348 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c374,
            organization = o242,
            use_address_from_organization = True,
            title_in_organization="Maire",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c374.tags.add(t38)
                        
        if contact_created:    
            nc266 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c374,
                note = """Relancer si pas de nouvelles pour la lettre""",
                pinned = False,
                created_at = isoparse("2019-08-13 12:51:40.679269+00:00"),
                updated_at = isoparse("2019-08-13 12:51:40.679269+00:00"),
                # tags,
                # reminder
            )

            rnc266 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc266,
                linked_object_contactable=c374,
                done=True,
        
                            date=isoparse("2019-08-20"),
                        
            # persons
            )
            rnc266.persons.add(alte_user)
            nc266.created_at = isoparse("2019-08-13 12:51:40.679269+00:00")
            nc266.updated_at = isoparse("2019-08-13 12:51:40.679269+00:00")
        
        address = "  ".strip() + ", 69 170 Tarare"
        if address == "  ,  ":
            address = ""
        c373, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Guillaume",
            last_name="Corbin",
            email="g.corbin@solemat.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Guillaume",
                'last_name':"Corbin",
                'email':"g.corbin@solemat.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Tarare",
                'zipcode':"69 170",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 78 28 85 71",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c373.referents.add(alte_user)
        moo347 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c373,
            organization = o241,
            use_address_from_organization = True,
            title_in_organization="Gérant",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c373.tags.add(t11)
                        
        if contact_created:    
            nc233 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c373,
                note = """Prendre des nouvelles de son projet de construction (bâtiment 1000 m2 aux olmes). 

Fabrication de machines agricoles (pas de de besoin d'ECS)

Bureau 150 m2 environ



envisage une construction assez écolo (DF) il est sensibilisé.""",
                pinned = False,
                created_at = isoparse("2019-05-29 14:24:23.062136+00:00"),
                updated_at = isoparse("2019-05-29 14:24:23.062136+00:00"),
                # tags,
                # reminder
            )

            rnc233 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc233,
                linked_object_contactable=c373,
                done=True,
        
                            date=isoparse("2019-09-17"),
                        
            # persons
            )
            rnc233.persons.add(alte_user)
            nc233.created_at = isoparse("2019-05-29 14:24:23.062136+00:00")
            nc233.updated_at = isoparse("2019-05-29 14:24:23.062136+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c334, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Thibault",
            last_name="Laurent",
            email="t.laurent@alliade.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Thibault",
                'last_name':"Laurent",
                'email':"t.laurent@alliade.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 98 43 48 94",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c334.referents.add(alte_user)
        moo310 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c334,
            organization = o228,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c334.tags.add(t11)
                        
        if contact_created:    
            nc333 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c334,
                note = """Nouvelles travaux""",
                pinned = False,
                created_at = isoparse("2019-12-23 08:59:01.746760+00:00"),
                updated_at = isoparse("2019-12-23 08:59:01.746760+00:00"),
                # tags,
                # reminder
            )

            rnc333 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc333,
                linked_object_contactable=c334,
                done=True,
        
                            date=isoparse("2020-05-18"),
                        
            # persons
            )
            rnc333.persons.add(alte_user)
            nc333.created_at = isoparse("2019-12-23 08:59:01.746760+00:00")
            nc333.updated_at = isoparse("2019-12-23 08:59:01.746760+00:00")
        
        if contact_created:    
            nc234 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c334,
                note = """Dossier de subvention arrivé au sein de ma boite?""",
                pinned = False,
                created_at = isoparse("2019-05-29 15:12:34.473877+00:00"),
                updated_at = isoparse("2019-05-29 15:12:34.473877+00:00"),
                # tags,
                # reminder
            )

            rnc234 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc234,
                linked_object_contactable=c334,
                done=True,
        
                            date=isoparse("2019-09-06"),
                        
            # persons
            )
            rnc234.persons.add(alte_user)
            nc234.created_at = isoparse("2019-05-29 15:12:34.473877+00:00")
            nc234.updated_at = isoparse("2019-05-29 15:12:34.473877+00:00")
        
        if contact_created:    
            nc232 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c334,
                note = """Relancer si pas de nouvelles""",
                pinned = False,
                created_at = isoparse("2019-05-23 12:29:11.627418+00:00"),
                updated_at = isoparse("2019-05-23 12:29:11.627418+00:00"),
                # tags,
                # reminder
            )

            rnc232 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc232,
                linked_object_contactable=c334,
                done=True,
        
                            date=isoparse("2019-07-10"),
                        
            # persons
            )
            rnc232.persons.add(alte_user)
            nc232.created_at = isoparse("2019-05-23 12:29:11.627418+00:00")
            nc232.updated_at = isoparse("2019-05-23 12:29:11.627418+00:00")
        
        if contact_created:    
            nc220 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c334,
                note = """A t il envoyé les dossiers divers et variés ?""",
                pinned = False,
                created_at = isoparse("2019-04-24 08:26:57.184435+00:00"),
                updated_at = isoparse("2019-04-24 08:26:57.184435+00:00"),
                # tags,
                # reminder
            )

            rnc220 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc220,
                linked_object_contactable=c334,
                done=True,
        
                            date=isoparse("2019-05-22"),
                        
            # persons
            )
            rnc220.persons.add(alte_user)
            nc220.created_at = isoparse("2019-04-24 08:26:57.184435+00:00")
            nc220.updated_at = isoparse("2019-04-24 08:26:57.184435+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c333, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Adrien",
            last_name="Boulez",
            email="a.boulez@alliade.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Adrien",
                'last_name':"Boulez",
                'email':"a.boulez@alliade.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 62 90 22 85",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c333.referents.add(alte_user)
        moo309 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c333,
            organization = o228,
            use_address_from_organization = True,
            title_in_organization="Responsable du développement",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c333.tags.add(t11)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c332, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Céline",
            last_name="Pizzimenti",
            email="c.pizzimenti@lyon-metropole.cci.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Céline",
                'last_name':"Pizzimenti",
                'email':"c.pizzimenti@lyon-metropole.cci.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 77 44 54 89",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c332.referents.add(alte_user)
        moo308 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c332,
            organization = o227,
            use_address_from_organization = True,
            title_in_organization="Environnement, Sécurité, DD",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c332.tags.add(t11)
                        
        if contact_created:    
            nc217 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c332,
                note = """Projet ST ?""",
                pinned = False,
                created_at = isoparse("2019-04-11 08:20:58.926461+00:00"),
                updated_at = isoparse("2019-04-11 08:20:58.926461+00:00"),
                # tags,
                # reminder
            )

            rnc217 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc217,
                linked_object_contactable=c332,
                done=True,
        
                            date=isoparse("2019-05-13"),
                        
            # persons
            )
            rnc217.persons.add(alte_user)
            nc217.created_at = isoparse("2019-04-11 08:20:58.926461+00:00")
            nc217.updated_at = isoparse("2019-04-11 08:20:58.926461+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c325, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Philippe",
            last_name="Bonnet",
            email="",
            defaults={
                'owning_group':alte_group,
                'first_name':"Philippe",
                'last_name':"Bonnet",
                'email':"",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 75 09 23 79",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c325.referents.add(alte_user)
        moo302 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c325,
            organization = o223,
            use_address_from_organization = True,
            title_in_organization="Maire",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c325.tags.add(t11)
                        
        if contact_created:    
            nc205 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c325,
                note = """Relancer pour avoir des infos sur son projet !!""",
                pinned = False,
                created_at = isoparse("2019-03-25 10:33:47.646537+00:00"),
                updated_at = isoparse("2019-03-25 10:33:47.646537+00:00"),
                # tags,
                # reminder
            )

            rnc205 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc205,
                linked_object_contactable=c325,
                done=True,
        
                            date=isoparse("2019-04-03"),
                        
            # persons
            )
            rnc205.persons.add(alte_user)
            nc205.created_at = isoparse("2019-03-25 10:33:47.646537+00:00")
            nc205.updated_at = isoparse("2019-03-25 10:33:47.646537+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c319, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Christian",
            last_name="Lalbertier",
            email="christian.lalbertier@wanadoo.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Christian",
                'last_name':"Lalbertier",
                'email':"christian.lalbertier@wanadoo.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"06 84 29 41 89",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c319.referents.add(alte_user)
        moo296 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c319,
            organization = o186,
            use_address_from_organization = True,
            title_in_organization="Vice président",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c319.tags.add(t11)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c318, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Fabrice",
            last_name="Verdejo",
            email="fabrice.verdejo@rhone.chambagri.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Fabrice",
                'last_name':"Verdejo",
                'email':"fabrice.verdejo@rhone.chambagri.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"0608022820",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c318.referents.add(alte_user)
        moo295 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c318,
            organization = o124,
            use_address_from_organization = True,
            title_in_organization="Chargé territoire Beaujolais",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c318.tags.add(t11)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c317, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Philippe",
            last_name="Seuzaret",
            email="tech3@betics.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Philippe",
                'last_name':"Seuzaret",
                'email':"tech3@betics.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 13 55 03 54",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c317.referents.add(alte_user)
        moo294 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c317,
            organization = o104,
            use_address_from_organization = True,
            title_in_organization="BET",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c317.tags.add(t11)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c303, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Laure",
            last_name="Ballet",
            email="laure.ballet@bmf-conseil.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Laure",
                'last_name':"Ballet",
                'email':"laure.ballet@bmf-conseil.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 76 93 46 51",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c303.referents.add(alte_user)
        moo281 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c303,
            organization = o208,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c303.tags.add(t11)
                        
        if contact_created:    
            nc357 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c303,
                note = """Nouvelles concernant le projet - DCE ?""",
                pinned = False,
                created_at = isoparse("2020-08-19 10:29:59.346988+00:00"),
                updated_at = isoparse("2020-08-19 10:29:59.346988+00:00"),
                # tags,
                # reminder
            )

            rnc357 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc357,
                linked_object_contactable=c303,
                done=False,
        
                            date=isoparse("2020-11-30"),
                        
            # persons
            )
            rnc357.persons.add(alte_user)
            nc357.created_at = isoparse("2020-08-19 10:29:59.346988+00:00")
            nc357.updated_at = isoparse("2020-08-19 10:29:59.346988+00:00")
        
        if contact_created:    
            nc246 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c303,
                note = """Est ce que cette fois on a toutes les infos ? Mettre un peu la pression si pas de nouvelles... Normalement il devrait y avoir du nouveau.""",
                pinned = False,
                created_at = isoparse("2019-07-23 09:48:50.789299+00:00"),
                updated_at = isoparse("2019-07-23 09:48:50.789299+00:00"),
                # tags,
                # reminder
            )

            rnc246 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc246,
                linked_object_contactable=c303,
                done=True,
        
                            date=isoparse("2019-09-09"),
                        
            # persons
            )
            rnc246.persons.add(alte_user)
            nc246.created_at = isoparse("2019-07-23 09:48:50.789299+00:00")
            nc246.updated_at = isoparse("2019-07-23 09:48:50.789299+00:00")
        
        if contact_created:    
            nc243 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c303,
                note = """nouvelles maitrise d'oeuvre ?""",
                pinned = False,
                created_at = isoparse("2019-07-10 08:38:42.106560+00:00"),
                updated_at = isoparse("2019-07-10 08:38:42.106560+00:00"),
                # tags,
                # reminder
            )

            rnc243 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc243,
                linked_object_contactable=c303,
                done=True,
        
                            date=isoparse("2019-08-05"),
                        
            # persons
            )
            rnc243.persons.add(alte_user)
            nc243.created_at = isoparse("2019-07-10 08:38:42.106560+00:00")
            nc243.updated_at = isoparse("2019-07-10 08:38:42.106560+00:00")
        
        if contact_created:    
            nc238 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c303,
                note = """Nouvelles projet couvant ? Sinon passer un coup de fil...""",
                pinned = False,
                created_at = isoparse("2019-06-03 14:51:41.159928+00:00"),
                updated_at = isoparse("2019-06-03 14:51:41.159928+00:00"),
                # tags,
                # reminder
            )

            rnc238 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc238,
                linked_object_contactable=c303,
                done=True,
        
                            date=isoparse("2019-07-10"),
                        
            # persons
            )
            rnc238.persons.add(alte_user)
            nc238.created_at = isoparse("2019-06-03 14:51:41.159928+00:00")
            nc238.updated_at = isoparse("2019-06-03 14:51:41.159928+00:00")
        
        if contact_created:    
            nc221 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c303,
                note = """Relance si pas de nouvelles""",
                pinned = False,
                created_at = isoparse("2019-04-24 08:32:52.255566+00:00"),
                updated_at = isoparse("2019-04-24 08:32:52.255566+00:00"),
                # tags,
                # reminder
            )

            rnc221 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc221,
                linked_object_contactable=c303,
                done=True,
        
                            date=isoparse("2019-05-09"),
                        
            # persons
            )
            rnc221.persons.add(alte_user)
            nc221.created_at = isoparse("2019-04-24 08:32:52.255566+00:00")
            nc221.updated_at = isoparse("2019-04-24 08:32:52.255566+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c302, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Hervé",
            last_name="Jospeh",
            email="herve.jospeh@mfr.asso.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Hervé",
                'last_name':"Jospeh",
                'email':"herve.jospeh@mfr.asso.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 07 99 26 85",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c302.referents.add(alte_user)
        moo280 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c302,
            organization = o207,
            use_address_from_organization = True,
            title_in_organization="Directeur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c302.tags.add(t9)
                        
        if contact_created:    
            nc218 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c302,
                note = """Avancement projet ?""",
                pinned = False,
                created_at = isoparse("2019-04-11 08:22:32.796636+00:00"),
                updated_at = isoparse("2019-04-11 08:22:32.796636+00:00"),
                # tags,
                # reminder
            )

            rnc218 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc218,
                linked_object_contactable=c302,
                done=True,
        
                            date=isoparse("2019-07-15"),
                        
            # persons
            )
            rnc218.persons.add(alte_user)
            nc218.created_at = isoparse("2019-04-11 08:22:32.796636+00:00")
            nc218.updated_at = isoparse("2019-04-11 08:22:32.796636+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c298, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Emilien",
            last_name="Labrosse",
            email="emilien.labrosse@c-or.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Emilien",
                'last_name':"Labrosse",
                'email':"emilien.labrosse@c-or.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04  74 05 50 96",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c298.referents.add(alte_user)
        moo276 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c298,
            organization = o103,
            use_address_from_organization = True,
            title_in_organization="Chargé patrimoine et bâtiment",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c298.tags.add(t9)
                        
        if contact_created:    
            nc330 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c298,
                note = """prendre des nouvelles pour les projets. 



Montage des dossiers subventions région.""",
                pinned = False,
                created_at = isoparse("2019-12-23 08:51:08.872687+00:00"),
                updated_at = isoparse("2019-12-23 08:51:08.872687+00:00"),
                # tags,
                # reminder
            )

            rnc330 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc330,
                linked_object_contactable=c298,
                done=True,
        
                            date=isoparse("2020-01-09"),
                        
            # persons
            )
            rnc330.persons.add(alte_user)
            nc330.created_at = isoparse("2019-12-23 08:51:08.872687+00:00")
            nc330.updated_at = isoparse("2019-12-23 08:51:08.872687+00:00")
        
        if contact_created:    
            nc245 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c298,
                note = """On lance les dossiers sub Clavaisolles et Valsonnes ?""",
                pinned = False,
                created_at = isoparse("2019-07-23 09:47:46.044082+00:00"),
                updated_at = isoparse("2019-07-23 09:47:46.044082+00:00"),
                # tags,
                # reminder
            )

            rnc245 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc245,
                linked_object_contactable=c298,
                done=True,
        
                            date=isoparse("2019-09-02"),
                        
            # persons
            )
            rnc245.persons.add(alte_user)
            nc245.created_at = isoparse("2019-07-23 09:47:46.044082+00:00")
            nc245.updated_at = isoparse("2019-07-23 09:47:46.044082+00:00")
        
        if contact_created:    
            nc239 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c298,
                note = """Check RC.



Claveisolles et Valsonne. 



EEPOS rempli la demande région et COT ?""",
                pinned = False,
                created_at = isoparse("2019-06-13 13:45:32.915511+00:00"),
                updated_at = isoparse("2019-06-13 13:45:32.915511+00:00"),
                # tags,
                # reminder
            )

            rnc239 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc239,
                linked_object_contactable=c298,
                done=True,
        
                            date=isoparse("2019-07-11"),
                        
            # persons
            )
            rnc239.persons.add(alte_user)
            nc239.created_at = isoparse("2019-06-13 13:45:32.915511+00:00")
            nc239.updated_at = isoparse("2019-06-13 13:45:32.915511+00:00")
        
        if contact_created:    
            nc229 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c298,
                note = """Point sur l'ensemble des projets RC""",
                pinned = False,
                created_at = isoparse("2019-05-21 13:29:28.811215+00:00"),
                updated_at = isoparse("2019-05-21 13:29:28.811215+00:00"),
                # tags,
                # reminder
            )

            rnc229 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc229,
                linked_object_contactable=c298,
                done=True,
        
                            date=isoparse("2019-06-04"),
                        
            # persons
            )
            rnc229.persons.add(alte_user)
            nc229.created_at = isoparse("2019-05-21 13:29:28.811215+00:00")
            nc229.updated_at = isoparse("2019-05-21 13:29:28.811215+00:00")
        
        if contact_created:    
            nc165 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c298,
                note = """demander des nouvelles des AMI et claveisolles.""",
                pinned = False,
                created_at = isoparse("2019-01-15 11:07:24.634134+00:00"),
                updated_at = isoparse("2019-01-15 11:07:24.634134+00:00"),
                # tags,
                # reminder
            )

            rnc165 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc165,
                linked_object_contactable=c298,
                done=True,
        
                            date=isoparse("2019-02-11"),
                        
            # persons
            )
            rnc165.persons.add(alte_user)
            nc165.created_at = isoparse("2019-01-15 11:07:24.634134+00:00")
            nc165.updated_at = isoparse("2019-01-15 11:07:24.634134+00:00")
        
        address = "  ".strip() + ", 69250 Neuville sur Saone"
        if address == "  ,  ":
            address = ""
        c286, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Philippe",
            last_name="De Saint Jean",
            email="accueil@archiplus.org",
            defaults={
                'owning_group':alte_group,
                'first_name':"Philippe",
                'last_name':"De Saint Jean",
                'email':"accueil@archiplus.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Neuville sur Saone",
                'zipcode':"69250",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"",
                'mobile_phone':"06 62 90 64 45",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c286.referents.add(alte_user)
        moo266 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c286,
            organization = o104,
            use_address_from_organization = True,
            title_in_organization="Architecte",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c286.tags.add(t11)
                        
        if contact_created:    
            nc148 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c286,
                note = """Relance pour réuion janvier""",
                pinned = False,
                created_at = isoparse("2018-12-18 09:55:51.611441+00:00"),
                updated_at = isoparse("2018-12-18 09:55:51.611441+00:00"),
                # tags,
                # reminder
            )

            rnc148 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc148,
                linked_object_contactable=c286,
                done=True,
        
                            date=isoparse("2019-01-14"),
                        
            # persons
            )
            rnc148.persons.add(alte_user)
            nc148.created_at = isoparse("2018-12-18 09:55:51.611441+00:00")
            nc148.updated_at = isoparse("2018-12-18 09:55:51.611441+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c261, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Bruno",
            last_name="Bernard",
            email="",
            defaults={
                'owning_group':alte_group,
                'first_name':"Bruno",
                'last_name':"Bernard",
                'email':"",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 46 43 61 56",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c261.referents.add(alte_user)
        moo247 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c261,
            organization = o104,
            use_address_from_organization = True,
            title_in_organization="Adjoint",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c261.tags.add(t11)
                        
        if contact_created:    
            nc359 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """relace nouvelle projet...""",
                pinned = False,
                created_at = isoparse("2020-08-19 14:49:17.091410+00:00"),
                updated_at = isoparse("2020-08-19 14:49:17.091410+00:00"),
                # tags,
                # reminder
            )

            rnc359 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc359,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2020-09-21"),
                        
            # persons
            )
            rnc359.persons.add(alte_user)
            nc359.created_at = isoparse("2020-08-19 14:49:17.091410+00:00")
            nc359.updated_at = isoparse("2020-08-19 14:49:17.091410+00:00")
        
        if contact_created:    
            nc255 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Dossier ? Pas dossier... Sinon envoyé un mail à Mairie""",
                pinned = False,
                created_at = isoparse("2019-07-29 10:14:35.903855+00:00"),
                updated_at = isoparse("2019-07-29 10:14:35.903855+00:00"),
                # tags,
                # reminder
            )

            rnc255 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc255,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-08-27"),
                        
            # persons
            )
            rnc255.persons.add(alte_user)
            nc255.created_at = isoparse("2019-07-29 10:14:35.903855+00:00")
            nc255.updated_at = isoparse("2019-07-29 10:14:35.903855+00:00")
        
        if contact_created:    
            nc247 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Ont ils rempli le dossier de sub ?""",
                pinned = False,
                created_at = isoparse("2019-07-23 09:49:35.953847+00:00"),
                updated_at = isoparse("2019-07-23 09:49:35.953847+00:00"),
                # tags,
                # reminder
            )

            rnc247 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc247,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-07-29"),
                        
            # persons
            )
            rnc247.persons.add(alte_user)
            nc247.created_at = isoparse("2019-07-23 09:49:35.953847+00:00")
            nc247.updated_at = isoparse("2019-07-23 09:49:35.953847+00:00")
        
        if contact_created:    
            nc235 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Ont ils eu des nouvelles de l'architecte ?""",
                pinned = False,
                created_at = isoparse("2019-06-03 14:44:18.289849+00:00"),
                updated_at = isoparse("2019-06-03 14:44:18.289849+00:00"),
                # tags,
                # reminder
            )

            rnc235 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc235,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-07-15"),
                        
            # persons
            )
            rnc235.persons.add(alte_user)
            nc235.created_at = isoparse("2019-06-03 14:44:18.289849+00:00")
            nc235.updated_at = isoparse("2019-06-03 14:44:18.289849+00:00")
        
        if contact_created:    
            nc231 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Nouvelles ?""",
                pinned = False,
                created_at = isoparse("2019-05-21 13:32:09.057294+00:00"),
                updated_at = isoparse("2019-05-21 13:32:09.057294+00:00"),
                # tags,
                # reminder
            )

            rnc231 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc231,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-06-03"),
                        
            # persons
            )
            rnc231.persons.add(alte_user)
            nc231.created_at = isoparse("2019-05-21 13:32:09.057294+00:00")
            nc231.updated_at = isoparse("2019-05-21 13:32:09.057294+00:00")
        
        if contact_created:    
            nc225 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Bilan rdv système de chauffage.""",
                pinned = False,
                created_at = isoparse("2019-05-06 10:28:43.178925+00:00"),
                updated_at = isoparse("2019-05-06 10:28:43.178925+00:00"),
                # tags,
                # reminder
            )

            rnc225 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc225,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-05-14"),
                        
            # persons
            )
            rnc225.persons.add(alte_user)
            nc225.created_at = isoparse("2019-05-06 10:28:43.178925+00:00")
            nc225.updated_at = isoparse("2019-05-06 10:28:43.178925+00:00")
        
        if contact_created:    
            nc222 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """relance""",
                pinned = False,
                created_at = isoparse("2019-04-24 08:43:41.288985+00:00"),
                updated_at = isoparse("2019-04-24 08:43:41.288985+00:00"),
                # tags,
                # reminder
            )

            rnc222 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc222,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-04-29"),
                        
            # persons
            )
            rnc222.persons.add(alte_user)
            nc222.created_at = isoparse("2019-04-24 08:43:41.288985+00:00")
            nc222.updated_at = isoparse("2019-04-24 08:43:41.288985+00:00")
        
        if contact_created:    
            nc213 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Nouvelles de l'architecte ?""",
                pinned = False,
                created_at = isoparse("2019-04-11 08:11:22.020339+00:00"),
                updated_at = isoparse("2019-04-11 08:11:22.020339+00:00"),
                # tags,
                # reminder
            )

            rnc213 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc213,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-04-24"),
                        
            # persons
            )
            rnc213.persons.add(alte_user)
            nc213.created_at = isoparse("2019-04-11 08:11:22.020339+00:00")
            nc213.updated_at = isoparse("2019-04-11 08:11:22.020339+00:00")
        
        if contact_created:    
            nc203 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Prendre nouvelle retour BET et architecte""",
                pinned = False,
                created_at = isoparse("2019-03-25 10:12:51.348246+00:00"),
                updated_at = isoparse("2019-03-25 10:12:51.348246+00:00"),
                # tags,
                # reminder
            )

            rnc203 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc203,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-03-28"),
                        
            # persons
            )
            rnc203.persons.add(alte_user)
            nc203.created_at = isoparse("2019-03-25 10:12:51.348246+00:00")
            nc203.updated_at = isoparse("2019-03-25 10:12:51.348246+00:00")
        
        if contact_created:    
            nc193 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Relance ... si ca ne marche pas faudra appeler la mairie directement""",
                pinned = False,
                created_at = isoparse("2019-03-06 09:53:32.903963+00:00"),
                updated_at = isoparse("2019-03-06 09:53:32.903963+00:00"),
                # tags,
                # reminder
            )

            rnc193 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc193,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-03-12"),
                        
            # persons
            )
            rnc193.persons.add(alte_user)
            nc193.created_at = isoparse("2019-03-06 09:53:32.903963+00:00")
            nc193.updated_at = isoparse("2019-03-06 09:53:32.903963+00:00")
        
        if contact_created:    
            nc166 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Toujours pas de nouvelles..""",
                pinned = False,
                created_at = isoparse("2019-01-15 13:24:27.661746+00:00"),
                updated_at = isoparse("2019-01-15 13:24:27.661746+00:00"),
                # tags,
                # reminder
            )

            rnc166 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc166,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-01-22"),
                        
            # persons
            )
            rnc166.persons.add(alte_user)
            nc166.created_at = isoparse("2019-01-15 13:24:27.661746+00:00")
            nc166.updated_at = isoparse("2019-01-15 13:24:27.661746+00:00")
        
        if contact_created:    
            nc115 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Relancer si pas de nouvelles. A Appeler après 15h""",
                pinned = False,
                created_at = isoparse("2018-11-28 15:03:37.417048+00:00"),
                updated_at = isoparse("2018-11-28 15:03:37.417048+00:00"),
                # tags,
                # reminder
            )

            rnc115 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc115,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2018-12-10"),
                        
            # persons
            )
            rnc115.persons.add(alte_user)
            nc115.created_at = isoparse("2018-11-28 15:03:37.417048+00:00")
            nc115.updated_at = isoparse("2018-11-28 15:03:37.417048+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c260, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Bruno",
            last_name="Dandoy",
            email="b.dandoy@laroche.asso.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Bruno",
                'last_name':"Dandoy",
                'email':"b.dandoy@laroche.asso.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 37 77 84 71",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c260.referents.add(alte_user)
        moo246 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c260,
            organization = o186,
            use_address_from_organization = True,
            title_in_organization="Directeur Général",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c260.tags.add(t11)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c260.tags.add(t10)
                        
        if contact_created:    
            nc214 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c260,
                note = """Relance pour nouvelles couvant.""",
                pinned = False,
                created_at = isoparse("2019-04-11 08:12:17.522640+00:00"),
                updated_at = isoparse("2019-04-11 08:12:17.522640+00:00"),
                # tags,
                # reminder
            )

            rnc214 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc214,
                linked_object_contactable=c260,
                done=True,
        
                            date=isoparse("2019-04-24"),
                        
            # persons
            )
            rnc214.persons.add(alte_user)
            nc214.created_at = isoparse("2019-04-11 08:12:17.522640+00:00")
            nc214.updated_at = isoparse("2019-04-11 08:12:17.522640+00:00")
        
        if contact_created:    
            nc160 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c260,
                note = """Définir lieu réunion et heure""",
                pinned = False,
                created_at = isoparse("2019-01-11 08:59:18.515587+00:00"),
                updated_at = isoparse("2019-01-11 08:59:18.515587+00:00"),
                # tags,
                # reminder
            )

            rnc160 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc160,
                linked_object_contactable=c260,
                done=True,
        
                            date=isoparse("2019-01-28"),
                        
            # persons
            )
            rnc160.persons.add(alte_user)
            nc160.created_at = isoparse("2019-01-11 08:59:18.515587+00:00")
            nc160.updated_at = isoparse("2019-01-11 08:59:18.515587+00:00")
        
        if contact_created:    
            nc117 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c260,
                note = """Relancer pour ses projets de neuves et réhab""",
                pinned = False,
                created_at = isoparse("2018-11-28 15:05:08.130147+00:00"),
                updated_at = isoparse("2018-11-28 15:05:08.130147+00:00"),
                # tags,
                # reminder
            )

            rnc117 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc117,
                linked_object_contactable=c260,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc117.persons.add(alte_user)
            nc117.created_at = isoparse("2018-11-28 15:05:08.130147+00:00")
            nc117.updated_at = isoparse("2018-11-28 15:05:08.130147+00:00")
        
        address = "  ".strip() + ", 69490 Pontcharra Sur Turdine"
        if address == "  ,  ":
            address = ""
        c259, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Barski",
            last_name="Frédéric",
            email="barski.toitures@gmail.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Barski",
                'last_name':"Frédéric",
                'email':"barski.toitures@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Pontcharra Sur Turdine",
                'zipcode':"69490",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"04 74 05 61 28",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c259.referents.add(alte_user)
        moo245 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c259,
            organization = o185,
            use_address_from_organization = True,
            title_in_organization="Gérant",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c259.tags.add(t10)
                        
        if contact_created:    
            nc184 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c259,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF



-> Ils vont faire le projet en fonds propre""",
                pinned = False,
                created_at = isoparse("2019-03-04 15:59:02.082568+00:00"),
                updated_at = isoparse("2019-03-04 15:59:02.082568+00:00"),
                # tags,
                # reminder
            )

            rnc184 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc184,
                linked_object_contactable=c259,
                done=True,
        
                            date=isoparse("2019-03-12"),
                        
            # persons
            )
            rnc184.persons.add(alte_user)
            nc184.created_at = isoparse("2019-03-04 15:59:02.082568+00:00")
            nc184.updated_at = isoparse("2019-03-04 15:59:02.082568+00:00")
        
        if contact_created:    
            nc154 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c259,
                note = """Nouvelles EF. Que vont ils faire ?""",
                pinned = False,
                created_at = isoparse("2019-01-03 10:41:36.702481+00:00"),
                updated_at = isoparse("2019-01-03 10:41:36.702481+00:00"),
                # tags,
                # reminder
            )

            rnc154 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc154,
                linked_object_contactable=c259,
                done=True,
        
                            date=isoparse("2019-01-21"),
                        
            # persons
            )
            rnc154.persons.add(alte_user)
            nc154.created_at = isoparse("2019-01-03 10:41:36.702481+00:00")
            nc154.updated_at = isoparse("2019-01-03 10:41:36.702481+00:00")
        
        if contact_created:    
            nc114 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c259,
                note = """Prendre RDV pour PV""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:39:17.767881+00:00"),
                updated_at = isoparse("2018-11-26 17:39:17.767881+00:00"),
                # tags,
                # reminder
            )

            rnc114 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc114,
                linked_object_contactable=c259,
                done=True,
        
                            date=isoparse("2018-11-27"),
                        
            # persons
            )
            rnc114.persons.add(alte_user)
            nc114.created_at = isoparse("2018-11-26 17:39:17.767881+00:00")
            nc114.updated_at = isoparse("2018-11-26 17:39:17.767881+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c258, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Eric",
            last_name="Morfeuillet",
            email="e.morfeuillet@lepotagerdelacoccinelle.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Eric",
                'last_name':"Morfeuillet",
                'email':"e.morfeuillet@lepotagerdelacoccinelle.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 85 69 57 90",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c258.referents.add(alte_user)
        moo244 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c258,
            organization = o184,
            use_address_from_organization = True,
            title_in_organization="Agriculteur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c258.tags.add(t11)
                        
        if contact_created:    
            nc315 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """a t il payé la facture ?""",
                pinned = False,
                created_at = isoparse("2019-10-25 12:09:21.243130+00:00"),
                updated_at = isoparse("2019-10-25 12:09:21.243130+00:00"),
                # tags,
                # reminder
            )

            rnc315 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc315,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-11-19"),
                        
            # persons
            )
            rnc315.persons.add(alte_user)
            nc315.created_at = isoparse("2019-10-25 12:09:21.243130+00:00")
            nc315.updated_at = isoparse("2019-10-25 12:09:21.243130+00:00")
        
        if contact_created:    
            nc288 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """Ensemble des pièces dossiers de subvention ça en est où ? retour rdv avec WARY""",
                pinned = False,
                created_at = isoparse("2019-09-12 12:56:17.028249+00:00"),
                updated_at = isoparse("2019-09-12 12:56:17.028249+00:00"),
                # tags,
                # reminder
            )

            rnc288 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc288,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-10-01"),
                        
            # persons
            )
            rnc288.persons.add(alte_user)
            nc288.created_at = isoparse("2019-09-12 12:56:17.028249+00:00")
            nc288.updated_at = isoparse("2019-09-12 12:56:17.028249+00:00")
        
        if contact_created:    
            nc249 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """Nouvelle de sa comptable et Wary ?""",
                pinned = False,
                created_at = isoparse("2019-07-23 12:11:59.547171+00:00"),
                updated_at = isoparse("2019-07-23 12:11:59.547171+00:00"),
                # tags,
                # reminder
            )

            rnc249 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc249,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-08-26"),
                        
            # persons
            )
            rnc249.persons.add(alte_user)
            nc249.created_at = isoparse("2019-07-23 12:11:59.547171+00:00")
            nc249.updated_at = isoparse("2019-07-23 12:11:59.547171+00:00")
        
        if contact_created:    
            nc241 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """On monte le dossier COT et région ? il en est ou ce dernier d'ailleurs ?""",
                pinned = False,
                created_at = isoparse("2019-06-13 13:50:15.063368+00:00"),
                updated_at = isoparse("2019-06-13 13:50:15.063368+00:00"),
                # tags,
                # reminder
            )

            rnc241 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc241,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-07-12"),
                        
            # persons
            )
            rnc241.persons.add(alte_user)
            nc241.created_at = isoparse("2019-06-13 13:50:15.063368+00:00")
            nc241.updated_at = isoparse("2019-06-13 13:50:15.063368+00:00")
        
        if contact_created:    
            nc237 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """A t il envoyé l'étude ?""",
                pinned = False,
                created_at = isoparse("2019-06-03 14:49:14.255547+00:00"),
                updated_at = isoparse("2019-06-03 14:49:14.255547+00:00"),
                # tags,
                # reminder
            )

            rnc237 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc237,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-06-07"),
                        
            # persons
            )
            rnc237.persons.add(alte_user)
            nc237.created_at = isoparse("2019-06-03 14:49:14.255547+00:00")
            nc237.updated_at = isoparse("2019-06-03 14:49:14.255547+00:00")
        
        if contact_created:    
            nc223 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """a t il recu l'etude de HELAIR ?""",
                pinned = False,
                created_at = isoparse("2019-04-24 08:45:44.750125+00:00"),
                updated_at = isoparse("2019-04-24 08:45:44.750125+00:00"),
                # tags,
                # reminder
            )

            rnc223 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc223,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-05-27"),
                        
            # persons
            )
            rnc223.persons.add(alte_user)
            nc223.created_at = isoparse("2019-04-24 08:45:44.750125+00:00")
            nc223.updated_at = isoparse("2019-04-24 08:45:44.750125+00:00")
        
        if contact_created:    
            nc219 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """Extrait K-Bis et RIB reçus ?""",
                pinned = False,
                created_at = isoparse("2019-04-15 07:39:29.302087+00:00"),
                updated_at = isoparse("2019-04-15 07:39:29.302087+00:00"),
                # tags,
                # reminder
            )

            rnc219 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc219,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-04-19"),
                        
            # persons
            )
            rnc219.persons.add(alte_user)
            nc219.created_at = isoparse("2019-04-15 07:39:29.302087+00:00")
            nc219.updated_at = isoparse("2019-04-15 07:39:29.302087+00:00")
        
        if contact_created:    
            nc216 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """Relance pour dossier. A t il été envoyé ?""",
                pinned = False,
                created_at = isoparse("2019-04-11 08:18:11.486820+00:00"),
                updated_at = isoparse("2019-04-11 08:18:11.486820+00:00"),
                # tags,
                # reminder
            )

            rnc216 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc216,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-04-15"),
                        
            # persons
            )
            rnc216.persons.add(alte_user)
            nc216.created_at = isoparse("2019-04-11 08:18:11.486820+00:00")
            nc216.updated_at = isoparse("2019-04-11 08:18:11.486820+00:00")
        
        if contact_created:    
            nc118 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """Relancer pour savoir où en est le projet""",
                pinned = False,
                created_at = isoparse("2018-11-28 15:11:25.608919+00:00"),
                updated_at = isoparse("2018-11-28 15:11:25.608919+00:00"),
                # tags,
                # reminder
            )

            rnc118 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc118,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc118.persons.add(alte_user)
            nc118.created_at = isoparse("2018-11-28 15:11:25.608919+00:00")
            nc118.updated_at = isoparse("2018-11-28 15:11:25.608919+00:00")
        
        if contact_created:    
            nc107 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """Envoyer document""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:31:04.645795+00:00"),
                updated_at = isoparse("2018-11-26 17:31:04.645795+00:00"),
                # tags,
                # reminder
            )

            rnc107 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc107,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2018-11-27"),
                        
            # persons
            )
            rnc107.persons.add(alte_user)
            nc107.created_at = isoparse("2018-11-26 17:31:04.645795+00:00")
            nc107.updated_at = isoparse("2018-11-26 17:31:04.645795+00:00")
        
        address = "9 rue anna marty  ".strip() + ", 69007 Lyon"
        if address == "  ,  ":
            address = ""
        c257, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Marc Olivier",
            last_name="Racanière",
            email="marcel.olivier.racaniere@groupe3f.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Marc Olivier",
                'last_name':"Racanière",
                'email':"marcel.olivier.racaniere@groupe3f.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Lyon",
                'zipcode':"69007",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"04 72 80 54 96",
                'mobile_phone':"06 07 33 80 05",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c257.referents.add(alte_user)
        moo243 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c257,
            organization = o183,
            use_address_from_organization = True,
            title_in_organization="chef de projet patrimoine",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c257.tags.add(t9)
                        
        if contact_created:
            t29, created = Tag.objects.get_or_create(
                name="pv",
                owning_group=alte_group,
                defaults={
                    'name': "pv",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c257.tags.add(t29)
                        
        if contact_created:    
            nc226 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c257,
                note = """envoyer EF et vendre corasol + autre baitment""",
                pinned = False,
                created_at = isoparse("2019-05-06 10:34:52.886837+00:00"),
                updated_at = isoparse("2019-05-06 10:34:52.886837+00:00"),
                # tags,
                # reminder
            )

            rnc226 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc226,
                linked_object_contactable=c257,
                done=True,
        
                            date=isoparse("2019-05-09"),
                        
            # persons
            )
            rnc226.persons.add(alte_user)
            nc226.created_at = isoparse("2019-05-06 10:34:52.886837+00:00")
            nc226.updated_at = isoparse("2019-05-06 10:34:52.886837+00:00")
        
        if contact_created:    
            nc149 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c257,
                note = """Relance pour caler les visites""",
                pinned = False,
                created_at = isoparse("2018-12-21 08:41:08.665754+00:00"),
                updated_at = isoparse("2018-12-21 08:41:08.665754+00:00"),
                # tags,
                # reminder
            )

            rnc149 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc149,
                linked_object_contactable=c257,
                done=True,
        
                            date=isoparse("2019-01-03"),
                        
            # persons
            )
            rnc149.persons.add(alte_user)
            nc149.created_at = isoparse("2018-12-21 08:41:08.665754+00:00")
            nc149.updated_at = isoparse("2018-12-21 08:41:08.665754+00:00")
        
        if contact_created:    
            nc110 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c257,
                note = """Prendre RDV PV""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:32:34.363803+00:00"),
                updated_at = isoparse("2018-11-26 17:32:34.363803+00:00"),
                # tags,
                # reminder
            )

            rnc110 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc110,
                linked_object_contactable=c257,
                done=True,
        
                            date=isoparse("2018-11-27"),
                        
            # persons
            )
            rnc110.persons.add(alte_user)
            nc110.created_at = isoparse("2018-11-26 17:32:34.363803+00:00")
            nc110.updated_at = isoparse("2018-11-26 17:32:34.363803+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c238, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Stéphane",
            last_name="Wary",
            email="contact@tarare-enr.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Stéphane",
                'last_name':"Wary",
                'email':"contact@tarare-enr.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 71 88 12 91",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c238.referents.add(alte_user)
        moo241 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c238,
            organization = o181,
            use_address_from_organization = True,
            title_in_organization="Gérant",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c238.tags.add(t9)
                        
        if contact_created:    
            nc332 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """Avancement projet?""",
                pinned = False,
                created_at = isoparse("2019-12-23 08:53:14.750533+00:00"),
                updated_at = isoparse("2019-12-23 08:53:14.750533+00:00"),
                # tags,
                # reminder
            )

            rnc332 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc332,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2020-03-02"),
                        
            # persons
            )
            rnc332.persons.add(alte_user)
            nc332.created_at = isoparse("2019-12-23 08:53:14.750533+00:00")
            nc332.updated_at = isoparse("2019-12-23 08:53:14.750533+00:00")
        
        if contact_created:    
            nc314 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """a t il envoyé les infos manquantes ?""",
                pinned = False,
                created_at = isoparse("2019-10-25 12:08:04.067673+00:00"),
                updated_at = isoparse("2019-10-25 12:08:04.067673+00:00"),
                # tags,
                # reminder
            )

            rnc314 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc314,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2019-11-14"),
                        
            # persons
            )
            rnc314.persons.add(alte_user)
            nc314.created_at = isoparse("2019-10-25 12:08:04.067673+00:00")
            nc314.updated_at = isoparse("2019-10-25 12:08:04.067673+00:00")
        
        if contact_created:    
            nc257 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """Faire relevé solaire thermique entre autre... Préparer documents pour le rdv""",
                pinned = False,
                created_at = isoparse("2019-08-02 09:15:07.180457+00:00"),
                updated_at = isoparse("2019-08-02 09:15:07.180457+00:00"),
                # tags,
                # reminder
            )

            rnc257 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc257,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2019-10-22"),
                        
            # persons
            )
            rnc257.persons.add(alte_user)
            nc257.created_at = isoparse("2019-08-02 09:15:07.180457+00:00")
            nc257.updated_at = isoparse("2019-08-02 09:15:07.180457+00:00")
        
        if contact_created:    
            nc228 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """pose du compteur le 12/05/2019.

Faire une relève le 12/07/2019 et demander la fréquentation au cours de cette période.""",
                pinned = False,
                created_at = isoparse("2019-05-21 13:28:18.170139+00:00"),
                updated_at = isoparse("2019-05-21 13:28:18.170139+00:00"),
                # tags,
                # reminder
            )

            rnc228 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc228,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2019-07-10"),
                        
            # persons
            )
            rnc228.persons.add(alte_user)
            nc228.created_at = isoparse("2019-05-21 13:28:18.170139+00:00")
            nc228.updated_at = isoparse("2019-05-21 13:28:18.170139+00:00")
        
        if contact_created:    
            nc215 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """Relance projet perso. A t il posé le compteur ?""",
                pinned = False,
                created_at = isoparse("2019-04-11 08:17:12.852341+00:00"),
                updated_at = isoparse("2019-04-11 08:17:12.852341+00:00"),
                # tags,
                # reminder
            )

            rnc215 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc215,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2019-04-24"),
                        
            # persons
            )
            rnc215.persons.add(alte_user)
            nc215.created_at = isoparse("2019-04-11 08:17:12.852341+00:00")
            nc215.updated_at = isoparse("2019-04-11 08:17:12.852341+00:00")
        
        if contact_created:    
            nc198 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """Prévoir un rdv pour que l'on avance sur les projets en cours...""",
                pinned = False,
                created_at = isoparse("2019-03-06 10:13:47.825435+00:00"),
                updated_at = isoparse("2019-03-06 10:13:47.825435+00:00"),
                # tags,
                # reminder
            )

            rnc198 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc198,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2019-03-11"),
                        
            # persons
            )
            rnc198.persons.add(alte_user)
            nc198.created_at = isoparse("2019-03-06 10:13:47.825435+00:00")
            nc198.updated_at = isoparse("2019-03-06 10:13:47.825435+00:00")
        
        if contact_created:    
            nc169 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """Relance pour : 



- Swal 

- projet perso

- potager de la coccinelle""",
                pinned = False,
                created_at = isoparse("2019-01-15 13:32:22.673296+00:00"),
                updated_at = isoparse("2019-01-15 13:32:22.673296+00:00"),
                # tags,
                # reminder
            )

            rnc169 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc169,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2019-02-05"),
                        
            # persons
            )
            rnc169.persons.add(alte_user)
            nc169.created_at = isoparse("2019-01-15 13:32:22.673296+00:00")
            nc169.updated_at = isoparse("2019-01-15 13:32:22.673296+00:00")
        
        if contact_created:    
            nc131 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """Echange projet COT""",
                pinned = False,
                created_at = isoparse("2018-12-12 08:39:35.118045+00:00"),
                updated_at = isoparse("2018-12-12 08:39:35.118045+00:00"),
                # tags,
                # reminder
            )

            rnc131 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc131,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc131.persons.add(alte_user)
            nc131.created_at = isoparse("2018-12-12 08:39:35.118045+00:00")
            nc131.updated_at = isoparse("2018-12-12 08:39:35.118045+00:00")
        
        if contact_created:    
            nc108 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """Echanger sur ses projets et BET""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:31:39.635650+00:00"),
                updated_at = isoparse("2018-11-26 17:31:39.635650+00:00"),
                # tags,
                # reminder
            )

            rnc108 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc108,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2018-12-05"),
                        
            # persons
            )
            rnc108.persons.add(alte_user)
            nc108.created_at = isoparse("2018-11-26 17:31:39.635650+00:00")
            nc108.updated_at = isoparse("2018-11-26 17:31:39.635650+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c255, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Arnaud",
            last_name="Denis",
            email="technique@amplepuis.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Arnaud",
                'last_name':"Denis",
                'email':"technique@amplepuis.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 71 58 21 69",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c255.referents.add(alte_user)
        moo240 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c255,
            organization = o180,
            use_address_from_organization = True,
            title_in_organization="DST",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c255.tags.add(t11)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c255.tags.add(t10)
                        
        if contact_created:    
            nc121 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c255,
                note = """Relancer pour son projet de chauffage entre les deux bâtiment adjacent""",
                pinned = False,
                created_at = isoparse("2018-11-28 15:30:04.168209+00:00"),
                updated_at = isoparse("2018-11-28 15:30:04.168209+00:00"),
                # tags,
                # reminder
            )

            rnc121 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc121,
                linked_object_contactable=c255,
                done=True,
        
                            date=isoparse("2019-01-14"),
                        
            # persons
            )
            rnc121.persons.add(alte_user)
            nc121.created_at = isoparse("2018-11-28 15:30:04.168209+00:00")
            nc121.updated_at = isoparse("2018-11-28 15:30:04.168209+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c247, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Marie Pierre",
            last_name="Dumaine",
            email="mpierre.dumaine@valtex-group.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Marie Pierre",
                'last_name':"Dumaine",
                'email':"mpierre.dumaine@valtex-group.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 05 16 80",
                'mobile_phone':"06 09 42 21 11",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c247.referents.add(alte_user)
        moo232 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c247,
            organization = o173,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c247.tags.add(t10)
                        
        if contact_created:    
            nc204 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c247,
                note = """Relance montage dossier""",
                pinned = False,
                created_at = isoparse("2019-03-25 10:17:43.052574+00:00"),
                updated_at = isoparse("2019-03-25 10:17:43.052574+00:00"),
                # tags,
                # reminder
            )

            rnc204 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc204,
                linked_object_contactable=c247,
                done=True,
        
                            date=isoparse("2019-03-29"),
                        
            # persons
            )
            rnc204.persons.add(alte_user)
            nc204.created_at = isoparse("2019-03-25 10:17:43.052574+00:00")
            nc204.updated_at = isoparse("2019-03-25 10:17:43.052574+00:00")
        
        if contact_created:    
            nc192 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c247,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF et programmer rdv pour étudier propal d'INGENEFF""",
                pinned = False,
                created_at = isoparse("2019-03-04 16:02:06.698696+00:00"),
                updated_at = isoparse("2019-03-04 16:02:06.698696+00:00"),
                # tags,
                # reminder
            )

            rnc192 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc192,
                linked_object_contactable=c247,
                done=True,
        
                            date=isoparse("2019-03-13"),
                        
            # persons
            )
            rnc192.persons.add(alte_user)
            nc192.created_at = isoparse("2019-03-04 16:02:06.698696+00:00")
            nc192.updated_at = isoparse("2019-03-04 16:02:06.698696+00:00")
        
        if contact_created:    
            nc109 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c247,
                note = """Prendre RDV pour le COT et pour le PV""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:32:08.538608+00:00"),
                updated_at = isoparse("2018-11-26 17:32:08.538608+00:00"),
                # tags,
                # reminder
            )

            rnc109 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc109,
                linked_object_contactable=c247,
                done=True,
        
                            date=isoparse("2018-11-27"),
                        
            # persons
            )
            rnc109.persons.add(alte_user)
            nc109.created_at = isoparse("2018-11-26 17:32:08.538608+00:00")
            nc109.updated_at = isoparse("2018-11-26 17:32:08.538608+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c246, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Lacroix",
            last_name="Philippe",
            email="lacroix-chauffage@wanadoo.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Lacroix",
                'last_name':"Philippe",
                'email':"lacroix-chauffage@wanadoo.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 13 01 15",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c246.referents.add(alte_user)
        moo231 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c246,
            organization = o172,
            use_address_from_organization = True,
            title_in_organization="Gérant",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c246.tags.add(t10)
                        
        if contact_created:    
            nc188 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c246,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF""",
                pinned = False,
                created_at = isoparse("2019-03-04 16:00:30.590482+00:00"),
                updated_at = isoparse("2019-03-04 16:00:30.590482+00:00"),
                # tags,
                # reminder
            )

            rnc188 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc188,
                linked_object_contactable=c246,
                done=True,
        
                            date=isoparse("2019-03-12"),
                        
            # persons
            )
            rnc188.persons.add(alte_user)
            nc188.created_at = isoparse("2019-03-04 16:00:30.590482+00:00")
            nc188.updated_at = isoparse("2019-03-04 16:00:30.590482+00:00")
        
        if contact_created:    
            nc97 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c246,
                note = """Relance si pas de nouvelles""",
                pinned = False,
                created_at = isoparse("2018-11-09 11:26:35.665470+00:00"),
                updated_at = isoparse("2018-11-09 11:26:35.665470+00:00"),
                # tags,
                # reminder
            )

            rnc97 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc97,
                linked_object_contactable=c246,
                done=True,
        
                            date=isoparse("2018-11-13"),
                        
            # persons
            )
            rnc97.persons.add(alte_user)
            nc97.created_at = isoparse("2018-11-09 11:26:35.665470+00:00")
            nc97.updated_at = isoparse("2018-11-09 11:26:35.665470+00:00")
        
        address = "  ".strip() + ", 69170 Tarare"
        if address == "  ,  ":
            address = ""
        c245, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Barberet",
            last_name="Sandrine",
            email="sco2bois@orange.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Barberet",
                'last_name':"Sandrine",
                'email':"sco2bois@orange.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"Tarare",
                'zipcode':"69170",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"",
                'mobile_phone':"06 80 72 01 83",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c245.referents.add(alte_user)
        moo230 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c245,
            organization = o171,
            use_address_from_organization = True,
            title_in_organization="Architecte",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c245.tags.add(t10)
                        
        if contact_created:    
            nc191 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c245,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF



Kit foret partira lors de la permiere vague de CORASOL sans doute""",
                pinned = False,
                created_at = isoparse("2019-03-04 16:01:42.734141+00:00"),
                updated_at = isoparse("2019-03-04 16:01:42.734141+00:00"),
                # tags,
                # reminder
            )

            rnc191 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc191,
                linked_object_contactable=c245,
                done=True,
        
                            date=isoparse("2019-03-13"),
                        
            # persons
            )
            rnc191.persons.add(alte_user)
            nc191.created_at = isoparse("2019-03-04 16:01:42.734141+00:00")
            nc191.updated_at = isoparse("2019-03-04 16:01:42.734141+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c242, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Buffin",
            last_name="Pascal",
            email="pascal.buffin@helair.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Buffin",
                'last_name':"Pascal",
                'email':"pascal.buffin@helair.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 89 53 72",
                'mobile_phone':"06 01 78 92 82",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c242.referents.add(alte_user)
        moo228 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c242,
            organization = o169,
            use_address_from_organization = True,
            title_in_organization="Ingénieur Thermicien",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c242.tags.add(t11)
                        
        address = "  ".strip() + ", 69470 "
        if address == "  ,  ":
            address = ""
        c239, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Patrice",
            last_name="Corgie",
            email="patrice@corgie.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Patrice",
                'last_name':"Corgie",
                'email':"patrice@corgie.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"69470",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 64 81 77",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c239.referents.add(alte_user)
        moo225 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c239,
            organization = o167,
            use_address_from_organization = True,
            title_in_organization="Gérant",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c239.tags.add(t10)
                        
        if contact_created:    
            nc202 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c239,
                note = """Prendre rdv éventuellement""",
                pinned = False,
                created_at = isoparse("2019-03-19 10:52:49.925766+00:00"),
                updated_at = isoparse("2019-03-19 10:52:49.925766+00:00"),
                # tags,
                # reminder
            )

            rnc202 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc202,
                linked_object_contactable=c239,
                done=True,
        
                            date=isoparse("2019-04-02"),
                        
            # persons
            )
            rnc202.persons.add(alte_user)
            nc202.created_at = isoparse("2019-03-19 10:52:49.925766+00:00")
            nc202.updated_at = isoparse("2019-03-19 10:52:49.925766+00:00")
        
        if contact_created:    
            nc186 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c239,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF""",
                pinned = False,
                created_at = isoparse("2019-03-04 15:59:49.787092+00:00"),
                updated_at = isoparse("2019-03-04 15:59:49.787092+00:00"),
                # tags,
                # reminder
            )

            rnc186 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc186,
                linked_object_contactable=c239,
                done=True,
        
                            date=isoparse("2019-03-12"),
                        
            # persons
            )
            rnc186.persons.add(alte_user)
            nc186.created_at = isoparse("2019-03-04 15:59:49.787092+00:00")
            nc186.updated_at = isoparse("2019-03-04 15:59:49.787092+00:00")
        
        if contact_created:    
            nc152 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c239,
                note = """prendre des nouvelles concernant l'EF. Que vont ils faire ?""",
                pinned = False,
                created_at = isoparse("2019-01-03 10:40:52.315981+00:00"),
                updated_at = isoparse("2019-01-03 10:40:52.315981+00:00"),
                # tags,
                # reminder
            )

            rnc152 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc152,
                linked_object_contactable=c239,
                done=True,
        
                            date=isoparse("2019-01-21"),
                        
            # persons
            )
            rnc152.persons.add(alte_user)
            nc152.created_at = isoparse("2019-01-03 10:40:52.315981+00:00")
            nc152.updated_at = isoparse("2019-01-03 10:40:52.315981+00:00")
        
        if contact_created:    
            nc89 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c239,
                note = """A relancer si pas de nouvelles pour le PV""",
                pinned = False,
                created_at = isoparse("2018-11-06 15:15:49.281280+00:00"),
                updated_at = isoparse("2018-11-06 15:15:49.281280+00:00"),
                # tags,
                # reminder
            )

            rnc89 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc89,
                linked_object_contactable=c239,
                done=True,
        
                            date=isoparse("2018-12-06"),
                        
            # persons
            )
            rnc89.persons.add(alte_user)
            nc89.created_at = isoparse("2018-11-06 15:15:49.281280+00:00")
            nc89.updated_at = isoparse("2018-11-06 15:15:49.281280+00:00")
        
        address = "  ".strip() + ",  Villefranche sur Saone"
        if address == "  ,  ":
            address = ""
        c237, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Douglas",
            last_name="Martin",
            email="douglas.martin@fibois-rhone.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Douglas",
                'last_name':"Martin",
                'email':"douglas.martin@fibois-rhone.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Villefranche sur Saone",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"04 74 67 21 93",
                'mobile_phone':"06 95 69 58 49",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c237.referents.add(alte_user)
        moo224 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c237,
            organization = o108,
            use_address_from_organization = True,
            title_in_organization="Directeur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c237.tags.add(t9)
                        
        if contact_created:    
            nc354 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c237,
                note = """Prendre des nouvelles début Juin pour le projet Bois énergie de la menuiserie""",
                pinned = False,
                created_at = isoparse("2020-04-15 10:36:08.068991+00:00"),
                updated_at = isoparse("2020-04-15 10:36:08.068991+00:00"),
                # tags,
                # reminder
            )

            rnc354 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc354,
                linked_object_contactable=c237,
                done=True,
        
                            date=isoparse("2020-06-01"),
                        
            # persons
            )
            rnc354.persons.add(alte_user)
            nc354.created_at = isoparse("2020-04-15 10:36:08.068991+00:00")
            nc354.updated_at = isoparse("2020-04-15 10:36:08.068991+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c234, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Richard",
            last_name="Monnet",
            email="rmonnet@miltec.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Richard",
                'last_name':"Monnet",
                'email':"rmonnet@miltec.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 89 93 42",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c234.referents.add(alte_user)
        moo221 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c234,
            organization = o165,
            use_address_from_organization = True,
            title_in_organization="En charge du projet PV",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c234.tags.add(t10)
                        
        if contact_created:    
            nc190 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c234,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF""",
                pinned = False,
                created_at = isoparse("2019-03-04 16:01:12.544248+00:00"),
                updated_at = isoparse("2019-03-04 16:01:12.544248+00:00"),
                # tags,
                # reminder
            )

            rnc190 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc190,
                linked_object_contactable=c234,
                done=True,
        
                            date=isoparse("2019-03-12"),
                        
            # persons
            )
            rnc190.persons.add(alte_user)
            nc190.created_at = isoparse("2019-03-04 16:01:12.544248+00:00")
            nc190.updated_at = isoparse("2019-03-04 16:01:12.544248+00:00")
        
        if contact_created:    
            nc112 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c234,
                note = """Prendre rdv PV""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:34:01.377499+00:00"),
                updated_at = isoparse("2018-11-26 17:34:01.377499+00:00"),
                # tags,
                # reminder
            )

            rnc112 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc112,
                linked_object_contactable=c234,
                done=True,
        
                            date=isoparse("2018-11-27"),
                        
            # persons
            )
            rnc112.persons.add(alte_user)
            nc112.created_at = isoparse("2018-11-26 17:34:01.377499+00:00")
            nc112.updated_at = isoparse("2018-11-26 17:34:01.377499+00:00")
        
        if contact_created:    
            nc94 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c234,
                note = """Relance pour PV envoyer mail avec les pièces principales""",
                pinned = False,
                created_at = isoparse("2018-11-09 09:17:42.402475+00:00"),
                updated_at = isoparse("2018-11-09 09:17:42.402475+00:00"),
                # tags,
                # reminder
            )

            rnc94 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc94,
                linked_object_contactable=c234,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc94.persons.add(alte_user)
            nc94.created_at = isoparse("2018-11-09 09:17:42.402475+00:00")
            nc94.updated_at = isoparse("2018-11-09 09:17:42.402475+00:00")
        
        if contact_created:    
            nc92 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c234,
                note = """Relance si pas de nouvelles""",
                pinned = False,
                created_at = isoparse("2018-11-06 15:47:54.766059+00:00"),
                updated_at = isoparse("2018-11-06 15:47:54.766059+00:00"),
                # tags,
                # reminder
            )

            rnc92 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc92,
                linked_object_contactable=c234,
                done=True,
        
                            date=isoparse("2018-11-09"),
                        
            # persons
            )
            rnc92.persons.add(alte_user)
            nc92.created_at = isoparse("2018-11-06 15:47:54.766059+00:00")
            nc92.updated_at = isoparse("2018-11-06 15:47:54.766059+00:00")
        
        if contact_created:    
            nc85 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c234,
                note = """Relancer / Avancement EF PV COR""",
                pinned = False,
                created_at = isoparse("2018-10-02 12:57:42.294353+00:00"),
                updated_at = isoparse("2018-10-02 12:57:42.294353+00:00"),
                # tags,
                # reminder
            )

            rnc85 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc85,
                linked_object_contactable=c234,
                done=True,
        
                            date=isoparse("2018-10-24"),
                        
            # persons
            )
            rnc85.persons.add(alte_user)
            nc85.created_at = isoparse("2018-10-02 12:57:42.294353+00:00")
            nc85.updated_at = isoparse("2018-10-02 12:57:42.294353+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c233, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Marc",
            last_name="Moncorge",
            email="mmoncorge@laroche.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Marc",
                'last_name':"Moncorge",
                'email':"mmoncorge@laroche.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 89 89 23",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c233.referents.add(alte_user)
        moo220 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c233,
            organization = o164,
            use_address_from_organization = True,
            title_in_organization="En charge du projet PV",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c233.tags.add(t10)
                        
        if contact_created:    
            nc189 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c233,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF""",
                pinned = False,
                created_at = isoparse("2019-03-04 16:00:48.676751+00:00"),
                updated_at = isoparse("2019-03-04 16:00:48.676751+00:00"),
                # tags,
                # reminder
            )

            rnc189 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc189,
                linked_object_contactable=c233,
                done=True,
        
                            date=isoparse("2019-03-12"),
                        
            # persons
            )
            rnc189.persons.add(alte_user)
            nc189.created_at = isoparse("2019-03-04 16:00:48.676751+00:00")
            nc189.updated_at = isoparse("2019-03-04 16:00:48.676751+00:00")
        
        if contact_created:    
            nc111 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c233,
                note = """Prendre RDV PV""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:33:27.126320+00:00"),
                updated_at = isoparse("2018-11-26 17:33:27.126320+00:00"),
                # tags,
                # reminder
            )

            rnc111 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc111,
                linked_object_contactable=c233,
                done=True,
        
                            date=isoparse("2018-11-27"),
                        
            # persons
            )
            rnc111.persons.add(alte_user)
            nc111.created_at = isoparse("2018-11-26 17:33:27.126320+00:00")
            nc111.updated_at = isoparse("2018-11-26 17:33:27.126320+00:00")
        
        if contact_created:    
            nc91 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c233,
                note = """Relance s'il ne m'a pas rappelé""",
                pinned = False,
                created_at = isoparse("2018-11-06 15:28:58.678935+00:00"),
                updated_at = isoparse("2018-11-06 15:28:58.678935+00:00"),
                # tags,
                # reminder
            )

            rnc91 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc91,
                linked_object_contactable=c233,
                done=True,
        
                            date=isoparse("2018-11-09"),
                        
            # persons
            )
            rnc91.persons.add(alte_user)
            nc91.created_at = isoparse("2018-11-06 15:28:58.678935+00:00")
            nc91.updated_at = isoparse("2018-11-06 15:28:58.678935+00:00")
        
        if contact_created:    
            nc84 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c233,
                note = """A relancer / avancer sur le projet PV pour l'EF""",
                pinned = False,
                created_at = isoparse("2018-10-02 12:55:43.228402+00:00"),
                updated_at = isoparse("2018-10-02 12:55:43.228402+00:00"),
                # tags,
                # reminder
            )

            rnc84 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc84,
                linked_object_contactable=c233,
                done=True,
        
                            date=isoparse("2018-10-24"),
                        
            # persons
            )
            rnc84.persons.add(alte_user)
            nc84.created_at = isoparse("2018-10-02 12:55:43.228402+00:00")
            nc84.updated_at = isoparse("2018-10-02 12:55:43.228402+00:00")
        
        address = "  ".strip() + ",  Cours La Ville"
        if address == "  ,  ":
            address = ""
        c232, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Barras",
            last_name="Nelly",
            email="nbarras@bduron.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Barras",
                'last_name':"Nelly",
                'email':"nbarras@bduron.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"Cours La Ville",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"04 74 89 75 52",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c232.referents.add(alte_user)
        moo219 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c232,
            organization = o163,
            use_address_from_organization = True,
            title_in_organization="En charge du projet PV",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c232.tags.add(t10)
                        
        if contact_created:    
            nc187 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c232,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF""",
                pinned = False,
                created_at = isoparse("2019-03-04 16:00:11.530072+00:00"),
                updated_at = isoparse("2019-03-04 16:00:11.530072+00:00"),
                # tags,
                # reminder
            )

            rnc187 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc187,
                linked_object_contactable=c232,
                done=True,
        
                            date=isoparse("2019-04-01"),
                        
            # persons
            )
            rnc187.persons.add(alte_user)
            nc187.created_at = isoparse("2019-03-04 16:00:11.530072+00:00")
            nc187.updated_at = isoparse("2019-03-04 16:00:11.530072+00:00")
        
        if contact_created:    
            nc153 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c232,
                note = """Nouvelles EF. Que vont ils faire ?""",
                pinned = False,
                created_at = isoparse("2019-01-03 10:41:19.181458+00:00"),
                updated_at = isoparse("2019-01-03 10:41:19.181458+00:00"),
                # tags,
                # reminder
            )

            rnc153 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc153,
                linked_object_contactable=c232,
                done=True,
        
                            date=isoparse("2019-01-21"),
                        
            # persons
            )
            rnc153.persons.add(alte_user)
            nc153.created_at = isoparse("2019-01-03 10:41:19.181458+00:00")
            nc153.updated_at = isoparse("2019-01-03 10:41:19.181458+00:00")
        
        if contact_created:    
            nc113 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c232,
                note = """Prendre RDV PV""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:35:22.534119+00:00"),
                updated_at = isoparse("2018-11-26 17:35:22.534119+00:00"),
                # tags,
                # reminder
            )

            rnc113 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc113,
                linked_object_contactable=c232,
                done=True,
        
                            date=isoparse("2018-11-27"),
                        
            # persons
            )
            rnc113.persons.add(alte_user)
            nc113.created_at = isoparse("2018-11-26 17:35:22.534119+00:00")
            nc113.updated_at = isoparse("2018-11-26 17:35:22.534119+00:00")
        
        if contact_created:    
            nc95 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c232,
                note = """Relance si toujours pas les documents""",
                pinned = False,
                created_at = isoparse("2018-11-09 09:28:53.865164+00:00"),
                updated_at = isoparse("2018-11-09 09:28:53.865164+00:00"),
                # tags,
                # reminder
            )

            rnc95 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc95,
                linked_object_contactable=c232,
                done=True,
        
                            date=isoparse("2018-12-03"),
                        
            # persons
            )
            rnc95.persons.add(alte_user)
            nc95.created_at = isoparse("2018-11-09 09:28:53.865164+00:00")
            nc95.updated_at = isoparse("2018-11-09 09:28:53.865164+00:00")
        
        if contact_created:    
            nc83 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c232,
                note = """A relancer ou faire le point pour les éléments de l'EF PV""",
                pinned = False,
                created_at = isoparse("2018-10-02 12:52:47.554162+00:00"),
                updated_at = isoparse("2018-10-02 12:52:47.554162+00:00"),
                # tags,
                # reminder
            )

            rnc83 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc83,
                linked_object_contactable=c232,
                done=True,
        
                            date=isoparse("2018-10-24"),
                        
            # persons
            )
            rnc83.persons.add(alte_user)
            nc83.created_at = isoparse("2018-10-02 12:52:47.554162+00:00")
            nc83.updated_at = isoparse("2018-10-02 12:52:47.554162+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c230, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Arnaud",
            last_name="De Saint Trivier",
            email="arnaud.de-saint-trivier@therasana.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Arnaud",
                'last_name':"De Saint Trivier",
                'email':"arnaud.de-saint-trivier@therasana.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 08 42 52 93",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c230.referents.add(alte_user)
        moo216 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c230,
            organization = o161,
            use_address_from_organization = True,
            title_in_organization="Dirigeant",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c230.tags.add(t10)
                        
        if contact_created:    
            nc122 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c230,
                note = """Relancer pour rdv...""",
                pinned = False,
                created_at = isoparse("2018-11-28 15:31:55.219688+00:00"),
                updated_at = isoparse("2018-11-28 15:31:55.219688+00:00"),
                # tags,
                # reminder
            )

            rnc122 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc122,
                linked_object_contactable=c230,
                done=True,
        
                            date=isoparse("2018-11-29"),
                        
            # persons
            )
            rnc122.persons.add(alte_user)
            nc122.created_at = isoparse("2018-11-28 15:31:55.219688+00:00")
            nc122.updated_at = isoparse("2018-11-28 15:31:55.219688+00:00")
        
        if contact_created:    
            nc81 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c230,
                note = """Prendre des nouvelles""",
                pinned = False,
                created_at = isoparse("2018-10-02 07:28:26.450085+00:00"),
                updated_at = isoparse("2018-10-02 07:28:26.450085+00:00"),
                # tags,
                # reminder
            )

            rnc81 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc81,
                linked_object_contactable=c230,
                done=True,
        
                            date=isoparse("2018-11-05"),
                        
            # persons
            )
            rnc81.persons.add(alte_user)
            nc81.created_at = isoparse("2018-10-02 07:28:26.450085+00:00")
            nc81.updated_at = isoparse("2018-10-02 07:28:26.450085+00:00")
        
        if contact_created:    
            nc25 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c230,
                note = """Envoyer doc PV pour EF""",
                pinned = False,
                created_at = isoparse("2018-09-25 13:29:33.632997+00:00"),
                updated_at = isoparse("2018-09-25 13:29:33.632997+00:00"),
                # tags,
                # reminder
            )

            rnc25 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc25,
                linked_object_contactable=c230,
                done=True,
        
                            date=isoparse("2018-09-28"),
                        
            # persons
            )
            rnc25.persons.add(alte_user)
            nc25.created_at = isoparse("2018-09-25 13:29:33.632997+00:00")
            nc25.updated_at = isoparse("2018-09-25 13:29:33.632997+00:00")
        
        address = "Rue de l'industrie  ".strip() + ", 69870 Chambost-Allières"
        if address == "  ,  ":
            address = ""
        c229, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Patrice",
            last_name="Rivier",
            email="rivier@cincinnativr.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Patrice",
                'last_name':"Rivier",
                'email':"rivier@cincinnativr.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Chambost-Allières",
                'zipcode':"69870",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 60 18 03",
                'mobile_phone':"06 83 46 00 07",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c229.referents.add(alte_user)
        moo215 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c229,
            organization = o160,
            use_address_from_organization = True,
            title_in_organization="Gérant - Direction Technique",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c229.tags.add(t11)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c229.tags.add(t10)
                        
        if contact_created:    
            nc185 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c229,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF""",
                pinned = False,
                created_at = isoparse("2019-03-04 15:59:27.519655+00:00"),
                updated_at = isoparse("2019-03-04 15:59:27.519655+00:00"),
                # tags,
                # reminder
            )

            rnc185 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc185,
                linked_object_contactable=c229,
                done=True,
        
                            date=isoparse("2019-03-13"),
                        
            # persons
            )
            rnc185.persons.add(alte_user)
            nc185.created_at = isoparse("2019-03-04 15:59:27.519655+00:00")
            nc185.updated_at = isoparse("2019-03-04 15:59:27.519655+00:00")
        
        if contact_created:    
            nc90 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c229,
                note = """Relance PV si pas de nouvelles""",
                pinned = False,
                created_at = isoparse("2018-11-06 15:17:02.274490+00:00"),
                updated_at = isoparse("2018-11-06 15:17:02.274490+00:00"),
                # tags,
                # reminder
            )

            rnc90 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc90,
                linked_object_contactable=c229,
                done=True,
        
                            date=isoparse("2018-12-06"),
                        
            # persons
            )
            rnc90.persons.add(alte_user)
            nc90.created_at = isoparse("2018-11-06 15:17:02.274490+00:00")
            nc90.updated_at = isoparse("2018-11-06 15:17:02.274490+00:00")
        
        if contact_created:    
            nc82 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c229,
                note = """faire le point sur le COT et le PV""",
                pinned = False,
                created_at = isoparse("2018-10-02 09:48:39.043871+00:00"),
                updated_at = isoparse("2018-10-02 09:48:39.043871+00:00"),
                # tags,
                # reminder
            )

            rnc82 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc82,
                linked_object_contactable=c229,
                done=True,
        
                            date=isoparse("2018-10-24"),
                        
            # persons
            )
            rnc82.persons.add(alte_user)
            nc82.created_at = isoparse("2018-10-02 09:48:39.043871+00:00")
            nc82.updated_at = isoparse("2018-10-02 09:48:39.043871+00:00")
        
        if contact_created:    
            nc24 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c229,
                note = """Envoyer info PV""",
                pinned = False,
                created_at = isoparse("2018-09-25 13:25:36.082416+00:00"),
                updated_at = isoparse("2018-09-25 13:25:36.082416+00:00"),
                # tags,
                # reminder
            )

            rnc24 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc24,
                linked_object_contactable=c229,
                done=True,
        
                            date=isoparse("2018-09-28"),
                        
            # persons
            )
            rnc24.persons.add(alte_user)
            nc24.created_at = isoparse("2018-09-25 13:25:36.082416+00:00")
            nc24.updated_at = isoparse("2018-09-25 13:25:36.082416+00:00")
        
        if contact_created:    
            nc23 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c229,
                note = """Envoyer AO.""",
                pinned = False,
                created_at = isoparse("2018-09-25 13:25:10.646283+00:00"),
                updated_at = isoparse("2018-09-25 13:25:10.646283+00:00"),
                # tags,
                # reminder
            )

            rnc23 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc23,
                linked_object_contactable=c229,
                done=True,
        
                            date=isoparse("2018-09-28"),
                        
            # persons
            )
            rnc23.persons.add(alte_user)
            nc23.created_at = isoparse("2018-09-25 13:25:10.646283+00:00")
            nc23.updated_at = isoparse("2018-09-25 13:25:10.646283+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c146, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Guillaume",
            last_name="Coicadan",
            email="guillaume.coicadan@rhone.chambagri.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Guillaume",
                'last_name':"Coicadan",
                'email':"guillaume.coicadan@rhone.chambagri.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 78 19 61 22",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c146.referents.add(alte_user)
        moo141 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c146,
            organization = o124,
            use_address_from_organization = True,
            title_in_organization="Conseiller",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c146.tags.add(t9)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c142, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Sophie",
            last_name="Billiard",
            email="sophie-billiard@wanadoo.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Sophie",
                'last_name':"Billiard",
                'email':"sophie-billiard@wanadoo.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 80 04 96 28",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c142.referents.add(alte_user)
        moo138 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c142,
            organization = o121,
            use_address_from_organization = True,
            title_in_organization="Thermicienne indépendante",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c142.tags.add(t11)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c143, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Bernard",
            last_name="Rossier",
            email="bernard.rossier@lamuresurazergues.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Bernard",
                'last_name':"Rossier",
                'email':"bernard.rossier@lamuresurazergues.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 03 04 73",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c143.referents.add(alte_user)
        moo137 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c143,
            organization = o121,
            use_address_from_organization = True,
            title_in_organization="Maire",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c143.tags.add(t11)
                        
        if contact_created:    
            nc207 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c143,
                note = """Validation livraison chaufferie. + Attestation RGE installateur.""",
                pinned = False,
                created_at = isoparse("2019-03-26 09:29:49.214694+00:00"),
                updated_at = isoparse("2019-03-26 09:29:49.214694+00:00"),
                # tags,
                # reminder
            )

            rnc207 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc207,
                linked_object_contactable=c143,
                done=True,
        
                            date=isoparse("2019-04-01"),
                        
            # persons
            )
            rnc207.persons.add(alte_user)
            nc207.created_at = isoparse("2019-03-26 09:29:49.214694+00:00")
            nc207.updated_at = isoparse("2019-03-26 09:29:49.214694+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c394, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Jean-Pierre",
            last_name="Goudard",
            email="jean-pierre.goudard@c-or.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Jean-Pierre",
                'last_name':"Goudard",
                'email':"jean-pierre.goudard@c-or.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 50 64 15 48",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c394.referents.add(alte_user)
        moo136 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c394,
            organization = o103,
            use_address_from_organization = True,
            title_in_organization="Vice président DD",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c394.tags.add(t9)
                        
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c394.tags.add(t11)
                        
        if contact_created:    
            nc287 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c394,
                note = """Voir avec lui quand faire passer en bureau le projet de chaufferie bois à Grandris""",
                pinned = False,
                created_at = isoparse("2019-09-12 12:50:09.286276+00:00"),
                updated_at = isoparse("2019-09-12 12:50:09.286276+00:00"),
                # tags,
                # reminder
            )

            rnc287 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc287,
                linked_object_contactable=c394,
                done=True,
        
                            date=isoparse("2019-10-15"),
                        
            # persons
            )
            rnc287.persons.add(alte_user)
            nc287.created_at = isoparse("2019-09-12 12:50:09.286276+00:00")
            nc287.updated_at = isoparse("2019-09-12 12:50:09.286276+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c139, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Pauline",
            last_name="Ferrez",
            email="p.ferrez@ouestlyonnais.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Pauline",
                'last_name':"Ferrez",
                'email':"p.ferrez@ouestlyonnais.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 78 48 35 43",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c139.referents.add(alte_user)
        moo135 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c139,
            organization = o119,
            use_address_from_organization = True,
            title_in_organization="Chargée de mission énergie-climat",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t13, created = Tag.objects.get_or_create(
                name="SOL",
                owning_group=alte_group,
                defaults={
                    'name': "SOL",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c139.tags.add(t13)
                        
        if contact_created:    
            nc200 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c139,
                note = """Relance WImmers et Maudry""",
                pinned = False,
                created_at = isoparse("2019-03-08 08:46:55.459855+00:00"),
                updated_at = isoparse("2019-03-08 08:46:55.459855+00:00"),
                # tags,
                # reminder
            )

            rnc200 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc200,
                linked_object_contactable=c139,
                done=True,
        
                            date=isoparse("2019-03-11"),
                        
            # persons
            )
            rnc200.persons.add(alte_user)
            nc200.created_at = isoparse("2019-03-08 08:46:55.459855+00:00")
            nc200.updated_at = isoparse("2019-03-08 08:46:55.459855+00:00")
        
        if contact_created:    
            nc19 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c139,
                note = """Relancer contact SOL""",
                pinned = False,
                created_at = isoparse("2018-09-17 13:50:45.747551+00:00"),
                updated_at = isoparse("2018-09-17 13:50:45.747551+00:00"),
                # tags,
                # reminder
            )

            rnc19 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc19,
                linked_object_contactable=c139,
                done=True,
        
                            date=isoparse("2018-11-07"),
                        
            # persons
            )
            rnc19.persons.add(alte_user)
            nc19.created_at = isoparse("2018-09-17 13:50:45.747551+00:00")
            nc19.updated_at = isoparse("2018-09-17 13:50:45.747551+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c138, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Mélanie",
            last_name="Bréchoire",
            email="melanie.brechoire@semcoda.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Mélanie",
                'last_name':"Bréchoire",
                'email':"melanie.brechoire@semcoda.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 14 14 84",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c138.referents.add(alte_user)
        moo134 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c138,
            organization = o116,
            use_address_from_organization = True,
            title_in_organization="Chargée d'opérations - Etudes",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c138.tags.add(t11)
                        
        if contact_created:    
            nc79 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c138,
                note = """A relancer ? encore... Si pas de nouvelle appeler Dalmont""",
                pinned = False,
                created_at = isoparse("2018-10-02 07:23:12.828563+00:00"),
                updated_at = isoparse("2018-10-02 07:23:12.828563+00:00"),
                # tags,
                # reminder
            )

            rnc79 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc79,
                linked_object_contactable=c138,
                done=True,
        
                            date=isoparse("2018-10-25"),
                        
            # persons
            )
            rnc79.persons.add(alte_user)
            nc79.created_at = isoparse("2018-10-02 07:23:12.828563+00:00")
            nc79.updated_at = isoparse("2018-10-02 07:23:12.828563+00:00")
        
        if contact_created:    
            nc26 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c138,
                note = """A relancer si elle ne m'a pas recontacté.""",
                pinned = False,
                created_at = isoparse("2018-09-26 07:52:00.844537+00:00"),
                updated_at = isoparse("2018-09-26 07:52:00.844537+00:00"),
                # tags,
                # reminder
            )

            rnc26 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc26,
                linked_object_contactable=c138,
                done=True,
        
                            date=isoparse("2018-10-02"),
                        
            # persons
            )
            rnc26.persons.add(alte_user)
            nc26.created_at = isoparse("2018-09-26 07:52:00.844537+00:00")
            nc26.updated_at = isoparse("2018-09-26 07:52:00.844537+00:00")
        
        if contact_created:    
            nc18 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c138,
                note = """A contacter à son retour de congé dans le cadre du COT : 



Bonjour,

Nous sommes actuellement dans l’attente du passage en commission de nos projets de Tarare par la nouvelle direction de la SEMCODA.

A ce jour, nous n’avons toujours pas de confirmation que ces projets seront réalisés. Nous en saurons plus courant octobre.

En ce qui concerne ces deux projets : de résidence séniors et de maison médicale, il y a de grande chance qu’ils soient réalisés.

Toutefois, concernant les aides financières possibles il me semble plus judicieux de vous rapprocher de la chargée de projet, Mme BRECHOIRE, à la SEMCODA qui en étudiera la faisabilité.

De souvenir, Mme Hurter vous avait précisé que notre bureau d’étude lié à la maison de santé nous avait confirmé qu’une connexion au chauffage urbain n’était pas envisageable pour cette opération. Certes il existe sans doute d’autres points durables possibles à développer.

Mme BRECHOIRE sera de retour de son congés le 24/09/18. Si vous lui transmettez votre proposition, elle l’étudiera et reviendra alors vers nous pour un diagnostic plus approfondi.

A ce jour, les dossiers DCE ayant été validés techniquement en l’état, nous ne pouvons lancer des études sans son consentement.

 

Je vous laisse ci-dessous ses coordonnées :

 

Mélanie BRECHOIRE 

Chargée d'opérations - Etudes

Département Maîtrise d'Ouvrage en Propre 

T. 04 74 14 14 84 - 

melanie.brechoire@semcoda.com""",
                pinned = False,
                created_at = isoparse("2018-09-17 13:21:16.823067+00:00"),
                updated_at = isoparse("2018-09-17 13:21:16.823067+00:00"),
                # tags,
                # reminder
            )

            rnc18 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc18,
                linked_object_contactable=c138,
                done=True,
        
                            date=isoparse("2018-09-25"),
                        
            # persons
            )
            rnc18.persons.add(alte_user)
            nc18.created_at = isoparse("2018-09-17 13:21:16.823067+00:00")
            nc18.updated_at = isoparse("2018-09-17 13:21:16.823067+00:00")
        
        address = "5 rue Jussieu  ".strip() + ", 69002 Lyon"
        if address == "  ,  ":
            address = ""
        c137, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Philippe",
            last_name="Reach",
            email="pr@reach-scharff.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Philippe",
                'last_name':"Reach",
                'email':"pr@reach-scharff.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Lyon",
                'zipcode':"69002",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"",
                'mobile_phone':"06 42 06 78 57",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c137.referents.add(alte_user)
        moo133 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c137,
            organization = o118,
            use_address_from_organization = True,
            title_in_organization="Architecte",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c137.tags.add(t11)
                        
        address = "  ".strip() + ", 69170 Joux"
        if address == "  ,  ":
            address = ""
        c136, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Hofstetter",
            last_name="Guy",
            email="guy.hofstetter@gmail.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Hofstetter",
                'last_name':"Guy",
                'email':"guy.hofstetter@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Joux",
                'zipcode':"69170",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c136.referents.add(alte_user)
        moo131 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c136,
            organization = o117,
            use_address_from_organization = True,
            title_in_organization="Maire",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c136.tags.add(t11)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c135, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Cyrille",
            last_name="Dalmont",
            email="cyrille.dalmont@semcoda.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Cyrille",
                'last_name':"Dalmont",
                'email':"cyrille.dalmont@semcoda.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"07 61 10 44 85",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c135.referents.add(alte_user)
        moo130 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c135,
            organization = o116,
            use_address_from_organization = True,
            title_in_organization="Chargé de développement",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c135.tags.add(t11)
                        
        if contact_created:    
            nc14 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c135,
                note = """A contacter pour prendre connaissance des nouveaux projets""",
                pinned = False,
                created_at = isoparse("2018-09-17 12:58:47.328106+00:00"),
                updated_at = isoparse("2018-09-17 12:58:47.328106+00:00"),
                # tags,
                # reminder
            )

            rnc14 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc14,
                linked_object_contactable=c135,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc14.persons.add(alte_user)
            nc14.created_at = isoparse("2018-09-17 12:58:47.328106+00:00")
            nc14.updated_at = isoparse("2018-09-17 12:58:47.328106+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c134, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Delphine",
            last_name="Boret",
            email="dboret@sudarchitectes.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Delphine",
                'last_name':"Boret",
                'email':"dboret@sudarchitectes.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c134.referents.add(alte_user)
        moo129 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c134,
            organization = o115,
            use_address_from_organization = True,
            title_in_organization="Thermicienne",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c134.tags.add(t11)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c133, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Elody",
            last_name="Hurter",
            email="ehurter@sudarchitectes.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Elody",
                'last_name':"Hurter",
                'email':"ehurter@sudarchitectes.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c133.referents.add(alte_user)
        moo128 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c133,
            organization = o115,
            use_address_from_organization = True,
            title_in_organization="Architecte",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c133.tags.add(t11)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c132, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Marc",
            last_name="Thevenet",
            email="marc.thevenet@be-eepos.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Marc",
                'last_name':"Thevenet",
                'email':"marc.thevenet@be-eepos.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"07 70 21 34 83",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c132.referents.add(alte_user)
        moo127 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c132,
            organization = o114,
            use_address_from_organization = True,
            title_in_organization="Chargé de projets",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c132.tags.add(t11)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c131, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Fabien",
            last_name="Hubert",
            email="fhubert@syder.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Fabien",
                'last_name':"Hubert",
                'email':"fhubert@syder.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 21 16 63 60",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c131.referents.add(alte_user)
        moo126 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c131,
            organization = o113,
            use_address_from_organization = True,
            title_in_organization="Chargé de mission",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t12, created = Tag.objects.get_or_create(
                name="COT TERMINE",
                owning_group=alte_group,
                defaults={
                    'name': "COT TERMINE",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c131.tags.add(t12)
                        
        if contact_created:    
            nc227 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c131,
                note = """Avancement projet RC Ronno ?""",
                pinned = False,
                created_at = isoparse("2019-05-21 13:27:05.635133+00:00"),
                updated_at = isoparse("2019-05-21 13:27:05.635133+00:00"),
                # tags,
                # reminder
            )

            rnc227 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc227,
                linked_object_contactable=c131,
                done=True,
        
                            date=isoparse("2019-07-10"),
                        
            # persons
            )
            rnc227.persons.add(alte_user)
            nc227.created_at = isoparse("2019-05-21 13:27:05.635133+00:00")
            nc227.updated_at = isoparse("2019-05-21 13:27:05.635133+00:00")
        
        if contact_created:    
            nc206 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c131,
                note = """Prendre news pour caler visite en lien avec FIBOIS""",
                pinned = False,
                created_at = isoparse("2019-03-25 12:56:13.127027+00:00"),
                updated_at = isoparse("2019-03-25 12:56:13.127027+00:00"),
                # tags,
                # reminder
            )

            rnc206 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc206,
                linked_object_contactable=c131,
                done=True,
        
                            date=isoparse("2019-04-08"),
                        
            # persons
            )
            rnc206.persons.add(alte_user)
            nc206.created_at = isoparse("2019-03-25 12:56:13.127027+00:00")
            nc206.updated_at = isoparse("2019-03-25 12:56:13.127027+00:00")
        
        if contact_created:    
            nc15 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c131,
                note = """A contacter pour savoir comment va se passer la construction... Éventuellement prévoir une visite ?""",
                pinned = False,
                created_at = isoparse("2018-09-17 12:59:55.191576+00:00"),
                updated_at = isoparse("2018-09-17 12:59:55.191576+00:00"),
                # tags,
                # reminder
            )

            rnc15 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc15,
                linked_object_contactable=c131,
                done=True,
        
                            date=isoparse("2018-12-10"),
                        
            # persons
            )
            rnc15.persons.add(alte_user)
            nc15.created_at = isoparse("2018-09-17 12:59:55.191576+00:00")
            nc15.updated_at = isoparse("2018-09-17 12:59:55.191576+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c130, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Hervé",
            last_name="Thion",
            email="herve.thion@thion-arvix.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Hervé",
                'last_name':"Thion",
                'email':"herve.thion@thion-arvix.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 89 89 69",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c130.referents.add(alte_user)
        moo125 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c130,
            organization = o112,
            use_address_from_organization = True,
            title_in_organization="Directeur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c130.tags.add(t10)
                        
        t10, created = Tag.objects.get_or_create(
            name="PV-COR",
            owning_group=alte_group,
            defaults={
                'name': "PV-COR",
                'description': "",
                'owning_group': alte_group,
            }
        )
        moo125.tags.add(t10)

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c127, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="France Noëlle",
            last_name="Lefaucheux",
            email="france-noelle.lefaucheux@ademe.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"France Noëlle",
                'last_name':"Lefaucheux",
                'email':"france-noelle.lefaucheux@ademe.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 72 83 46 19",
                'mobile_phone':"06 07 01 68 23",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c127.referents.add(alte_user)
        moo124 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c127,
            organization = o111,
            use_address_from_organization = True,
            title_in_organization="Responsable administrative et juridique",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c127.tags.add(t9)
                        
        if contact_created:    
            nc306 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c127,
                note = """Prendre des nouvelles pour la signature du PV""",
                pinned = False,
                created_at = isoparse("2019-10-01 10:30:58.755477+00:00"),
                updated_at = isoparse("2019-10-01 10:30:58.755477+00:00"),
                # tags,
                # reminder
            )

            rnc306 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc306,
                linked_object_contactable=c127,
                done=True,
        
                            date=isoparse("2019-10-16"),
                        
            # persons
            )
            rnc306.persons.add(alte_user)
            nc306.created_at = isoparse("2019-10-01 10:30:58.755477+00:00")
            nc306.updated_at = isoparse("2019-10-01 10:30:58.755477+00:00")
        
        if contact_created:    
            nc258 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c127,
                note = """Prévoir COTECH""",
                pinned = False,
                created_at = isoparse("2019-08-02 09:15:59.010251+00:00"),
                updated_at = isoparse("2019-08-02 09:15:59.010251+00:00"),
                # tags,
                # reminder
            )

            rnc258 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc258,
                linked_object_contactable=c127,
                done=True,
        
                            date=isoparse("2019-09-02"),
                        
            # persons
            )
            rnc258.persons.add(alte_user)
            nc258.created_at = isoparse("2019-08-02 09:15:59.010251+00:00")
            nc258.updated_at = isoparse("2019-08-02 09:15:59.010251+00:00")
        
        if contact_created:    
            nc248 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c127,
                note = """Prendre une date pour réunion physique. 

Mettre Claire en copie ou demander ces questions.""",
                pinned = False,
                created_at = isoparse("2019-07-23 09:50:10.779848+00:00"),
                updated_at = isoparse("2019-07-23 09:50:10.779848+00:00"),
                # tags,
                # reminder
            )

            rnc248 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc248,
                linked_object_contactable=c127,
                done=True,
        
                            date=isoparse("2019-07-30"),
                        
            # persons
            )
            rnc248.persons.add(alte_user)
            nc248.created_at = isoparse("2019-07-23 09:50:10.779848+00:00")
            nc248.updated_at = isoparse("2019-07-23 09:50:10.779848+00:00")
        
        if contact_created:    
            nc201 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c127,
                note = """Envoyer document et proposer une nouvelle date pour COPIL""",
                pinned = False,
                created_at = isoparse("2019-03-08 09:27:56.165347+00:00"),
                updated_at = isoparse("2019-03-08 09:27:56.165347+00:00"),
                # tags,
                # reminder
            )

            rnc201 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc201,
                linked_object_contactable=c127,
                done=True,
        
                            date=isoparse("2019-03-11"),
                        
            # persons
            )
            rnc201.persons.add(alte_user)
            nc201.created_at = isoparse("2019-03-08 09:27:56.165347+00:00")
            nc201.updated_at = isoparse("2019-03-08 09:27:56.165347+00:00")
        
        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        moo124.tags.add(t9)

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c126, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Michel",
            last_name="Majérus",
            email="topdesign@wanadoo.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Michel",
                'last_name':"Majérus",
                'email':"topdesign@wanadoo.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 08 42 66 23",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c126.referents.add(alte_user)
        moo123 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c126,
            organization = o110,
            use_address_from_organization = True,
            title_in_organization="Architecte",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c126.tags.add(t11)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c126.tags.add(t10)
                        
        if contact_created:    
            nc16 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c126,
                note = """A relancer pour faire le point COT sur le projet (SSC ? CETI ?)""",
                pinned = False,
                created_at = isoparse("2018-09-17 13:01:03.776964+00:00"),
                updated_at = isoparse("2018-09-17 13:01:03.776964+00:00"),
                # tags,
                # reminder
            )

            rnc16 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc16,
                linked_object_contactable=c126,
                done=True,
        
                            date=isoparse("2018-11-05"),
                        
            # persons
            )
            rnc16.persons.add(alte_user)
            nc16.created_at = isoparse("2018-09-17 13:01:03.776964+00:00")
            nc16.updated_at = isoparse("2018-09-17 13:01:03.776964+00:00")
        
        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        moo123.tags.add(t9)

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c125, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Nadir",
            last_name="Aït Yahia",
            email="nadir@shopstore.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Nadir",
                'last_name':"Aït Yahia",
                'email':"nadir@shopstore.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 05 32 23",
                'mobile_phone':"06 51 29 69 78",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c125.referents.add(alte_user)
        moo122 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c125,
            organization = o110,
            use_address_from_organization = True,
            title_in_organization="Directeur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c125.tags.add(t11)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c125.tags.add(t10)
                        
        if contact_created:    
            nc120 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c125,
                note = """Relancer pour avoir news PC et archi""",
                pinned = False,
                created_at = isoparse("2018-11-28 15:28:32.391696+00:00"),
                updated_at = isoparse("2018-11-28 15:28:32.391696+00:00"),
                # tags,
                # reminder
            )

            rnc120 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc120,
                linked_object_contactable=c125,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc120.persons.add(alte_user)
            nc120.created_at = isoparse("2018-11-28 15:28:32.391696+00:00")
            nc120.updated_at = isoparse("2018-11-28 15:28:32.391696+00:00")
        
        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        moo122.tags.add(t9)

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c124, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Philippe",
            last_name="Jouvé",
            email="ph.jouve@transport-jouve.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Philippe",
                'last_name':"Jouvé",
                'email':"ph.jouve@transport-jouve.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 05 98 70",
                'mobile_phone':"06 62 90 65 21",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c124.referents.add(alte_user)
        moo121 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c124,
            organization = o109,
            use_address_from_organization = True,
            title_in_organization="Directeur",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c124.tags.add(t11)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c124.tags.add(t10)
                        
        if contact_created:    
            nc13 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c124,
                note = """Intéressé par du PV dans le cadre de la construction de son local de stockage sur la zone de Boiron.""",
                pinned = False,
                created_at = isoparse("2018-09-14 15:20:16.070475+00:00"),
                updated_at = isoparse("2018-09-14 15:20:16.070475+00:00"),
                # tags,
                # reminder
            )

            rnc13 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc13,
                linked_object_contactable=c124,
                done=False,
        
            # persons
            )
            rnc13.persons.add(alte_user)
            nc13.created_at = isoparse("2018-09-14 15:20:16.070475+00:00")
            nc13.updated_at = isoparse("2018-09-14 15:20:16.070475+00:00")
        
        if contact_created:    
            nc12 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c124,
                note = """A voir avec lui s'il a connaissance des entreprises installées avec lui sur Boiron .""",
                pinned = False,
                created_at = isoparse("2018-09-11 14:32:53.494491+00:00"),
                updated_at = isoparse("2018-09-11 14:32:53.494491+00:00"),
                # tags,
                # reminder
            )

            rnc12 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc12,
                linked_object_contactable=c124,
                done=True,
        
                            date=isoparse("2018-10-29"),
                        
            # persons
            )
            rnc12.persons.add(alte_user)
            nc12.created_at = isoparse("2018-09-11 14:32:53.494491+00:00")
            nc12.updated_at = isoparse("2018-09-11 14:32:53.494491+00:00")
        
        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        moo121.tags.add(t9)

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c123, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Kevin",
            last_name="Bazile",
            email="k.bazile@fibois69.org",
            defaults={
                'owning_group':alte_group,
                'first_name':"Kevin",
                'last_name':"Bazile",
                'email':"k.bazile@fibois69.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 67 21 93",
                'mobile_phone':"07 72 33 71 78",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c123.referents.add(alte_user)
        moo120 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c123,
            organization = o108,
            use_address_from_organization = True,
            title_in_organization="Animateur charte forestière",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c123.tags.add(t11)
                        
        if contact_created:    
            nc80 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c123,
                note = """Communication ?""",
                pinned = False,
                created_at = isoparse("2018-10-02 07:26:51.767206+00:00"),
                updated_at = isoparse("2018-10-02 07:26:51.767206+00:00"),
                # tags,
                # reminder
            )

            rnc80 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc80,
                linked_object_contactable=c123,
                done=True,
        
                            date=isoparse("2018-10-24"),
                        
            # persons
            )
            rnc80.persons.add(alte_user)
            nc80.created_at = isoparse("2018-10-02 07:26:51.767206+00:00")
            nc80.updated_at = isoparse("2018-10-02 07:26:51.767206+00:00")
        
        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        moo120.tags.add(t9)

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c121, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Patrick",
            last_name="Bourrassaut",
            email="bourrassautp@bourgenbresse.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Patrick",
                'last_name':"Bourrassaut",
                'email':"bourrassautp@bourgenbresse.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 70 58 88 46",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c121.referents.add(alte_user)
        moo119 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c121,
            organization = o107,
            use_address_from_organization = True,
            title_in_organization="Maire",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c121.tags.add(t11)
                        
        if contact_created:    
            nc197 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c121,
                note = """Relancer afin de savoir comment se termine l'histoire...""",
                pinned = False,
                created_at = isoparse("2019-03-06 10:03:25.066609+00:00"),
                updated_at = isoparse("2019-03-06 10:03:25.066609+00:00"),
                # tags,
                # reminder
            )

            rnc197 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc197,
                linked_object_contactable=c121,
                done=True,
        
                            date=isoparse("2019-03-14"),
                        
            # persons
            )
            rnc197.persons.add(alte_user)
            nc197.created_at = isoparse("2019-03-06 10:03:25.066609+00:00")
            nc197.updated_at = isoparse("2019-03-06 10:03:25.066609+00:00")
        
        if contact_created:    
            nc96 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c121,
                note = """Nouvelle de l'EF ? demander à l'archi et à Helair""",
                pinned = False,
                created_at = isoparse("2018-11-09 09:47:41.814211+00:00"),
                updated_at = isoparse("2018-11-09 09:47:41.814211+00:00"),
                # tags,
                # reminder
            )

            rnc96 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc96,
                linked_object_contactable=c121,
                done=True,
        
                            date=isoparse("2018-12-17"),
                        
            # persons
            )
            rnc96.persons.add(alte_user)
            nc96.created_at = isoparse("2018-11-09 09:47:41.814211+00:00")
            nc96.updated_at = isoparse("2018-11-09 09:47:41.814211+00:00")
        
        if contact_created:    
            nc10 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c121,
                note = """Prendre des nouvelles concernant APP PCAET et CdC MOE.""",
                pinned = False,
                created_at = isoparse("2018-09-06 13:26:27.357198+00:00"),
                updated_at = isoparse("2018-09-06 13:26:27.357198+00:00"),
                # tags,
                # reminder
            )

            rnc10 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc10,
                linked_object_contactable=c121,
                done=True,
        
                            date=isoparse("2018-10-09"),
                        
            # persons
            )
            rnc10.persons.add(alte_user)
            nc10.created_at = isoparse("2018-09-06 13:26:27.357198+00:00")
            nc10.updated_at = isoparse("2018-09-06 13:26:27.357198+00:00")
        
        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        moo119.tags.add(t9)

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c120, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Elisabet",
            last_name="Polzella",
            email="elisabeth.polzella@darezei.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Elisabet",
                'last_name':"Polzella",
                'email':"elisabeth.polzella@darezei.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 72 81 61",
                'mobile_phone':"06 03 21 47 56",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c120.referents.add(alte_user)
        moo118 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c120,
            organization = o106,
            use_address_from_organization = True,
            title_in_organization="Architecte",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c120.tags.add(t11)
                        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c119, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Bernard",
            last_name="ROUX",
            email="bernard.roux@dareize.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Bernard",
                'last_name':"ROUX",
                'email':"bernard.roux@dareize.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c119.referents.add(alte_user)
        moo117 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c119,
            organization = o106,
            use_address_from_organization = True,
            title_in_organization="Maire",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c119.tags.add(t11)
                        
        if contact_created:    
            nc199 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c119,
                note = """Voir avec Julien s'il a avancé avec eux sinon je m'en occuperai""",
                pinned = False,
                created_at = isoparse("2019-03-06 10:44:53.572959+00:00"),
                updated_at = isoparse("2019-03-06 10:44:53.572959+00:00"),
                # tags,
                # reminder
            )

            rnc199 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc199,
                linked_object_contactable=c119,
                done=True,
        
                            date=isoparse("2019-03-14"),
                        
            # persons
            )
            rnc199.persons.add(alte_user)
            nc199.created_at = isoparse("2019-03-06 10:44:53.572959+00:00")
            nc199.updated_at = isoparse("2019-03-06 10:44:53.572959+00:00")
        
        if contact_created:    
            nc17 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c119,
                note = """Délibération ..""",
                pinned = False,
                created_at = isoparse("2018-09-17 13:01:40.556532+00:00"),
                updated_at = isoparse("2018-09-17 13:01:40.556532+00:00"),
                # tags,
                # reminder
            )

            rnc17 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc17,
                linked_object_contactable=c119,
                done=True,
        
                            date=isoparse("2018-09-26"),
                        
            # persons
            )
            rnc17.persons.add(alte_user)
            nc17.created_at = isoparse("2018-09-17 13:01:40.556532+00:00")
            nc17.updated_at = isoparse("2018-09-17 13:01:40.556532+00:00")
        
        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        moo117.tags.add(t9)

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c118, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Sophie",
            last_name="Moncorge",
            email="Sophie.Moncorge@c-or.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Sophie",
                'last_name':"Moncorge",
                'email':"Sophie.Moncorge@c-or.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 37 82 78 07",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c118.referents.add(alte_user)
        moo116 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c118,
            organization = o103,
            use_address_from_organization = True,
            title_in_organization="Chargé de mission PCAET",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c118.tags.add(t11)
                        
        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        moo116.tags.add(t9)

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c117, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Simon",
            last_name="Perrache",
            email="simon.peyrache@c-or.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Simon",
                'last_name':"Perrache",
                'email':"simon.peyrache@c-or.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 66 33 73 03",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c117.referents.add(alte_user)
        moo115 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c117,
            organization = o103,
            use_address_from_organization = True,
            title_in_organization="Directeur du pôle développement durable",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c117.tags.add(t11)
                        
        if contact_created:    
            nc170 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c117,
                note = """QUID avec la maire de St Clément ?""",
                pinned = False,
                created_at = isoparse("2019-01-15 15:04:49.749747+00:00"),
                updated_at = isoparse("2019-01-15 15:04:49.749747+00:00"),
                # tags,
                # reminder
            )

            rnc170 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc170,
                linked_object_contactable=c117,
                done=True,
        
                            date=isoparse("2019-01-17"),
                        
            # persons
            )
            rnc170.persons.add(alte_user)
            nc170.created_at = isoparse("2019-01-15 15:04:49.749747+00:00")
            nc170.updated_at = isoparse("2019-01-15 15:04:49.749747+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c116, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Mathieu",
            last_name="Bernage",
            email="maintenance@hridaya-yoga.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Mathieu",
                'last_name':"Bernage",
                'email':"maintenance@hridaya-yoga.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0624863912",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c116.referents.add(alte_user)
        moo114 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c116,
            organization = o105,
            use_address_from_organization = True,
            title_in_organization="Responsable de la maintenance du Chateau",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c116.tags.add(t11)
                        
        if contact_created:    
            nc195 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c116,
                note = """Prendre des nouvelles du projet""",
                pinned = False,
                created_at = isoparse("2019-03-06 09:58:24.754521+00:00"),
                updated_at = isoparse("2019-03-06 09:58:24.754521+00:00"),
                # tags,
                # reminder
            )

            rnc195 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc195,
                linked_object_contactable=c116,
                done=True,
        
                            date=isoparse("2019-04-08"),
                        
            # persons
            )
            rnc195.persons.add(alte_user)
            nc195.created_at = isoparse("2019-03-06 09:58:24.754521+00:00")
            nc195.updated_at = isoparse("2019-03-06 09:58:24.754521+00:00")
        
        if contact_created:    
            nc9 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c116,
                note = """Il s'occupe de la maintenance. Est assez intéressé par la technique et a des bases et connaissances solides. Souhaite faire les choses correctement.""",
                pinned = False,
                created_at = isoparse("2018-09-06 13:13:16.747750+00:00"),
                updated_at = isoparse("2018-09-06 13:13:16.747750+00:00"),
                # tags,
                # reminder
            )

            rnc9 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc9,
                linked_object_contactable=c116,
                done=False,
        
            # persons
            )
            rnc9.persons.add(alte_user)
            nc9.created_at = isoparse("2018-09-06 13:13:16.747750+00:00")
            nc9.updated_at = isoparse("2018-09-06 13:13:16.747750+00:00")
        
        t9, created = Tag.objects.get_or_create(
            name="COT",
            owning_group=alte_group,
            defaults={
                'name': "COT",
                'description': "",
                'owning_group': alte_group,
            }
        )
        moo114.tags.add(t9)

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c115, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Déborah",
            last_name="Blin",
            email="deborah@hridaya-yoga.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Déborah",
                'last_name':"Blin",
                'email':"deborah@hridaya-yoga.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"06 14 78 13 41",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c115.referents.add(alte_user)
        moo113 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c115,
            organization = o105,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c115.tags.add(t11)
                        
        if contact_created:    
            nc196 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c115,
                note = """Prendre des nouvelles du projet""",
                pinned = False,
                created_at = isoparse("2019-03-06 09:59:05.790004+00:00"),
                updated_at = isoparse("2019-03-06 09:59:05.790004+00:00"),
                # tags,
                # reminder
            )

            rnc196 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc196,
                linked_object_contactable=c115,
                done=True,
        
                            date=isoparse("2019-03-11"),
                        
            # persons
            )
            rnc196.persons.add(alte_user)
            nc196.created_at = isoparse("2019-03-06 09:59:05.790004+00:00")
            nc196.updated_at = isoparse("2019-03-06 09:59:05.790004+00:00")
        
        if contact_created:    
            nc119 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c115,
                note = """Relancer...""",
                pinned = False,
                created_at = isoparse("2018-11-28 15:27:40.768742+00:00"),
                updated_at = isoparse("2018-11-28 15:27:40.768742+00:00"),
                # tags,
                # reminder
            )

            rnc119 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc119,
                linked_object_contactable=c115,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc119.persons.add(alte_user)
            nc119.created_at = isoparse("2018-11-28 15:27:40.768742+00:00")
            nc119.updated_at = isoparse("2018-11-28 15:27:40.768742+00:00")
        
        if contact_created:    
            nc8 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c115,
                note = """A recontacter pour faire le point sur le projet.""",
                pinned = False,
                created_at = isoparse("2018-09-06 12:56:03.965368+00:00"),
                updated_at = isoparse("2018-09-06 12:56:03.965368+00:00"),
                # tags,
                # reminder
            )

            rnc8 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc8,
                linked_object_contactable=c115,
                done=True,
        
                            date=isoparse("2018-10-29"),
                        
            # persons
            )
            rnc8.persons.add(alte_user)
            nc8.created_at = isoparse("2018-09-06 12:56:03.965368+00:00")
            nc8.updated_at = isoparse("2018-09-06 12:56:03.965368+00:00")
        
        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""
        c114, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Christine",
            last_name="De Saint Jean",
            email="mairieancy@numericable.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Christine",
                'last_name':"De Saint Jean",
                'email':"mairieancy@numericable.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 05 83 58",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
        )
        if contact_created:
            c114.referents.add(alte_user)
        moo112 = MemberOfOrganization.objects.create(
            owning_group=alte_group,
            contact = c114,
            organization = o104,
            use_address_from_organization = True,
            title_in_organization="",
            # tags
            # competencies_tags
            destruction_date=None,
        )

        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c114.tags.add(t11)
                        
        if contact_created:    
            nc86 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c114,
                note = """Relance COT""",
                pinned = False,
                created_at = isoparse("2018-10-30 10:28:18.159872+00:00"),
                updated_at = isoparse("2018-10-30 10:28:18.159872+00:00"),
                # tags,
                # reminder
            )

            rnc86 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc86,
                linked_object_contactable=c114,
                done=True,
        
                            date=isoparse("2018-11-12"),
                        
            # persons
            )
            rnc86.persons.add(alte_user)
            nc86.created_at = isoparse("2018-10-30 10:28:18.159872+00:00")
            nc86.updated_at = isoparse("2018-10-30 10:28:18.159872+00:00")
        
        if contact_created:    
            nc6 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c114,
                note = """A recontacter pour savoir ou en est le projet""",
                pinned = False,
                created_at = isoparse("2018-09-06 12:42:32.846294+00:00"),
                updated_at = isoparse("2018-09-06 12:42:32.846294+00:00"),
                # tags,
                # reminder
            )

            rnc6 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc6,
                linked_object_contactable=c114,
                done=True,
        
                            date=isoparse("2018-09-11"),
                        
            # persons
            )
            rnc6.persons.add(alte_user)
            nc6.created_at = isoparse("2018-09-06 12:42:32.846294+00:00")
            nc6.updated_at = isoparse("2018-09-06 12:42:32.846294+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c459, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Olivier",
            last_name="Peyreron",
            email="opereyron@syder.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Olivier",
                'last_name':"Peyreron",
                'email':"opereyron@syder.fr",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"06 25 30 60 58",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c459.referents.add(alte_user)
            
        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c459.tags.add(t38)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c456, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Laurent",
            last_name="Petrelli",
            email="Laurent.PETRELLI@rhone.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Laurent",
                'last_name':"Petrelli",
                'email':"Laurent.PETRELLI@rhone.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 72 61 76 57",
                'mobile_phone':"06 28 03 84 52",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c456.referents.add(alte_user)
            
        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c456.tags.add(t39)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c454, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Florent",
            last_name="Réginensi",
            email="",
            defaults={
                'owning_group':alte_group,
                'first_name':"Florent",
                'last_name':"Réginensi",
                'email':"",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"06 25 36 65 84",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c454.referents.add(alte_user)
            
        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c454.tags.add(t39)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c450, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Juliane",
            last_name="Oudot",
            email="joudot@villefranche.net",
            defaults={
                'owning_group':alte_group,
                'first_name':"Juliane",
                'last_name':"Oudot",
                'email':"joudot@villefranche.net",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 62 83 84",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c450.referents.add(alte_user)
            
        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c450.tags.add(t38)
                        
        if contact_created:
            nc352 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c450,
                note = """Dépôt du dossier CEE ?""",
                pinned = False,
                created_at = isoparse("2020-04-14 12:44:30.882069+00:00"),
                updated_at = isoparse("2020-04-14 12:44:30.882069+00:00"),
                # tags,
                # reminder
            )

            rnc352 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc352,
                linked_object_contactable=c450,
                done=True,
        
                            date=isoparse("2020-05-25"),
                        
            # persons
            )
            rnc352.persons.add(alte_user)
            nc352.created_at = isoparse("2020-04-14 12:44:30.882069+00:00")
            nc352.updated_at = isoparse("2020-04-14 12:44:30.882069+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c449, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Claude",
            last_name="Villard",
            email="Claude.Villard@mairie-jons.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Claude",
                'last_name':"Villard",
                'email':"Claude.Villard@mairie-jons.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 72 93 01 81",
                'mobile_phone':"06 89 94 31 65",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c449.referents.add(alte_user)
            
        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c449.tags.add(t38)
                        
        if contact_created:
            nc351 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c449,
                note = """Relancer pour prendre des nouvelles.""",
                pinned = False,
                created_at = isoparse("2020-04-14 12:31:01.907923+00:00"),
                updated_at = isoparse("2020-04-14 12:31:01.907923+00:00"),
                # tags,
                # reminder
            )

            rnc351 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc351,
                linked_object_contactable=c449,
                done=True,
        
                            date=isoparse("2020-04-22"),
                        
            # persons
            )
            rnc351.persons.add(alte_user)
            nc351.created_at = isoparse("2020-04-14 12:31:01.907923+00:00")
            nc351.updated_at = isoparse("2020-04-14 12:31:01.907923+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c448, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Anaïs",
            last_name="Vincent",
            email="a.vincent@agglo-villefranche.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Anaïs",
                'last_name':"Vincent",
                'email':"a.vincent@agglo-villefranche.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04.74.68.92.22",
                'mobile_phone':"06.08.21.35.29",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c448.referents.add(alte_user)
            
        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c448.tags.add(t38)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c447, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Juliane",
            last_name="Oudot",
            email="joudot@villefranche.net",
            defaults={
                'owning_group':alte_group,
                'first_name':"Juliane",
                'last_name':"Oudot",
                'email':"joudot@villefranche.net",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 62 83 84",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c447.referents.add(alte_user)
            
        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c447.tags.add(t38)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c445, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Florence",
            last_name="Pelloux",
            email="ass.ludovillefranche@sfr.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Florence",
                'last_name':"Pelloux",
                'email':"ass.ludovillefranche@sfr.fr",
                'client_account':None,
                'civility':civility("-"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"06 2 454 35 51",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c445.referents.add(alte_user)
            
        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c445.tags.add(t38)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c444, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Pierrick",
            last_name="Lancien",
            email="pierrick.lancien@gmail.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Pierrick",
                'last_name':"Lancien",
                'email':"pierrick.lancien@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 70 71 42 24",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c444.referents.add(alte_user)
            
        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c444.tags.add(t38)
                        
        if contact_created:
            nc342 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c444,
                note = """A relancer si pas de nouvelles""",
                pinned = False,
                created_at = isoparse("2020-03-03 10:19:13.474176+00:00"),
                updated_at = isoparse("2020-03-03 10:19:13.474176+00:00"),
                # tags,
                # reminder
            )

            rnc342 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc342,
                linked_object_contactable=c444,
                done=True,
        
                            date=isoparse("2020-03-17"),
                        
            # persons
            )
            rnc342.persons.add(alte_user)
            nc342.created_at = isoparse("2020-03-03 10:19:13.474176+00:00")
            nc342.updated_at = isoparse("2020-03-03 10:19:13.474176+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c443, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="L'haoua",
            last_name="Mustapha",
            email="mlhaoua@vienne-condrieu-agglomeration.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"L'haoua",
                'last_name':"Mustapha",
                'email':"mlhaoua@vienne-condrieu-agglomeration.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 82 06 33 17",
                'mobile_phone':"06 25 78 79 93",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c443.referents.add(alte_user)
            
        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c443.tags.add(t39)
                        
        if contact_created:
            nc350 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c443,
                note = """Reprendre contact pour lancer les projets.""",
                pinned = False,
                created_at = isoparse("2020-03-11 16:10:04.044441+00:00"),
                updated_at = isoparse("2020-03-11 16:10:04.044441+00:00"),
                # tags,
                # reminder
            )

            rnc350 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc350,
                linked_object_contactable=c443,
                done=True,
        
                            date=isoparse("2020-06-01"),
                        
            # persons
            )
            rnc350.persons.add(alte_user)
            nc350.created_at = isoparse("2020-03-11 16:10:04.044441+00:00")
            nc350.updated_at = isoparse("2020-03-11 16:10:04.044441+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c442, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Vincent",
            last_name="Bracco",
            email="",
            defaults={
                'owning_group':alte_group,
                'first_name':"Vincent",
                'last_name':"Bracco",
                'email':"",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 02 31 24 68",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c442.referents.add(alte_user)
            
        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c442.tags.add(t39)
                        
        if contact_created:
            nc346 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c442,
                note = """Répondre à sa demande - le contacter pour la définir""",
                pinned = False,
                created_at = isoparse("2020-03-09 16:45:11.080676+00:00"),
                updated_at = isoparse("2020-03-09 16:45:11.080676+00:00"),
                # tags,
                # reminder
            )

            rnc346 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc346,
                linked_object_contactable=c442,
                done=True,
        
                            date=isoparse("2020-05-25"),
                        
            # persons
            )
            rnc346.persons.add(alte_user)
            nc346.created_at = isoparse("2020-03-09 16:45:11.080676+00:00")
            nc346.updated_at = isoparse("2020-03-09 16:45:11.080676+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c441, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Jean François",
            last_name="Rivier",
            email="jef.rivier@orange.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Jean François",
                'last_name':"Rivier",
                'email':"jef.rivier@orange.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c441.referents.add(alte_user)
            
        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c441.tags.add(t39)
                        
        if contact_created:
            nc340 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c441,
                note = """Prendre nouvelles des avancements pour AO PV auprès de Fred D""",
                pinned = False,
                created_at = isoparse("2020-02-25 14:26:08.508284+00:00"),
                updated_at = isoparse("2020-02-25 14:26:08.508284+00:00"),
                # tags,
                # reminder
            )

            rnc340 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc340,
                linked_object_contactable=c441,
                done=True,
        
                            date=isoparse("2020-05-18"),
                        
            # persons
            )
            rnc340.persons.add(alte_user)
            nc340.created_at = isoparse("2020-02-25 14:26:08.508284+00:00")
            nc340.updated_at = isoparse("2020-02-25 14:26:08.508284+00:00")
        
        if contact_created:
            nc339 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c441,
                note = """A contacter pour demande""",
                pinned = False,
                created_at = isoparse("2020-02-19 16:52:29.006377+00:00"),
                updated_at = isoparse("2020-02-19 16:52:29.006377+00:00"),
                # tags,
                # reminder
            )

            rnc339 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc339,
                linked_object_contactable=c441,
                done=True,
        
                            date=isoparse("2020-02-24"),
                        
            # persons
            )
            rnc339.persons.add(alte_user)
            nc339.created_at = isoparse("2020-02-19 16:52:29.006377+00:00")
            nc339.updated_at = isoparse("2020-02-19 16:52:29.006377+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c440, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Corine",
            last_name="Bertholet",
            email="cbertholet@pays-ozon.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Corine",
                'last_name':"Bertholet",
                'email':"cbertholet@pays-ozon.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 78 02 93 68",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c440.referents.add(alte_user)
            
        if contact_created:
            t2, created = Tag.objects.get_or_create(
                name="achevé",
                owning_group=alte_group,
                defaults={
                    'name': "achevé",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c440.tags.add(t2)
                        
        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c440.tags.add(t39)
                        
        if contact_created:
            nc348 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c440,
                note = """A contacter pour lancer ses projets""",
                pinned = False,
                created_at = isoparse("2020-03-09 16:53:14.320212+00:00"),
                updated_at = isoparse("2020-03-09 16:53:14.320212+00:00"),
                # tags,
                # reminder
            )

            rnc348 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc348,
                linked_object_contactable=c440,
                done=True,
        
                            date=isoparse("2020-06-01"),
                        
            # persons
            )
            rnc348.persons.add(alte_user)
            nc348.created_at = isoparse("2020-03-09 16:53:14.320212+00:00")
            nc348.updated_at = isoparse("2020-03-09 16:53:14.320212+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c439, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Sébastien",
            last_name="Carreno",
            email="s.carreno@saintlaurentdemure.org",
            defaults={
                'owning_group':alte_group,
                'first_name':"Sébastien",
                'last_name':"Carreno",
                'email':"s.carreno@saintlaurentdemure.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 72 48 61 21",
                'mobile_phone':"06 07 72 28 06",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c439.referents.add(alte_user)
            
        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c439.tags.add(t38)
                        
        if contact_created:
            nc349 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c439,
                note = """Prendre des nouvelles de son projet de RC""",
                pinned = False,
                created_at = isoparse("2020-03-10 10:06:45.352937+00:00"),
                updated_at = isoparse("2020-03-10 10:06:45.352937+00:00"),
                # tags,
                # reminder
            )

            rnc349 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc349,
                linked_object_contactable=c439,
                done=True,
        
                            date=isoparse("2020-09-07"),
                        
            # persons
            )
            rnc349.persons.add(alte_user)
            nc349.created_at = isoparse("2020-03-10 10:06:45.352937+00:00")
            nc349.updated_at = isoparse("2020-03-10 10:06:45.352937+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c438, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Pierre",
            last_name="Arricot",
            email="p.arricot@agglo-villefranche.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Pierre",
                'last_name':"Arricot",
                'email':"p.arricot@agglo-villefranche.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 69 08 66",
                'mobile_phone':"06 87 82 34 50",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c438.referents.add(alte_user)
            
        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c438.tags.add(t38)
                        
        if contact_created:
            nc341 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c438,
                note = """Faire complément rapport.""",
                pinned = False,
                created_at = isoparse("2020-02-25 14:36:15.485230+00:00"),
                updated_at = isoparse("2020-02-25 14:36:15.485230+00:00"),
                # tags,
                # reminder
            )

            rnc341 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc341,
                linked_object_contactable=c438,
                done=True,
        
                            date=isoparse("2020-02-27"),
                        
            # persons
            )
            rnc341.persons.add(alte_user)
            nc341.created_at = isoparse("2020-02-25 14:36:15.485230+00:00")
            nc341.updated_at = isoparse("2020-02-25 14:36:15.485230+00:00")
        
        if contact_created:
            nc338 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c438,
                note = """Faire rapport thermo""",
                pinned = False,
                created_at = isoparse("2020-01-24 09:07:37.732896+00:00"),
                updated_at = isoparse("2020-01-24 09:07:37.732896+00:00"),
                # tags,
                # reminder
            )

            rnc338 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc338,
                linked_object_contactable=c438,
                done=True,
        
                            date=isoparse("2020-02-11"),
                        
            # persons
            )
            rnc338.persons.add(alte_user)
            nc338.created_at = isoparse("2020-01-24 09:07:37.732896+00:00")
            nc338.updated_at = isoparse("2020-01-24 09:07:37.732896+00:00")
        
        if contact_created:
            nc329 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c438,
                note = """Préparer thermographie""",
                pinned = False,
                created_at = isoparse("2019-12-17 11:47:21.658328+00:00"),
                updated_at = isoparse("2019-12-17 11:47:21.658328+00:00"),
                # tags,
                # reminder
            )

            rnc329 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc329,
                linked_object_contactable=c438,
                done=True,
        
                            date=isoparse("2020-01-20"),
                        
            # persons
            )
            rnc329.persons.add(alte_user)
            nc329.created_at = isoparse("2019-12-17 11:47:21.658328+00:00")
            nc329.updated_at = isoparse("2019-12-17 11:47:21.658328+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c436, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Aurélie",
            last_name="Ghirardi",
            email="a.ghirardi@cc-pierresdorees.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Aurélie",
                'last_name':"Ghirardi",
                'email':"a.ghirardi@cc-pierresdorees.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 67 95 02",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c436.referents.add(alte_user)
            
        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c436.tags.add(t39)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c435, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Nicolas",
            last_name="Spinnler",
            email="nspinnler@villefranche.net",
            defaults={
                'owning_group':alte_group,
                'first_name':"Nicolas",
                'last_name':"Spinnler",
                'email':"nspinnler@villefranche.net",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 62 60 71",
                'mobile_phone':"06 64 20 47 46",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c435.referents.add(alte_user)
            
        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c435.tags.add(t38)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c423, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Stéphane",
            last_name="Matray",
            email="rst@mairie-jons.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Stéphane",
                'last_name':"Matray",
                'email':"rst@mairie-jons.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"07 89 81 41 06",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c423.referents.add(alte_user)
            
        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c423.tags.add(t38)
                        
        if contact_created:
            nc317 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c423,
                note = """Le rapport lui a t il été utile. ?""",
                pinned = False,
                created_at = isoparse("2019-10-25 12:15:42.643487+00:00"),
                updated_at = isoparse("2019-10-25 12:15:42.643487+00:00"),
                # tags,
                # reminder
            )

            rnc317 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc317,
                linked_object_contactable=c423,
                done=True,
        
                            date=isoparse("2019-11-18"),
                        
            # persons
            )
            rnc317.persons.add(alte_user)
            nc317.created_at = isoparse("2019-10-25 12:15:42.643487+00:00")
            nc317.updated_at = isoparse("2019-10-25 12:15:42.643487+00:00")
        
        if contact_created:
            nc308 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c423,
                note = """A t il envoyé les documents pour le rapport ?""",
                pinned = False,
                created_at = isoparse("2019-10-11 09:31:14.968075+00:00"),
                updated_at = isoparse("2019-10-11 09:31:14.968075+00:00"),
                # tags,
                # reminder
            )

            rnc308 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc308,
                linked_object_contactable=c423,
                done=True,
        
                            date=isoparse("2019-10-22"),
                        
            # persons
            )
            rnc308.persons.add(alte_user)
            nc308.created_at = isoparse("2019-10-11 09:31:14.968075+00:00")
            nc308.updated_at = isoparse("2019-10-11 09:31:14.968075+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c418, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Gaëlle",
            last_name="Charmette",
            email="",
            defaults={
                'owning_group':alte_group,
                'first_name':"Gaëlle",
                'last_name':"Charmette",
                'email':"",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 89 50 65",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c418.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c418.tags.add(t11)
                        
        if contact_created:
            nc303 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c418,
                note = """Préparer visite Madame Charmette - Maison de retraite COR""",
                pinned = False,
                created_at = isoparse("2019-09-24 10:31:35.579808+00:00"),
                updated_at = isoparse("2019-09-24 10:31:35.579808+00:00"),
                # tags,
                # reminder
            )

            rnc303 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc303,
                linked_object_contactable=c418,
                done=True,
        
                            date=isoparse("2019-10-02"),
                        
            # persons
            )
            rnc303.persons.add(alte_user)
            nc303.created_at = isoparse("2019-09-24 10:31:35.579808+00:00")
            nc303.updated_at = isoparse("2019-09-24 10:31:35.579808+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c402, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Stéphane",
            last_name="Martin",
            email="stephane.martin@valleedazergues.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Stéphane",
                'last_name':"Martin",
                'email':"stephane.martin@valleedazergues.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 72 77 98 68",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c402.referents.add(alte_user)
            
        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c402.tags.add(t38)
                        
        if contact_created:
            nc285 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c402,
                note = """A t il renvoyé les infos pour le PV ?""",
                pinned = False,
                created_at = isoparse("2019-08-30 08:34:08.973753+00:00"),
                updated_at = isoparse("2019-08-30 08:34:08.973753+00:00"),
                # tags,
                # reminder
            )

            rnc285 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc285,
                linked_object_contactable=c402,
                done=True,
        
                            date=isoparse("2019-09-09"),
                        
            # persons
            )
            rnc285.persons.add(alte_user)
            nc285.created_at = isoparse("2019-08-30 08:34:08.973753+00:00")
            nc285.updated_at = isoparse("2019-08-30 08:34:08.973753+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c395, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Sylvain",
            last_name="Chatard",
            email="sylvain.chatard@thizylesbourgs.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Sylvain",
                'last_name':"Chatard",
                'email':"sylvain.chatard@thizylesbourgs.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 64 65 90",
                'mobile_phone':"06 60 53 12 74",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c395.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c395.tags.add(t11)
                        
        if contact_created:
            nc270 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c395,
                note = """contacter pour résidence""",
                pinned = False,
                created_at = isoparse("2019-08-19 13:05:13.191122+00:00"),
                updated_at = isoparse("2019-08-19 13:05:13.191122+00:00"),
                # tags,
                # reminder
            )

            rnc270 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc270,
                linked_object_contactable=c395,
                done=True,
        
                            date=isoparse("2019-08-27"),
                        
            # persons
            )
            rnc270.persons.add(alte_user)
            nc270.created_at = isoparse("2019-08-19 13:05:13.191122+00:00")
            nc270.updated_at = isoparse("2019-08-19 13:05:13.191122+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c394, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Jean-Pierre",
            last_name="Goudard",
            email="jean-pierre.goudard@c-or.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Jean-Pierre",
                'last_name':"Goudard",
                'email':"jean-pierre.goudard@c-or.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 50 64 15 48",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c394.referents.add(alte_user)
            
        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c394.tags.add(t9)
                        
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c394.tags.add(t11)
                        
        if contact_created:
            nc287 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c394,
                note = """Voir avec lui quand faire passer en bureau le projet de chaufferie bois à Grandris""",
                pinned = False,
                created_at = isoparse("2019-09-12 12:50:09.286276+00:00"),
                updated_at = isoparse("2019-09-12 12:50:09.286276+00:00"),
                # tags,
                # reminder
            )

            rnc287 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc287,
                linked_object_contactable=c394,
                done=True,
        
                            date=isoparse("2019-10-15"),
                        
            # persons
            )
            rnc287.persons.add(alte_user)
            nc287.created_at = isoparse("2019-09-12 12:50:09.286276+00:00")
            nc287.updated_at = isoparse("2019-09-12 12:50:09.286276+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c390, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Laurent",
            last_name="Granger",
            email="",
            defaults={
                'owning_group':alte_group,
                'first_name':"Laurent",
                'last_name':"Granger",
                'email':"",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 77 19 89 56",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c390.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c390.tags.add(t11)
                        
        if contact_created:
            nc265 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c390,
                note = """Prendre des nouvelles auprès de Yann avant son rendez vous du 20 et relancer début septembre.""",
                pinned = False,
                created_at = isoparse("2019-08-12 13:34:53.265196+00:00"),
                updated_at = isoparse("2019-08-12 13:34:53.265196+00:00"),
                # tags,
                # reminder
            )

            rnc265 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc265,
                linked_object_contactable=c390,
                done=True,
        
                            date=isoparse("2019-09-04"),
                        
            # persons
            )
            rnc265.persons.add(alte_user)
            nc265.created_at = isoparse("2019-08-12 13:34:53.265196+00:00")
            nc265.updated_at = isoparse("2019-08-12 13:34:53.265196+00:00")
        

        address = "440 route de l'azergues  ".strip() + ",  Chambost Allières"
        if address == "  ,  ":
            address = ""

        c389, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Stéphane",
            last_name="Martin",
            email="",
            defaults={
                'owning_group':alte_group,
                'first_name':"Stéphane",
                'last_name':"Martin",
                'email':"",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Chambost Allières",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 72 77 98 68",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c389.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c389.tags.add(t11)
                        

        address = "  ".strip() + ",  Grandris"
        if address == "  ,  ":
            address = ""

        c388, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Pascal",
            last_name="Girin",
            email="famillegirin@orange.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Pascal",
                'last_name':"Girin",
                'email':"famillegirin@orange.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Grandris",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0610454887",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c388.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c388.tags.add(t11)
                        
        if contact_created:
            nc356 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c388,
                note = """Relancer pour voir si son projet va se faire ou pas.""",
                pinned = False,
                created_at = isoparse("2020-08-19 10:29:34.567835+00:00"),
                updated_at = isoparse("2020-08-19 10:29:34.567835+00:00"),
                # tags,
                # reminder
            )

            rnc356 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc356,
                linked_object_contactable=c388,
                done=True,
        
                            date=isoparse("2020-09-01"),
                        
            # persons
            )
            rnc356.persons.add(alte_user)
            nc356.created_at = isoparse("2020-08-19 10:29:34.567835+00:00")
            nc356.updated_at = isoparse("2020-08-19 10:29:34.567835+00:00")
        
        if contact_created:
            nc261 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c388,
                note = """A t il fini les travaux ?""",
                pinned = False,
                created_at = isoparse("2019-08-02 12:38:33.480633+00:00"),
                updated_at = isoparse("2019-08-02 12:38:33.480633+00:00"),
                # tags,
                # reminder
            )

            rnc261 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc261,
                linked_object_contactable=c388,
                done=True,
        
                            date=isoparse("2020-05-18"),
                        
            # persons
            )
            rnc261.persons.add(alte_user)
            nc261.created_at = isoparse("2019-08-02 12:38:33.480633+00:00")
            nc261.updated_at = isoparse("2019-08-02 12:38:33.480633+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c387, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Gérard",
            last_name="Vandamme",
            email="gerard.azedpack@gmail.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Gérard",
                'last_name':"Vandamme",
                'email':"gerard.azedpack@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 07 99 53 11",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c387.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c387.tags.add(t11)
                        
        if contact_created:
            nc264 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c387,
                note = """contacter ses contacts""",
                pinned = False,
                created_at = isoparse("2019-08-02 13:11:10.201171+00:00"),
                updated_at = isoparse("2019-08-02 13:11:10.201171+00:00"),
                # tags,
                # reminder
            )

            rnc264 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc264,
                linked_object_contactable=c387,
                done=True,
        
                            date=isoparse("2019-08-07"),
                        
            # persons
            )
            rnc264.persons.add(alte_user)
            nc264.created_at = isoparse("2019-08-02 13:11:10.201171+00:00")
            nc264.updated_at = isoparse("2019-08-02 13:11:10.201171+00:00")
        
        if contact_created:
            nc251 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c387,
                note = """Faire AO pour le 15 aout""",
                pinned = False,
                created_at = isoparse("2019-07-23 12:47:51.226421+00:00"),
                updated_at = isoparse("2019-07-23 12:47:51.226421+00:00"),
                # tags,
                # reminder
            )

            rnc251 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc251,
                linked_object_contactable=c387,
                done=True,
        
                            date=isoparse("2019-07-31"),
                        
            # persons
            )
            rnc251.persons.add(alte_user)
            nc251.created_at = isoparse("2019-07-23 12:47:51.226421+00:00")
            nc251.updated_at = isoparse("2019-07-23 12:47:51.226421+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c385, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Gilles",
            last_name="Chauvin",
            email="rst@mairie-colombiersaugnieu.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Gilles",
                'last_name':"Chauvin",
                'email':"rst@mairie-colombiersaugnieu.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"07 89 86 38 96",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c385.referents.add(alte_user)
            
        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c385.tags.add(t38)
                        
        if contact_created:
            nc347 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c385,
                note = """Relance concernant les projets bâtiments et PV""",
                pinned = False,
                created_at = isoparse("2020-03-09 16:52:05.215135+00:00"),
                updated_at = isoparse("2020-03-09 16:52:05.215135+00:00"),
                # tags,
                # reminder
            )

            rnc347 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc347,
                linked_object_contactable=c385,
                done=True,
        
                            date=isoparse("2020-09-14"),
                        
            # persons
            )
            rnc347.persons.add(alte_user)
            nc347.created_at = isoparse("2020-03-09 16:52:05.215135+00:00")
            nc347.updated_at = isoparse("2020-03-09 16:52:05.215135+00:00")
        
        if contact_created:
            nc327 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c385,
                note = """Des retours de sa part ?""",
                pinned = False,
                created_at = isoparse("2019-11-20 14:06:42.067418+00:00"),
                updated_at = isoparse("2019-11-20 14:06:42.067418+00:00"),
                # tags,
                # reminder
            )

            rnc327 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc327,
                linked_object_contactable=c385,
                done=True,
        
                            date=isoparse("2020-01-07"),
                        
            # persons
            )
            rnc327.persons.add(alte_user)
            nc327.created_at = isoparse("2019-11-20 14:06:42.067418+00:00")
            nc327.updated_at = isoparse("2019-11-20 14:06:42.067418+00:00")
        
        if contact_created:
            nc263 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c385,
                note = """Préparer la trame pour les rapports.""",
                pinned = False,
                created_at = isoparse("2019-08-02 13:05:46.236425+00:00"),
                updated_at = isoparse("2019-08-02 13:05:46.236425+00:00"),
                # tags,
                # reminder
            )

            rnc263 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc263,
                linked_object_contactable=c385,
                done=True,
        
                            date=isoparse("2019-08-30"),
                        
            # persons
            )
            rnc263.persons.add(alte_user)
            nc263.created_at = isoparse("2019-08-02 13:05:46.236425+00:00")
            nc263.updated_at = isoparse("2019-08-02 13:05:46.236425+00:00")
        
        if contact_created:
            nc262 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c385,
                note = """Contacter pour avoir les factures énergétiques des bâtiments.""",
                pinned = False,
                created_at = isoparse("2019-08-02 12:44:30.970381+00:00"),
                updated_at = isoparse("2019-08-02 12:44:30.970381+00:00"),
                # tags,
                # reminder
            )

            rnc262 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc262,
                linked_object_contactable=c385,
                done=True,
        
                            date=isoparse("2019-09-16"),
                        
            # persons
            )
            rnc262.persons.add(alte_user)
            nc262.created_at = isoparse("2019-08-02 12:44:30.970381+00:00")
            nc262.updated_at = isoparse("2019-08-02 12:44:30.970381+00:00")
        
        if contact_created:
            nc244 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c385,
                note = """Relance s'il n'a pas envoyé les documents pour études.""",
                pinned = False,
                created_at = isoparse("2019-07-23 09:39:03.485549+00:00"),
                updated_at = isoparse("2019-07-23 09:39:03.485549+00:00"),
                # tags,
                # reminder
            )

            rnc244 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc244,
                linked_object_contactable=c385,
                done=True,
        
                            date=isoparse("2019-07-29"),
                        
            # persons
            )
            rnc244.persons.add(alte_user)
            nc244.created_at = isoparse("2019-07-23 09:39:03.485549+00:00")
            nc244.updated_at = isoparse("2019-07-23 09:39:03.485549+00:00")
        

        address = "  ".strip() + ", 38640 Villemoirieu"
        if address == "  ,  ":
            address = ""

        c383, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Lionel",
            last_name="Pauletto",
            email="lionel.pauletto@sbthermique.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Lionel",
                'last_name':"Pauletto",
                'email':"lionel.pauletto@sbthermique.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Villemoirieu",
                'zipcode':"38640",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"",
                'mobile_phone':"06 14 41 92 69",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c383.referents.add(alte_user)
            
        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c383.tags.add(t9)
                        
        if contact_created:
            nc250 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c383,
                note = """Rappeler si pas de nouvelles.""",
                pinned = False,
                created_at = isoparse("2019-07-23 12:12:36.061247+00:00"),
                updated_at = isoparse("2019-07-23 12:12:36.061247+00:00"),
                # tags,
                # reminder
            )

            rnc250 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc250,
                linked_object_contactable=c383,
                done=True,
        
                            date=isoparse("2019-08-05"),
                        
            # persons
            )
            rnc250.persons.add(alte_user)
            nc250.created_at = isoparse("2019-07-23 12:12:36.061247+00:00")
            nc250.updated_at = isoparse("2019-07-23 12:12:36.061247+00:00")
        

        address = "40 rue de norvège  ".strip() + ", 69125 Colombier Saugnieu"
        if address == "  ,  ":
            address = ""

        c382, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Sophie",
            last_name="Bal",
            email="sophie.bal@ccel.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Sophie",
                'last_name':"Bal",
                'email':"sophie.bal@ccel.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"Colombier Saugnieu",
                'zipcode':"69125",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"04 72 79 79 13",
                'mobile_phone':"06 98 76 36 64",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c382.referents.add(alte_user)
            
        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c382.tags.add(t39)
                        
        if contact_created:
            nc334 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c382,
                note = """Contacter pour contact DGS etc.""",
                pinned = False,
                created_at = isoparse("2019-12-23 09:59:23.907639+00:00"),
                updated_at = isoparse("2019-12-23 09:59:23.907639+00:00"),
                # tags,
                # reminder
            )

            rnc334 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc334,
                linked_object_contactable=c382,
                done=True,
        
                            date=isoparse("2020-01-15"),
                        
            # persons
            )
            rnc334.persons.add(alte_user)
            nc334.created_at = isoparse("2019-12-23 09:59:23.907639+00:00")
            nc334.updated_at = isoparse("2019-12-23 09:59:23.907639+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c381, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="",
            last_name="Brunaud",
            email="brunaud@netcourrier.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"",
                'last_name':"Brunaud",
                'email':"brunaud@netcourrier.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 59 39 46 86",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c381.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c381.tags.add(t11)
                        
        if contact_created:
            nc256 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c381,
                note = """Relancer si pas de nouvelles""",
                pinned = False,
                created_at = isoparse("2019-08-02 09:14:32.310732+00:00"),
                updated_at = isoparse("2019-08-02 09:14:32.310732+00:00"),
                # tags,
                # reminder
            )

            rnc256 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc256,
                linked_object_contactable=c381,
                done=True,
        
                            date=isoparse("2019-10-01"),
                        
            # persons
            )
            rnc256.persons.add(alte_user)
            nc256.created_at = isoparse("2019-08-02 09:14:32.310732+00:00")
            nc256.updated_at = isoparse("2019-08-02 09:14:32.310732+00:00")
        
        if contact_created:
            nc242 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c381,
                note = """Faire rapport comparatif gaz-bois.

Se référer aux factures.""",
                pinned = False,
                created_at = isoparse("2019-06-13 14:17:47.896467+00:00"),
                updated_at = isoparse("2019-06-13 14:17:47.896467+00:00"),
                # tags,
                # reminder
            )

            rnc242 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc242,
                linked_object_contactable=c381,
                done=True,
        
                            date=isoparse("2019-07-15"),
                        
            # persons
            )
            rnc242.persons.add(alte_user)
            nc242.created_at = isoparse("2019-06-13 14:17:47.896467+00:00")
            nc242.updated_at = isoparse("2019-06-13 14:17:47.896467+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c380, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Xavier",
            last_name="Lequarré",
            email="xavier@hridaya-yoga.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Xavier",
                'last_name':"Lequarré",
                'email':"xavier@hridaya-yoga.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"00 41 76 386 0 99",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c380.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c380.tags.add(t11)
                        
        if contact_created:
            nc240 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c380,
                note = """Alors des nouvelles concernant les devis ?Bureau de controle ? etc.""",
                pinned = False,
                created_at = isoparse("2019-06-13 13:48:13.542532+00:00"),
                updated_at = isoparse("2019-06-13 13:48:13.542532+00:00"),
                # tags,
                # reminder
            )

            rnc240 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc240,
                linked_object_contactable=c380,
                done=True,
        
                            date=isoparse("2019-07-09"),
                        
            # persons
            )
            rnc240.persons.add(alte_user)
            nc240.created_at = isoparse("2019-06-13 13:48:13.542532+00:00")
            nc240.updated_at = isoparse("2019-06-13 13:48:13.542532+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c379, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Clément",
            last_name="Daval",
            email="clement.daval@ingenef.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Clément",
                'last_name':"Daval",
                'email':"clement.daval@ingenef.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"07 85 09 54 73",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c379.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c379.tags.add(t11)
                        
        if contact_created:
            nc252 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c379,
                note = """L'étude de devrait plus trop tarder =)""",
                pinned = False,
                created_at = isoparse("2019-07-23 15:33:13.907147+00:00"),
                updated_at = isoparse("2019-07-23 15:33:13.907147+00:00"),
                # tags,
                # reminder
            )

            rnc252 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc252,
                linked_object_contactable=c379,
                done=True,
        
                            date=isoparse("2019-08-19"),
                        
            # persons
            )
            rnc252.persons.add(alte_user)
            nc252.created_at = isoparse("2019-07-23 15:33:13.907147+00:00")
            nc252.updated_at = isoparse("2019-07-23 15:33:13.907147+00:00")
        
        if contact_created:
            nc236 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c379,
                note = """Où en est l'étude ?""",
                pinned = False,
                created_at = isoparse("2019-06-03 14:48:17.182426+00:00"),
                updated_at = isoparse("2019-06-03 14:48:17.182426+00:00"),
                # tags,
                # reminder
            )

            rnc236 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc236,
                linked_object_contactable=c379,
                done=True,
        
                            date=isoparse("2019-07-10"),
                        
            # persons
            )
            rnc236.persons.add(alte_user)
            nc236.created_at = isoparse("2019-06-03 14:48:17.182426+00:00")
            nc236.updated_at = isoparse("2019-06-03 14:48:17.182426+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c376, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Vicky",
            last_name="Valencin",
            email="valencin.secat@orange.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Vicky",
                'last_name':"Valencin",
                'email':"valencin.secat@orange.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 26 80 10",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c376.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c376.tags.add(t11)
                        
        if contact_created:
            nc326 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c376,
                note = """Etude finie ?""",
                pinned = False,
                created_at = isoparse("2019-11-20 14:05:03.183728+00:00"),
                updated_at = isoparse("2019-11-20 14:05:03.183728+00:00"),
                # tags,
                # reminder
            )

            rnc326 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc326,
                linked_object_contactable=c376,
                done=True,
        
                            date=isoparse("2019-11-25"),
                        
            # persons
            )
            rnc326.persons.add(alte_user)
            nc326.created_at = isoparse("2019-11-20 14:05:03.183728+00:00")
            nc326.updated_at = isoparse("2019-11-20 14:05:03.183728+00:00")
        
        if contact_created:
            nc325 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c376,
                note = """relancer pour demande BET""",
                pinned = False,
                created_at = isoparse("2019-11-12 11:32:07.983841+00:00"),
                updated_at = isoparse("2019-11-12 11:32:07.983841+00:00"),
                # tags,
                # reminder
            )

            rnc325 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc325,
                linked_object_contactable=c376,
                done=True,
        
                            date=isoparse("2019-11-13"),
                        
            # persons
            )
            rnc325.persons.add(alte_user)
            nc325.created_at = isoparse("2019-11-12 11:32:07.983841+00:00")
            nc325.updated_at = isoparse("2019-11-12 11:32:07.983841+00:00")
        
        if contact_created:
            nc310 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c376,
                note = """Retour rdv BET?""",
                pinned = False,
                created_at = isoparse("2019-10-11 10:43:14.126858+00:00"),
                updated_at = isoparse("2019-10-11 10:43:14.126858+00:00"),
                # tags,
                # reminder
            )

            rnc310 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc310,
                linked_object_contactable=c376,
                done=True,
        
                            date=isoparse("2019-10-22"),
                        
            # persons
            )
            rnc310.persons.add(alte_user)
            nc310.created_at = isoparse("2019-10-11 10:43:14.126858+00:00")
            nc310.updated_at = isoparse("2019-10-11 10:43:14.126858+00:00")
        
        if contact_created:
            nc260 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c376,
                note = """attendre retour de claire pour valider un devis reçu.



Devis envoyé à : apesbat, héliasol, senova, sf2e,helair""",
                pinned = False,
                created_at = isoparse("2019-08-02 09:19:44.026969+00:00"),
                updated_at = isoparse("2019-08-02 09:19:44.026969+00:00"),
                # tags,
                # reminder
            )

            rnc260 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc260,
                linked_object_contactable=c376,
                done=True,
        
                            date=isoparse("2019-09-03"),
                        
            # persons
            )
            rnc260.persons.add(alte_user)
            nc260.created_at = isoparse("2019-08-02 09:19:44.026969+00:00")
            nc260.updated_at = isoparse("2019-08-02 09:19:44.026969+00:00")
        
        if contact_created:
            nc253 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c376,
                note = """Des nouvelles et feu vert pour réaliser des devis aurpès des BE ?""",
                pinned = False,
                created_at = isoparse("2019-07-23 15:47:10.742776+00:00"),
                updated_at = isoparse("2019-07-23 15:47:10.742776+00:00"),
                # tags,
                # reminder
            )

            rnc253 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc253,
                linked_object_contactable=c376,
                done=True,
        
                            date=isoparse("2019-07-25"),
                        
            # persons
            )
            rnc253.persons.add(alte_user)
            nc253.created_at = isoparse("2019-07-23 15:47:10.742776+00:00")
            nc253.updated_at = isoparse("2019-07-23 15:47:10.742776+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c375, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Laurent",
            last_name="Dumouchel",
            email="laurent.dumouchel@ccel.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Laurent",
                'last_name':"Dumouchel",
                'email':"laurent.dumouchel@ccel.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 72 79 79 11",
                'mobile_phone':"06 98 25 33 96",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c375.referents.add(alte_user)
            
        if contact_created:
            t39, created = Tag.objects.get_or_create(
                name="ALTE 69",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c375.tags.add(t39)
                        
        if contact_created:
            nc353 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c375,
                note = """parler des AO PV et du recensement !""",
                pinned = False,
                created_at = isoparse("2020-04-14 13:28:51.114189+00:00"),
                updated_at = isoparse("2020-04-14 13:28:51.114189+00:00"),
                # tags,
                # reminder
            )

            rnc353 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc353,
                linked_object_contactable=c375,
                done=True,
        
                            date=isoparse("2020-06-01"),
                        
            # persons
            )
            rnc353.persons.add(alte_user)
            nc353.created_at = isoparse("2020-04-14 13:28:51.114189+00:00")
            nc353.updated_at = isoparse("2020-04-14 13:28:51.114189+00:00")
        
        if contact_created:
            nc336 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c375,
                note = """Lui faire part du fait que l'on a une dizaine de jours supplémentaires. 



Lui faire un retour des réunions colombier et saint laurent.""",
                pinned = False,
                created_at = isoparse("2019-12-23 10:18:32.783759+00:00"),
                updated_at = isoparse("2019-12-23 10:18:32.783759+00:00"),
                # tags,
                # reminder
            )

            rnc336 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc336,
                linked_object_contactable=c375,
                done=True,
        
                            date=isoparse("2020-01-20"),
                        
            # persons
            )
            rnc336.persons.add(alte_user)
            nc336.created_at = isoparse("2019-12-23 10:18:32.783759+00:00")
            nc336.updated_at = isoparse("2019-12-23 10:18:32.783759+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c374, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Pierre",
            last_name="Marmonier",
            email="pierre-marmonier@mairie-colombiersaugnieu.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Pierre",
                'last_name':"Marmonier",
                'email':"pierre-marmonier@mairie-colombiersaugnieu.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 78 32 80 55",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c374.referents.add(alte_user)
            
        if contact_created:
            t38, created = Tag.objects.get_or_create(
                name="ALTE 69 - Autre MO",
                owning_group=alte_group,
                defaults={
                    'name': "ALTE 69 - Autre MO",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c374.tags.add(t38)
                        
        if contact_created:
            nc266 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c374,
                note = """Relancer si pas de nouvelles pour la lettre""",
                pinned = False,
                created_at = isoparse("2019-08-13 12:51:40.679269+00:00"),
                updated_at = isoparse("2019-08-13 12:51:40.679269+00:00"),
                # tags,
                # reminder
            )

            rnc266 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc266,
                linked_object_contactable=c374,
                done=True,
        
                            date=isoparse("2019-08-20"),
                        
            # persons
            )
            rnc266.persons.add(alte_user)
            nc266.created_at = isoparse("2019-08-13 12:51:40.679269+00:00")
            nc266.updated_at = isoparse("2019-08-13 12:51:40.679269+00:00")
        

        address = "  ".strip() + ", 69 170 Tarare"
        if address == "  ,  ":
            address = ""

        c373, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Guillaume",
            last_name="Corbin",
            email="g.corbin@solemat.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Guillaume",
                'last_name':"Corbin",
                'email':"g.corbin@solemat.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Tarare",
                'zipcode':"69 170",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 78 28 85 71",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c373.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c373.tags.add(t11)
                        
        if contact_created:
            nc233 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c373,
                note = """Prendre des nouvelles de son projet de construction (bâtiment 1000 m2 aux olmes). 

Fabrication de machines agricoles (pas de de besoin d'ECS)

Bureau 150 m2 environ



envisage une construction assez écolo (DF) il est sensibilisé.""",
                pinned = False,
                created_at = isoparse("2019-05-29 14:24:23.062136+00:00"),
                updated_at = isoparse("2019-05-29 14:24:23.062136+00:00"),
                # tags,
                # reminder
            )

            rnc233 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc233,
                linked_object_contactable=c373,
                done=True,
        
                            date=isoparse("2019-09-17"),
                        
            # persons
            )
            rnc233.persons.add(alte_user)
            nc233.created_at = isoparse("2019-05-29 14:24:23.062136+00:00")
            nc233.updated_at = isoparse("2019-05-29 14:24:23.062136+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c371, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Alexandre",
            last_name="Gratas",
            email="alexandre.gratas@hargassner-france.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Alexandre",
                'last_name':"Gratas",
                'email':"alexandre.gratas@hargassner-france.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 10 41 80 39",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c371.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c371.tags.add(t11)
                        
        if contact_created:
            nc224 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c371,
                note = """Recontacter si pas rappelé pour hrydia""",
                pinned = False,
                created_at = isoparse("2019-04-24 08:53:48.590530+00:00"),
                updated_at = isoparse("2019-04-24 08:53:48.590530+00:00"),
                # tags,
                # reminder
            )

            rnc224 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc224,
                linked_object_contactable=c371,
                done=True,
        
                            date=isoparse("2019-04-29"),
                        
            # persons
            )
            rnc224.persons.add(alte_user)
            nc224.created_at = isoparse("2019-04-24 08:53:48.590530+00:00")
            nc224.updated_at = isoparse("2019-04-24 08:53:48.590530+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c369, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Jean-Bernard",
            last_name="Amphoux",
            email="jean-bernard.amphoux@hargassner-france.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Jean-Bernard",
                'last_name':"Amphoux",
                'email':"jean-bernard.amphoux@hargassner-france.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 22 16 07 82",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c369.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c369.tags.add(t11)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c334, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Thibault",
            last_name="Laurent",
            email="t.laurent@alliade.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Thibault",
                'last_name':"Laurent",
                'email':"t.laurent@alliade.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 98 43 48 94",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c334.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c334.tags.add(t11)
                        
        if contact_created:
            nc333 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c334,
                note = """Nouvelles travaux""",
                pinned = False,
                created_at = isoparse("2019-12-23 08:59:01.746760+00:00"),
                updated_at = isoparse("2019-12-23 08:59:01.746760+00:00"),
                # tags,
                # reminder
            )

            rnc333 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc333,
                linked_object_contactable=c334,
                done=True,
        
                            date=isoparse("2020-05-18"),
                        
            # persons
            )
            rnc333.persons.add(alte_user)
            nc333.created_at = isoparse("2019-12-23 08:59:01.746760+00:00")
            nc333.updated_at = isoparse("2019-12-23 08:59:01.746760+00:00")
        
        if contact_created:
            nc234 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c334,
                note = """Dossier de subvention arrivé au sein de ma boite?""",
                pinned = False,
                created_at = isoparse("2019-05-29 15:12:34.473877+00:00"),
                updated_at = isoparse("2019-05-29 15:12:34.473877+00:00"),
                # tags,
                # reminder
            )

            rnc234 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc234,
                linked_object_contactable=c334,
                done=True,
        
                            date=isoparse("2019-09-06"),
                        
            # persons
            )
            rnc234.persons.add(alte_user)
            nc234.created_at = isoparse("2019-05-29 15:12:34.473877+00:00")
            nc234.updated_at = isoparse("2019-05-29 15:12:34.473877+00:00")
        
        if contact_created:
            nc232 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c334,
                note = """Relancer si pas de nouvelles""",
                pinned = False,
                created_at = isoparse("2019-05-23 12:29:11.627418+00:00"),
                updated_at = isoparse("2019-05-23 12:29:11.627418+00:00"),
                # tags,
                # reminder
            )

            rnc232 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc232,
                linked_object_contactable=c334,
                done=True,
        
                            date=isoparse("2019-07-10"),
                        
            # persons
            )
            rnc232.persons.add(alte_user)
            nc232.created_at = isoparse("2019-05-23 12:29:11.627418+00:00")
            nc232.updated_at = isoparse("2019-05-23 12:29:11.627418+00:00")
        
        if contact_created:
            nc220 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c334,
                note = """A t il envoyé les dossiers divers et variés ?""",
                pinned = False,
                created_at = isoparse("2019-04-24 08:26:57.184435+00:00"),
                updated_at = isoparse("2019-04-24 08:26:57.184435+00:00"),
                # tags,
                # reminder
            )

            rnc220 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc220,
                linked_object_contactable=c334,
                done=True,
        
                            date=isoparse("2019-05-22"),
                        
            # persons
            )
            rnc220.persons.add(alte_user)
            nc220.created_at = isoparse("2019-04-24 08:26:57.184435+00:00")
            nc220.updated_at = isoparse("2019-04-24 08:26:57.184435+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c333, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Adrien",
            last_name="Boulez",
            email="a.boulez@alliade.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Adrien",
                'last_name':"Boulez",
                'email':"a.boulez@alliade.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 62 90 22 85",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c333.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c333.tags.add(t11)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c332, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Céline",
            last_name="Pizzimenti",
            email="c.pizzimenti@lyon-metropole.cci.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Céline",
                'last_name':"Pizzimenti",
                'email':"c.pizzimenti@lyon-metropole.cci.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 77 44 54 89",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c332.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c332.tags.add(t11)
                        
        if contact_created:
            nc217 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c332,
                note = """Projet ST ?""",
                pinned = False,
                created_at = isoparse("2019-04-11 08:20:58.926461+00:00"),
                updated_at = isoparse("2019-04-11 08:20:58.926461+00:00"),
                # tags,
                # reminder
            )

            rnc217 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc217,
                linked_object_contactable=c332,
                done=True,
        
                            date=isoparse("2019-05-13"),
                        
            # persons
            )
            rnc217.persons.add(alte_user)
            nc217.created_at = isoparse("2019-04-11 08:20:58.926461+00:00")
            nc217.updated_at = isoparse("2019-04-11 08:20:58.926461+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c325, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Philippe",
            last_name="Bonnet",
            email="",
            defaults={
                'owning_group':alte_group,
                'first_name':"Philippe",
                'last_name':"Bonnet",
                'email':"",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 75 09 23 79",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c325.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c325.tags.add(t11)
                        
        if contact_created:
            nc205 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c325,
                note = """Relancer pour avoir des infos sur son projet !!""",
                pinned = False,
                created_at = isoparse("2019-03-25 10:33:47.646537+00:00"),
                updated_at = isoparse("2019-03-25 10:33:47.646537+00:00"),
                # tags,
                # reminder
            )

            rnc205 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc205,
                linked_object_contactable=c325,
                done=True,
        
                            date=isoparse("2019-04-03"),
                        
            # persons
            )
            rnc205.persons.add(alte_user)
            nc205.created_at = isoparse("2019-03-25 10:33:47.646537+00:00")
            nc205.updated_at = isoparse("2019-03-25 10:33:47.646537+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c319, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Christian",
            last_name="Lalbertier",
            email="christian.lalbertier@wanadoo.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Christian",
                'last_name':"Lalbertier",
                'email':"christian.lalbertier@wanadoo.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"06 84 29 41 89",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c319.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c319.tags.add(t11)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c318, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Fabrice",
            last_name="Verdejo",
            email="fabrice.verdejo@rhone.chambagri.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Fabrice",
                'last_name':"Verdejo",
                'email':"fabrice.verdejo@rhone.chambagri.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"0608022820",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c318.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c318.tags.add(t11)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c317, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Philippe",
            last_name="Seuzaret",
            email="tech3@betics.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Philippe",
                'last_name':"Seuzaret",
                'email':"tech3@betics.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 13 55 03 54",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c317.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c317.tags.add(t11)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c303, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Laure",
            last_name="Ballet",
            email="laure.ballet@bmf-conseil.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Laure",
                'last_name':"Ballet",
                'email':"laure.ballet@bmf-conseil.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 76 93 46 51",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c303.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c303.tags.add(t11)
                        
        if contact_created:
            nc357 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c303,
                note = """Nouvelles concernant le projet - DCE ?""",
                pinned = False,
                created_at = isoparse("2020-08-19 10:29:59.346988+00:00"),
                updated_at = isoparse("2020-08-19 10:29:59.346988+00:00"),
                # tags,
                # reminder
            )

            rnc357 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc357,
                linked_object_contactable=c303,
                done=False,
        
                            date=isoparse("2020-11-30"),
                        
            # persons
            )
            rnc357.persons.add(alte_user)
            nc357.created_at = isoparse("2020-08-19 10:29:59.346988+00:00")
            nc357.updated_at = isoparse("2020-08-19 10:29:59.346988+00:00")
        
        if contact_created:
            nc246 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c303,
                note = """Est ce que cette fois on a toutes les infos ? Mettre un peu la pression si pas de nouvelles... Normalement il devrait y avoir du nouveau.""",
                pinned = False,
                created_at = isoparse("2019-07-23 09:48:50.789299+00:00"),
                updated_at = isoparse("2019-07-23 09:48:50.789299+00:00"),
                # tags,
                # reminder
            )

            rnc246 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc246,
                linked_object_contactable=c303,
                done=True,
        
                            date=isoparse("2019-09-09"),
                        
            # persons
            )
            rnc246.persons.add(alte_user)
            nc246.created_at = isoparse("2019-07-23 09:48:50.789299+00:00")
            nc246.updated_at = isoparse("2019-07-23 09:48:50.789299+00:00")
        
        if contact_created:
            nc243 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c303,
                note = """nouvelles maitrise d'oeuvre ?""",
                pinned = False,
                created_at = isoparse("2019-07-10 08:38:42.106560+00:00"),
                updated_at = isoparse("2019-07-10 08:38:42.106560+00:00"),
                # tags,
                # reminder
            )

            rnc243 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc243,
                linked_object_contactable=c303,
                done=True,
        
                            date=isoparse("2019-08-05"),
                        
            # persons
            )
            rnc243.persons.add(alte_user)
            nc243.created_at = isoparse("2019-07-10 08:38:42.106560+00:00")
            nc243.updated_at = isoparse("2019-07-10 08:38:42.106560+00:00")
        
        if contact_created:
            nc238 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c303,
                note = """Nouvelles projet couvant ? Sinon passer un coup de fil...""",
                pinned = False,
                created_at = isoparse("2019-06-03 14:51:41.159928+00:00"),
                updated_at = isoparse("2019-06-03 14:51:41.159928+00:00"),
                # tags,
                # reminder
            )

            rnc238 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc238,
                linked_object_contactable=c303,
                done=True,
        
                            date=isoparse("2019-07-10"),
                        
            # persons
            )
            rnc238.persons.add(alte_user)
            nc238.created_at = isoparse("2019-06-03 14:51:41.159928+00:00")
            nc238.updated_at = isoparse("2019-06-03 14:51:41.159928+00:00")
        
        if contact_created:
            nc221 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c303,
                note = """Relance si pas de nouvelles""",
                pinned = False,
                created_at = isoparse("2019-04-24 08:32:52.255566+00:00"),
                updated_at = isoparse("2019-04-24 08:32:52.255566+00:00"),
                # tags,
                # reminder
            )

            rnc221 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc221,
                linked_object_contactable=c303,
                done=True,
        
                            date=isoparse("2019-05-09"),
                        
            # persons
            )
            rnc221.persons.add(alte_user)
            nc221.created_at = isoparse("2019-04-24 08:32:52.255566+00:00")
            nc221.updated_at = isoparse("2019-04-24 08:32:52.255566+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c302, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Hervé",
            last_name="Jospeh",
            email="herve.jospeh@mfr.asso.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Hervé",
                'last_name':"Jospeh",
                'email':"herve.jospeh@mfr.asso.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 07 99 26 85",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c302.referents.add(alte_user)
            
        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c302.tags.add(t9)
                        
        if contact_created:
            nc218 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c302,
                note = """Avancement projet ?""",
                pinned = False,
                created_at = isoparse("2019-04-11 08:22:32.796636+00:00"),
                updated_at = isoparse("2019-04-11 08:22:32.796636+00:00"),
                # tags,
                # reminder
            )

            rnc218 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc218,
                linked_object_contactable=c302,
                done=True,
        
                            date=isoparse("2019-07-15"),
                        
            # persons
            )
            rnc218.persons.add(alte_user)
            nc218.created_at = isoparse("2019-04-11 08:22:32.796636+00:00")
            nc218.updated_at = isoparse("2019-04-11 08:22:32.796636+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c298, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Emilien",
            last_name="Labrosse",
            email="emilien.labrosse@c-or.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Emilien",
                'last_name':"Labrosse",
                'email':"emilien.labrosse@c-or.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04  74 05 50 96",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c298.referents.add(alte_user)
            
        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c298.tags.add(t9)
                        
        if contact_created:
            nc330 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c298,
                note = """prendre des nouvelles pour les projets. 



Montage des dossiers subventions région.""",
                pinned = False,
                created_at = isoparse("2019-12-23 08:51:08.872687+00:00"),
                updated_at = isoparse("2019-12-23 08:51:08.872687+00:00"),
                # tags,
                # reminder
            )

            rnc330 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc330,
                linked_object_contactable=c298,
                done=True,
        
                            date=isoparse("2020-01-09"),
                        
            # persons
            )
            rnc330.persons.add(alte_user)
            nc330.created_at = isoparse("2019-12-23 08:51:08.872687+00:00")
            nc330.updated_at = isoparse("2019-12-23 08:51:08.872687+00:00")
        
        if contact_created:
            nc245 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c298,
                note = """On lance les dossiers sub Clavaisolles et Valsonnes ?""",
                pinned = False,
                created_at = isoparse("2019-07-23 09:47:46.044082+00:00"),
                updated_at = isoparse("2019-07-23 09:47:46.044082+00:00"),
                # tags,
                # reminder
            )

            rnc245 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc245,
                linked_object_contactable=c298,
                done=True,
        
                            date=isoparse("2019-09-02"),
                        
            # persons
            )
            rnc245.persons.add(alte_user)
            nc245.created_at = isoparse("2019-07-23 09:47:46.044082+00:00")
            nc245.updated_at = isoparse("2019-07-23 09:47:46.044082+00:00")
        
        if contact_created:
            nc239 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c298,
                note = """Check RC.



Claveisolles et Valsonne. 



EEPOS rempli la demande région et COT ?""",
                pinned = False,
                created_at = isoparse("2019-06-13 13:45:32.915511+00:00"),
                updated_at = isoparse("2019-06-13 13:45:32.915511+00:00"),
                # tags,
                # reminder
            )

            rnc239 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc239,
                linked_object_contactable=c298,
                done=True,
        
                            date=isoparse("2019-07-11"),
                        
            # persons
            )
            rnc239.persons.add(alte_user)
            nc239.created_at = isoparse("2019-06-13 13:45:32.915511+00:00")
            nc239.updated_at = isoparse("2019-06-13 13:45:32.915511+00:00")
        
        if contact_created:
            nc229 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c298,
                note = """Point sur l'ensemble des projets RC""",
                pinned = False,
                created_at = isoparse("2019-05-21 13:29:28.811215+00:00"),
                updated_at = isoparse("2019-05-21 13:29:28.811215+00:00"),
                # tags,
                # reminder
            )

            rnc229 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc229,
                linked_object_contactable=c298,
                done=True,
        
                            date=isoparse("2019-06-04"),
                        
            # persons
            )
            rnc229.persons.add(alte_user)
            nc229.created_at = isoparse("2019-05-21 13:29:28.811215+00:00")
            nc229.updated_at = isoparse("2019-05-21 13:29:28.811215+00:00")
        
        if contact_created:
            nc165 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c298,
                note = """demander des nouvelles des AMI et claveisolles.""",
                pinned = False,
                created_at = isoparse("2019-01-15 11:07:24.634134+00:00"),
                updated_at = isoparse("2019-01-15 11:07:24.634134+00:00"),
                # tags,
                # reminder
            )

            rnc165 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc165,
                linked_object_contactable=c298,
                done=True,
        
                            date=isoparse("2019-02-11"),
                        
            # persons
            )
            rnc165.persons.add(alte_user)
            nc165.created_at = isoparse("2019-01-15 11:07:24.634134+00:00")
            nc165.updated_at = isoparse("2019-01-15 11:07:24.634134+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c288, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Hélène",
            last_name="Decouvelaere",
            email="helene.decouvelaere@coopawatt.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Hélène",
                'last_name':"Decouvelaere",
                'email':"helene.decouvelaere@coopawatt.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 25 85 19 05",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c288.referents.add(alte_user)
            
        if contact_created:
            t32, created = Tag.objects.get_or_create(
                name="CTSX-prospect",
                owning_group=alte_group,
                defaults={
                    'name': "CTSX-prospect",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c288.tags.add(t32)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c288.tags.add(t10)
                        
        if contact_created:
            nc159 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c288,
                note = """mail le 28/08/2019 pour invitation aux prochaines démos programmées

--

invitée au webinaire du 15/02/2019

--

inscrite au webinaire CTSX du 10/01/2019""",
                pinned = False,
                created_at = isoparse("2019-01-09 13:52:10.197344+00:00"),
                updated_at = isoparse("2019-01-09 13:52:10.197344+00:00"),
                # tags,
                # reminder
            )

            rnc159 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc159,
                linked_object_contactable=c288,
                done=False,
        
            # persons
            )
            rnc159.persons.add(alte_user)
            nc159.created_at = isoparse("2019-01-09 13:52:10.197344+00:00")
            nc159.updated_at = isoparse("2019-01-09 13:52:10.197344+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c287, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Raymond",
            last_name="Boudot",
            email="",
            defaults={
                'owning_group':alte_group,
                'first_name':"Raymond",
                'last_name':"Boudot",
                'email':"",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 83 71 34 18",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c287.referents.add(alte_user)
            
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c287.tags.add(t10)
                        

        address = "  ".strip() + ", 69250 Neuville sur Saone"
        if address == "  ,  ":
            address = ""

        c286, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Philippe",
            last_name="De Saint Jean",
            email="accueil@archiplus.org",
            defaults={
                'owning_group':alte_group,
                'first_name':"Philippe",
                'last_name':"De Saint Jean",
                'email':"accueil@archiplus.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Neuville sur Saone",
                'zipcode':"69250",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"",
                'mobile_phone':"06 62 90 64 45",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c286.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c286.tags.add(t11)
                        
        if contact_created:
            nc148 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c286,
                note = """Relance pour réuion janvier""",
                pinned = False,
                created_at = isoparse("2018-12-18 09:55:51.611441+00:00"),
                updated_at = isoparse("2018-12-18 09:55:51.611441+00:00"),
                # tags,
                # reminder
            )

            rnc148 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc148,
                linked_object_contactable=c286,
                done=True,
        
                            date=isoparse("2019-01-14"),
                        
            # persons
            )
            rnc148.persons.add(alte_user)
            nc148.created_at = isoparse("2018-12-18 09:55:51.611441+00:00")
            nc148.updated_at = isoparse("2018-12-18 09:55:51.611441+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c262, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Alain",
            last_name="Charnay",
            email="alain26.03@hotmail.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Alain",
                'last_name':"Charnay",
                'email':"alain26.03@hotmail.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 71 54 09",
                'mobile_phone':"06 30 44 75 01",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c262.referents.add(alte_user)
            
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c262.tags.add(t10)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c261, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Bruno",
            last_name="Bernard",
            email="",
            defaults={
                'owning_group':alte_group,
                'first_name':"Bruno",
                'last_name':"Bernard",
                'email':"",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 46 43 61 56",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c261.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c261.tags.add(t11)
                        
        if contact_created:
            nc359 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """relace nouvelle projet...""",
                pinned = False,
                created_at = isoparse("2020-08-19 14:49:17.091410+00:00"),
                updated_at = isoparse("2020-08-19 14:49:17.091410+00:00"),
                # tags,
                # reminder
            )

            rnc359 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc359,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2020-09-21"),
                        
            # persons
            )
            rnc359.persons.add(alte_user)
            nc359.created_at = isoparse("2020-08-19 14:49:17.091410+00:00")
            nc359.updated_at = isoparse("2020-08-19 14:49:17.091410+00:00")
        
        if contact_created:
            nc255 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Dossier ? Pas dossier... Sinon envoyé un mail à Mairie""",
                pinned = False,
                created_at = isoparse("2019-07-29 10:14:35.903855+00:00"),
                updated_at = isoparse("2019-07-29 10:14:35.903855+00:00"),
                # tags,
                # reminder
            )

            rnc255 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc255,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-08-27"),
                        
            # persons
            )
            rnc255.persons.add(alte_user)
            nc255.created_at = isoparse("2019-07-29 10:14:35.903855+00:00")
            nc255.updated_at = isoparse("2019-07-29 10:14:35.903855+00:00")
        
        if contact_created:
            nc247 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Ont ils rempli le dossier de sub ?""",
                pinned = False,
                created_at = isoparse("2019-07-23 09:49:35.953847+00:00"),
                updated_at = isoparse("2019-07-23 09:49:35.953847+00:00"),
                # tags,
                # reminder
            )

            rnc247 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc247,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-07-29"),
                        
            # persons
            )
            rnc247.persons.add(alte_user)
            nc247.created_at = isoparse("2019-07-23 09:49:35.953847+00:00")
            nc247.updated_at = isoparse("2019-07-23 09:49:35.953847+00:00")
        
        if contact_created:
            nc235 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Ont ils eu des nouvelles de l'architecte ?""",
                pinned = False,
                created_at = isoparse("2019-06-03 14:44:18.289849+00:00"),
                updated_at = isoparse("2019-06-03 14:44:18.289849+00:00"),
                # tags,
                # reminder
            )

            rnc235 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc235,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-07-15"),
                        
            # persons
            )
            rnc235.persons.add(alte_user)
            nc235.created_at = isoparse("2019-06-03 14:44:18.289849+00:00")
            nc235.updated_at = isoparse("2019-06-03 14:44:18.289849+00:00")
        
        if contact_created:
            nc231 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Nouvelles ?""",
                pinned = False,
                created_at = isoparse("2019-05-21 13:32:09.057294+00:00"),
                updated_at = isoparse("2019-05-21 13:32:09.057294+00:00"),
                # tags,
                # reminder
            )

            rnc231 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc231,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-06-03"),
                        
            # persons
            )
            rnc231.persons.add(alte_user)
            nc231.created_at = isoparse("2019-05-21 13:32:09.057294+00:00")
            nc231.updated_at = isoparse("2019-05-21 13:32:09.057294+00:00")
        
        if contact_created:
            nc225 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Bilan rdv système de chauffage.""",
                pinned = False,
                created_at = isoparse("2019-05-06 10:28:43.178925+00:00"),
                updated_at = isoparse("2019-05-06 10:28:43.178925+00:00"),
                # tags,
                # reminder
            )

            rnc225 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc225,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-05-14"),
                        
            # persons
            )
            rnc225.persons.add(alte_user)
            nc225.created_at = isoparse("2019-05-06 10:28:43.178925+00:00")
            nc225.updated_at = isoparse("2019-05-06 10:28:43.178925+00:00")
        
        if contact_created:
            nc222 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """relance""",
                pinned = False,
                created_at = isoparse("2019-04-24 08:43:41.288985+00:00"),
                updated_at = isoparse("2019-04-24 08:43:41.288985+00:00"),
                # tags,
                # reminder
            )

            rnc222 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc222,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-04-29"),
                        
            # persons
            )
            rnc222.persons.add(alte_user)
            nc222.created_at = isoparse("2019-04-24 08:43:41.288985+00:00")
            nc222.updated_at = isoparse("2019-04-24 08:43:41.288985+00:00")
        
        if contact_created:
            nc213 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Nouvelles de l'architecte ?""",
                pinned = False,
                created_at = isoparse("2019-04-11 08:11:22.020339+00:00"),
                updated_at = isoparse("2019-04-11 08:11:22.020339+00:00"),
                # tags,
                # reminder
            )

            rnc213 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc213,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-04-24"),
                        
            # persons
            )
            rnc213.persons.add(alte_user)
            nc213.created_at = isoparse("2019-04-11 08:11:22.020339+00:00")
            nc213.updated_at = isoparse("2019-04-11 08:11:22.020339+00:00")
        
        if contact_created:
            nc203 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Prendre nouvelle retour BET et architecte""",
                pinned = False,
                created_at = isoparse("2019-03-25 10:12:51.348246+00:00"),
                updated_at = isoparse("2019-03-25 10:12:51.348246+00:00"),
                # tags,
                # reminder
            )

            rnc203 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc203,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-03-28"),
                        
            # persons
            )
            rnc203.persons.add(alte_user)
            nc203.created_at = isoparse("2019-03-25 10:12:51.348246+00:00")
            nc203.updated_at = isoparse("2019-03-25 10:12:51.348246+00:00")
        
        if contact_created:
            nc193 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Relance ... si ca ne marche pas faudra appeler la mairie directement""",
                pinned = False,
                created_at = isoparse("2019-03-06 09:53:32.903963+00:00"),
                updated_at = isoparse("2019-03-06 09:53:32.903963+00:00"),
                # tags,
                # reminder
            )

            rnc193 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc193,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-03-12"),
                        
            # persons
            )
            rnc193.persons.add(alte_user)
            nc193.created_at = isoparse("2019-03-06 09:53:32.903963+00:00")
            nc193.updated_at = isoparse("2019-03-06 09:53:32.903963+00:00")
        
        if contact_created:
            nc166 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Toujours pas de nouvelles..""",
                pinned = False,
                created_at = isoparse("2019-01-15 13:24:27.661746+00:00"),
                updated_at = isoparse("2019-01-15 13:24:27.661746+00:00"),
                # tags,
                # reminder
            )

            rnc166 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc166,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2019-01-22"),
                        
            # persons
            )
            rnc166.persons.add(alte_user)
            nc166.created_at = isoparse("2019-01-15 13:24:27.661746+00:00")
            nc166.updated_at = isoparse("2019-01-15 13:24:27.661746+00:00")
        
        if contact_created:
            nc115 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c261,
                note = """Relancer si pas de nouvelles. A Appeler après 15h""",
                pinned = False,
                created_at = isoparse("2018-11-28 15:03:37.417048+00:00"),
                updated_at = isoparse("2018-11-28 15:03:37.417048+00:00"),
                # tags,
                # reminder
            )

            rnc115 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc115,
                linked_object_contactable=c261,
                done=True,
        
                            date=isoparse("2018-12-10"),
                        
            # persons
            )
            rnc115.persons.add(alte_user)
            nc115.created_at = isoparse("2018-11-28 15:03:37.417048+00:00")
            nc115.updated_at = isoparse("2018-11-28 15:03:37.417048+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c260, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Bruno",
            last_name="Dandoy",
            email="b.dandoy@laroche.asso.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Bruno",
                'last_name':"Dandoy",
                'email':"b.dandoy@laroche.asso.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 37 77 84 71",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c260.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c260.tags.add(t11)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c260.tags.add(t10)
                        
        if contact_created:
            nc214 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c260,
                note = """Relance pour nouvelles couvant.""",
                pinned = False,
                created_at = isoparse("2019-04-11 08:12:17.522640+00:00"),
                updated_at = isoparse("2019-04-11 08:12:17.522640+00:00"),
                # tags,
                # reminder
            )

            rnc214 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc214,
                linked_object_contactable=c260,
                done=True,
        
                            date=isoparse("2019-04-24"),
                        
            # persons
            )
            rnc214.persons.add(alte_user)
            nc214.created_at = isoparse("2019-04-11 08:12:17.522640+00:00")
            nc214.updated_at = isoparse("2019-04-11 08:12:17.522640+00:00")
        
        if contact_created:
            nc160 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c260,
                note = """Définir lieu réunion et heure""",
                pinned = False,
                created_at = isoparse("2019-01-11 08:59:18.515587+00:00"),
                updated_at = isoparse("2019-01-11 08:59:18.515587+00:00"),
                # tags,
                # reminder
            )

            rnc160 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc160,
                linked_object_contactable=c260,
                done=True,
        
                            date=isoparse("2019-01-28"),
                        
            # persons
            )
            rnc160.persons.add(alte_user)
            nc160.created_at = isoparse("2019-01-11 08:59:18.515587+00:00")
            nc160.updated_at = isoparse("2019-01-11 08:59:18.515587+00:00")
        
        if contact_created:
            nc117 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c260,
                note = """Relancer pour ses projets de neuves et réhab""",
                pinned = False,
                created_at = isoparse("2018-11-28 15:05:08.130147+00:00"),
                updated_at = isoparse("2018-11-28 15:05:08.130147+00:00"),
                # tags,
                # reminder
            )

            rnc117 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc117,
                linked_object_contactable=c260,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc117.persons.add(alte_user)
            nc117.created_at = isoparse("2018-11-28 15:05:08.130147+00:00")
            nc117.updated_at = isoparse("2018-11-28 15:05:08.130147+00:00")
        

        address = "  ".strip() + ", 69490 Pontcharra Sur Turdine"
        if address == "  ,  ":
            address = ""

        c259, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Barski",
            last_name="Frédéric",
            email="barski.toitures@gmail.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Barski",
                'last_name':"Frédéric",
                'email':"barski.toitures@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Pontcharra Sur Turdine",
                'zipcode':"69490",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"04 74 05 61 28",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c259.referents.add(alte_user)
            
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c259.tags.add(t10)
                        
        if contact_created:
            nc184 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c259,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF



-> Ils vont faire le projet en fonds propre""",
                pinned = False,
                created_at = isoparse("2019-03-04 15:59:02.082568+00:00"),
                updated_at = isoparse("2019-03-04 15:59:02.082568+00:00"),
                # tags,
                # reminder
            )

            rnc184 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc184,
                linked_object_contactable=c259,
                done=True,
        
                            date=isoparse("2019-03-12"),
                        
            # persons
            )
            rnc184.persons.add(alte_user)
            nc184.created_at = isoparse("2019-03-04 15:59:02.082568+00:00")
            nc184.updated_at = isoparse("2019-03-04 15:59:02.082568+00:00")
        
        if contact_created:
            nc154 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c259,
                note = """Nouvelles EF. Que vont ils faire ?""",
                pinned = False,
                created_at = isoparse("2019-01-03 10:41:36.702481+00:00"),
                updated_at = isoparse("2019-01-03 10:41:36.702481+00:00"),
                # tags,
                # reminder
            )

            rnc154 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc154,
                linked_object_contactable=c259,
                done=True,
        
                            date=isoparse("2019-01-21"),
                        
            # persons
            )
            rnc154.persons.add(alte_user)
            nc154.created_at = isoparse("2019-01-03 10:41:36.702481+00:00")
            nc154.updated_at = isoparse("2019-01-03 10:41:36.702481+00:00")
        
        if contact_created:
            nc114 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c259,
                note = """Prendre RDV pour PV""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:39:17.767881+00:00"),
                updated_at = isoparse("2018-11-26 17:39:17.767881+00:00"),
                # tags,
                # reminder
            )

            rnc114 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc114,
                linked_object_contactable=c259,
                done=True,
        
                            date=isoparse("2018-11-27"),
                        
            # persons
            )
            rnc114.persons.add(alte_user)
            nc114.created_at = isoparse("2018-11-26 17:39:17.767881+00:00")
            nc114.updated_at = isoparse("2018-11-26 17:39:17.767881+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c258, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Eric",
            last_name="Morfeuillet",
            email="e.morfeuillet@lepotagerdelacoccinelle.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Eric",
                'last_name':"Morfeuillet",
                'email':"e.morfeuillet@lepotagerdelacoccinelle.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 85 69 57 90",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c258.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c258.tags.add(t11)
                        
        if contact_created:
            nc315 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """a t il payé la facture ?""",
                pinned = False,
                created_at = isoparse("2019-10-25 12:09:21.243130+00:00"),
                updated_at = isoparse("2019-10-25 12:09:21.243130+00:00"),
                # tags,
                # reminder
            )

            rnc315 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc315,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-11-19"),
                        
            # persons
            )
            rnc315.persons.add(alte_user)
            nc315.created_at = isoparse("2019-10-25 12:09:21.243130+00:00")
            nc315.updated_at = isoparse("2019-10-25 12:09:21.243130+00:00")
        
        if contact_created:
            nc288 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """Ensemble des pièces dossiers de subvention ça en est où ? retour rdv avec WARY""",
                pinned = False,
                created_at = isoparse("2019-09-12 12:56:17.028249+00:00"),
                updated_at = isoparse("2019-09-12 12:56:17.028249+00:00"),
                # tags,
                # reminder
            )

            rnc288 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc288,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-10-01"),
                        
            # persons
            )
            rnc288.persons.add(alte_user)
            nc288.created_at = isoparse("2019-09-12 12:56:17.028249+00:00")
            nc288.updated_at = isoparse("2019-09-12 12:56:17.028249+00:00")
        
        if contact_created:
            nc249 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """Nouvelle de sa comptable et Wary ?""",
                pinned = False,
                created_at = isoparse("2019-07-23 12:11:59.547171+00:00"),
                updated_at = isoparse("2019-07-23 12:11:59.547171+00:00"),
                # tags,
                # reminder
            )

            rnc249 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc249,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-08-26"),
                        
            # persons
            )
            rnc249.persons.add(alte_user)
            nc249.created_at = isoparse("2019-07-23 12:11:59.547171+00:00")
            nc249.updated_at = isoparse("2019-07-23 12:11:59.547171+00:00")
        
        if contact_created:
            nc241 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """On monte le dossier COT et région ? il en est ou ce dernier d'ailleurs ?""",
                pinned = False,
                created_at = isoparse("2019-06-13 13:50:15.063368+00:00"),
                updated_at = isoparse("2019-06-13 13:50:15.063368+00:00"),
                # tags,
                # reminder
            )

            rnc241 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc241,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-07-12"),
                        
            # persons
            )
            rnc241.persons.add(alte_user)
            nc241.created_at = isoparse("2019-06-13 13:50:15.063368+00:00")
            nc241.updated_at = isoparse("2019-06-13 13:50:15.063368+00:00")
        
        if contact_created:
            nc237 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """A t il envoyé l'étude ?""",
                pinned = False,
                created_at = isoparse("2019-06-03 14:49:14.255547+00:00"),
                updated_at = isoparse("2019-06-03 14:49:14.255547+00:00"),
                # tags,
                # reminder
            )

            rnc237 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc237,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-06-07"),
                        
            # persons
            )
            rnc237.persons.add(alte_user)
            nc237.created_at = isoparse("2019-06-03 14:49:14.255547+00:00")
            nc237.updated_at = isoparse("2019-06-03 14:49:14.255547+00:00")
        
        if contact_created:
            nc223 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """a t il recu l'etude de HELAIR ?""",
                pinned = False,
                created_at = isoparse("2019-04-24 08:45:44.750125+00:00"),
                updated_at = isoparse("2019-04-24 08:45:44.750125+00:00"),
                # tags,
                # reminder
            )

            rnc223 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc223,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-05-27"),
                        
            # persons
            )
            rnc223.persons.add(alte_user)
            nc223.created_at = isoparse("2019-04-24 08:45:44.750125+00:00")
            nc223.updated_at = isoparse("2019-04-24 08:45:44.750125+00:00")
        
        if contact_created:
            nc219 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """Extrait K-Bis et RIB reçus ?""",
                pinned = False,
                created_at = isoparse("2019-04-15 07:39:29.302087+00:00"),
                updated_at = isoparse("2019-04-15 07:39:29.302087+00:00"),
                # tags,
                # reminder
            )

            rnc219 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc219,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-04-19"),
                        
            # persons
            )
            rnc219.persons.add(alte_user)
            nc219.created_at = isoparse("2019-04-15 07:39:29.302087+00:00")
            nc219.updated_at = isoparse("2019-04-15 07:39:29.302087+00:00")
        
        if contact_created:
            nc216 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """Relance pour dossier. A t il été envoyé ?""",
                pinned = False,
                created_at = isoparse("2019-04-11 08:18:11.486820+00:00"),
                updated_at = isoparse("2019-04-11 08:18:11.486820+00:00"),
                # tags,
                # reminder
            )

            rnc216 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc216,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-04-15"),
                        
            # persons
            )
            rnc216.persons.add(alte_user)
            nc216.created_at = isoparse("2019-04-11 08:18:11.486820+00:00")
            nc216.updated_at = isoparse("2019-04-11 08:18:11.486820+00:00")
        
        if contact_created:
            nc118 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """Relancer pour savoir où en est le projet""",
                pinned = False,
                created_at = isoparse("2018-11-28 15:11:25.608919+00:00"),
                updated_at = isoparse("2018-11-28 15:11:25.608919+00:00"),
                # tags,
                # reminder
            )

            rnc118 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc118,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc118.persons.add(alte_user)
            nc118.created_at = isoparse("2018-11-28 15:11:25.608919+00:00")
            nc118.updated_at = isoparse("2018-11-28 15:11:25.608919+00:00")
        
        if contact_created:
            nc107 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c258,
                note = """Envoyer document""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:31:04.645795+00:00"),
                updated_at = isoparse("2018-11-26 17:31:04.645795+00:00"),
                # tags,
                # reminder
            )

            rnc107 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc107,
                linked_object_contactable=c258,
                done=True,
        
                            date=isoparse("2018-11-27"),
                        
            # persons
            )
            rnc107.persons.add(alte_user)
            nc107.created_at = isoparse("2018-11-26 17:31:04.645795+00:00")
            nc107.updated_at = isoparse("2018-11-26 17:31:04.645795+00:00")
        

        address = "9 rue anna marty  ".strip() + ", 69007 Lyon"
        if address == "  ,  ":
            address = ""

        c257, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Marc Olivier",
            last_name="Racanière",
            email="marcel.olivier.racaniere@groupe3f.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Marc Olivier",
                'last_name':"Racanière",
                'email':"marcel.olivier.racaniere@groupe3f.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Lyon",
                'zipcode':"69007",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"04 72 80 54 96",
                'mobile_phone':"06 07 33 80 05",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c257.referents.add(alte_user)
            
        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c257.tags.add(t9)
                        
        if contact_created:
            t29, created = Tag.objects.get_or_create(
                name="pv",
                owning_group=alte_group,
                defaults={
                    'name': "pv",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c257.tags.add(t29)
                        
        if contact_created:
            nc226 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c257,
                note = """envoyer EF et vendre corasol + autre baitment""",
                pinned = False,
                created_at = isoparse("2019-05-06 10:34:52.886837+00:00"),
                updated_at = isoparse("2019-05-06 10:34:52.886837+00:00"),
                # tags,
                # reminder
            )

            rnc226 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc226,
                linked_object_contactable=c257,
                done=True,
        
                            date=isoparse("2019-05-09"),
                        
            # persons
            )
            rnc226.persons.add(alte_user)
            nc226.created_at = isoparse("2019-05-06 10:34:52.886837+00:00")
            nc226.updated_at = isoparse("2019-05-06 10:34:52.886837+00:00")
        
        if contact_created:
            nc149 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c257,
                note = """Relance pour caler les visites""",
                pinned = False,
                created_at = isoparse("2018-12-21 08:41:08.665754+00:00"),
                updated_at = isoparse("2018-12-21 08:41:08.665754+00:00"),
                # tags,
                # reminder
            )

            rnc149 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc149,
                linked_object_contactable=c257,
                done=True,
        
                            date=isoparse("2019-01-03"),
                        
            # persons
            )
            rnc149.persons.add(alte_user)
            nc149.created_at = isoparse("2018-12-21 08:41:08.665754+00:00")
            nc149.updated_at = isoparse("2018-12-21 08:41:08.665754+00:00")
        
        if contact_created:
            nc110 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c257,
                note = """Prendre RDV PV""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:32:34.363803+00:00"),
                updated_at = isoparse("2018-11-26 17:32:34.363803+00:00"),
                # tags,
                # reminder
            )

            rnc110 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc110,
                linked_object_contactable=c257,
                done=True,
        
                            date=isoparse("2018-11-27"),
                        
            # persons
            )
            rnc110.persons.add(alte_user)
            nc110.created_at = isoparse("2018-11-26 17:32:34.363803+00:00")
            nc110.updated_at = isoparse("2018-11-26 17:32:34.363803+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c255, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Arnaud",
            last_name="Denis",
            email="technique@amplepuis.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Arnaud",
                'last_name':"Denis",
                'email':"technique@amplepuis.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 71 58 21 69",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c255.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c255.tags.add(t11)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c255.tags.add(t10)
                        
        if contact_created:
            nc121 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c255,
                note = """Relancer pour son projet de chauffage entre les deux bâtiment adjacent""",
                pinned = False,
                created_at = isoparse("2018-11-28 15:30:04.168209+00:00"),
                updated_at = isoparse("2018-11-28 15:30:04.168209+00:00"),
                # tags,
                # reminder
            )

            rnc121 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc121,
                linked_object_contactable=c255,
                done=True,
        
                            date=isoparse("2019-01-14"),
                        
            # persons
            )
            rnc121.persons.add(alte_user)
            nc121.created_at = isoparse("2018-11-28 15:30:04.168209+00:00")
            nc121.updated_at = isoparse("2018-11-28 15:30:04.168209+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c247, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Marie Pierre",
            last_name="Dumaine",
            email="mpierre.dumaine@valtex-group.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Marie Pierre",
                'last_name':"Dumaine",
                'email':"mpierre.dumaine@valtex-group.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 05 16 80",
                'mobile_phone':"06 09 42 21 11",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c247.referents.add(alte_user)
            
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c247.tags.add(t10)
                        
        if contact_created:
            nc204 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c247,
                note = """Relance montage dossier""",
                pinned = False,
                created_at = isoparse("2019-03-25 10:17:43.052574+00:00"),
                updated_at = isoparse("2019-03-25 10:17:43.052574+00:00"),
                # tags,
                # reminder
            )

            rnc204 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc204,
                linked_object_contactable=c247,
                done=True,
        
                            date=isoparse("2019-03-29"),
                        
            # persons
            )
            rnc204.persons.add(alte_user)
            nc204.created_at = isoparse("2019-03-25 10:17:43.052574+00:00")
            nc204.updated_at = isoparse("2019-03-25 10:17:43.052574+00:00")
        
        if contact_created:
            nc192 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c247,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF et programmer rdv pour étudier propal d'INGENEFF""",
                pinned = False,
                created_at = isoparse("2019-03-04 16:02:06.698696+00:00"),
                updated_at = isoparse("2019-03-04 16:02:06.698696+00:00"),
                # tags,
                # reminder
            )

            rnc192 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc192,
                linked_object_contactable=c247,
                done=True,
        
                            date=isoparse("2019-03-13"),
                        
            # persons
            )
            rnc192.persons.add(alte_user)
            nc192.created_at = isoparse("2019-03-04 16:02:06.698696+00:00")
            nc192.updated_at = isoparse("2019-03-04 16:02:06.698696+00:00")
        
        if contact_created:
            nc109 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c247,
                note = """Prendre RDV pour le COT et pour le PV""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:32:08.538608+00:00"),
                updated_at = isoparse("2018-11-26 17:32:08.538608+00:00"),
                # tags,
                # reminder
            )

            rnc109 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc109,
                linked_object_contactable=c247,
                done=True,
        
                            date=isoparse("2018-11-27"),
                        
            # persons
            )
            rnc109.persons.add(alte_user)
            nc109.created_at = isoparse("2018-11-26 17:32:08.538608+00:00")
            nc109.updated_at = isoparse("2018-11-26 17:32:08.538608+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c246, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Lacroix",
            last_name="Philippe",
            email="lacroix-chauffage@wanadoo.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Lacroix",
                'last_name':"Philippe",
                'email':"lacroix-chauffage@wanadoo.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 13 01 15",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c246.referents.add(alte_user)
            
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c246.tags.add(t10)
                        
        if contact_created:
            nc188 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c246,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF""",
                pinned = False,
                created_at = isoparse("2019-03-04 16:00:30.590482+00:00"),
                updated_at = isoparse("2019-03-04 16:00:30.590482+00:00"),
                # tags,
                # reminder
            )

            rnc188 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc188,
                linked_object_contactable=c246,
                done=True,
        
                            date=isoparse("2019-03-12"),
                        
            # persons
            )
            rnc188.persons.add(alte_user)
            nc188.created_at = isoparse("2019-03-04 16:00:30.590482+00:00")
            nc188.updated_at = isoparse("2019-03-04 16:00:30.590482+00:00")
        
        if contact_created:
            nc97 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c246,
                note = """Relance si pas de nouvelles""",
                pinned = False,
                created_at = isoparse("2018-11-09 11:26:35.665470+00:00"),
                updated_at = isoparse("2018-11-09 11:26:35.665470+00:00"),
                # tags,
                # reminder
            )

            rnc97 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc97,
                linked_object_contactable=c246,
                done=True,
        
                            date=isoparse("2018-11-13"),
                        
            # persons
            )
            rnc97.persons.add(alte_user)
            nc97.created_at = isoparse("2018-11-09 11:26:35.665470+00:00")
            nc97.updated_at = isoparse("2018-11-09 11:26:35.665470+00:00")
        

        address = "  ".strip() + ", 69170 Tarare"
        if address == "  ,  ":
            address = ""

        c245, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Barberet",
            last_name="Sandrine",
            email="sco2bois@orange.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Barberet",
                'last_name':"Sandrine",
                'email':"sco2bois@orange.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"Tarare",
                'zipcode':"69170",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"",
                'mobile_phone':"06 80 72 01 83",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c245.referents.add(alte_user)
            
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c245.tags.add(t10)
                        
        if contact_created:
            nc191 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c245,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF



Kit foret partira lors de la permiere vague de CORASOL sans doute""",
                pinned = False,
                created_at = isoparse("2019-03-04 16:01:42.734141+00:00"),
                updated_at = isoparse("2019-03-04 16:01:42.734141+00:00"),
                # tags,
                # reminder
            )

            rnc191 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc191,
                linked_object_contactable=c245,
                done=True,
        
                            date=isoparse("2019-03-13"),
                        
            # persons
            )
            rnc191.persons.add(alte_user)
            nc191.created_at = isoparse("2019-03-04 16:01:42.734141+00:00")
            nc191.updated_at = isoparse("2019-03-04 16:01:42.734141+00:00")
        

        address = "Les granges  ".strip() + ", 69550 Cublize"
        if address == "  ,  ":
            address = ""

        c243, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Nathalie",
            last_name="Cinquin",
            email="architecte.cinquin@wanadoo.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Nathalie",
                'last_name':"Cinquin",
                'email':"architecte.cinquin@wanadoo.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"Cublize",
                'zipcode':"69550",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 89 61 86",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c243.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c243.tags.add(t11)
                        
        if contact_created:
            nc335 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c243,
                note = """A t elle répondu à mon mail ?""",
                pinned = False,
                created_at = isoparse("2019-12-23 10:17:02.118400+00:00"),
                updated_at = isoparse("2019-12-23 10:17:02.118400+00:00"),
                # tags,
                # reminder
            )

            rnc335 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc335,
                linked_object_contactable=c243,
                done=True,
        
                            date=isoparse("2020-01-13"),
                        
            # persons
            )
            rnc335.persons.add(alte_user)
            nc335.created_at = isoparse("2019-12-23 10:17:02.118400+00:00")
            nc335.updated_at = isoparse("2019-12-23 10:17:02.118400+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c242, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Buffin",
            last_name="Pascal",
            email="pascal.buffin@helair.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Buffin",
                'last_name':"Pascal",
                'email':"pascal.buffin@helair.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 89 53 72",
                'mobile_phone':"06 01 78 92 82",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c242.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c242.tags.add(t11)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c241, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Laurent",
            last_name="Poussin",
            email="l.poussin@cythelia.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Laurent",
                'last_name':"Poussin",
                'email':"l.poussin@cythelia.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 79 25 31 75",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c241.referents.add(alte_user)
            
        if contact_created:
            t37, created = Tag.objects.get_or_create(
                name="CTSX-non",
                owning_group=alte_group,
                defaults={
                    'name': "CTSX-non",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c241.tags.add(t37)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c241.tags.add(t10)
                        
        if contact_created:
            nc269 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c241,
                note = """relancer pour le releve du compteur si pas de nouvelles. 



Et voir si possible de déposer le dossier en septembre.""",
                pinned = False,
                created_at = isoparse("2019-08-19 12:36:37.624064+00:00"),
                updated_at = isoparse("2019-08-19 12:36:37.624064+00:00"),
                # tags,
                # reminder
            )

            rnc269 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc269,
                linked_object_contactable=c241,
                done=True,
        
                            date=isoparse("2019-08-28"),
                        
            # persons
            )
            rnc269.persons.add(alte_user)
            nc269.created_at = isoparse("2019-08-19 12:36:37.624064+00:00")
            nc269.updated_at = isoparse("2019-08-19 12:36:37.624064+00:00")
        
        if contact_created:
            nc161 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c241,
                note = """Date pour la nouvelle vague. ?""",
                pinned = False,
                created_at = isoparse("2019-01-11 09:19:43.949141+00:00"),
                updated_at = isoparse("2019-01-11 09:19:43.949141+00:00"),
                # tags,
                # reminder
            )

            rnc161 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc161,
                linked_object_contactable=c241,
                done=True,
        
                            date=isoparse("2019-01-16"),
                        
            # persons
            )
            rnc161.persons.add(alte_user)
            nc161.created_at = isoparse("2019-01-11 09:19:43.949141+00:00")
            nc161.updated_at = isoparse("2019-01-11 09:19:43.949141+00:00")
        
        if contact_created:
            nc132 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c241,
                note = """EF et groupe3F, des nouvelles ?""",
                pinned = False,
                created_at = isoparse("2018-12-12 08:40:13.560514+00:00"),
                updated_at = isoparse("2018-12-12 08:40:13.560514+00:00"),
                # tags,
                # reminder
            )

            rnc132 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc132,
                linked_object_contactable=c241,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc132.persons.add(alte_user)
            nc132.created_at = isoparse("2018-12-12 08:40:13.560514+00:00")
            nc132.updated_at = isoparse("2018-12-12 08:40:13.560514+00:00")
        
        if contact_created:
            nc103 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c241,
                note = """accès demo COUTOSUIX envoyés le 20 novembre 2018 :

- identifiant : l.poussin@cythelia.fr

- mot de passe : demo_CYTHELIA_20112018""",
                pinned = False,
                created_at = isoparse("2018-11-20 14:10:45.968035+00:00"),
                updated_at = isoparse("2018-11-20 14:10:45.968035+00:00"),
                # tags,
                # reminder
            )

            rnc103 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc103,
                linked_object_contactable=c241,
                done=False,
        
            # persons
            )
            rnc103.persons.add(alte_user)
            nc103.created_at = isoparse("2018-11-20 14:10:45.968035+00:00")
            nc103.updated_at = isoparse("2018-11-20 14:10:45.968035+00:00")
        

        address = "  ".strip() + ", 69470 "
        if address == "  ,  ":
            address = ""

        c239, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Patrice",
            last_name="Corgie",
            email="patrice@corgie.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Patrice",
                'last_name':"Corgie",
                'email':"patrice@corgie.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"69470",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 64 81 77",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c239.referents.add(alte_user)
            
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c239.tags.add(t10)
                        
        if contact_created:
            nc202 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c239,
                note = """Prendre rdv éventuellement""",
                pinned = False,
                created_at = isoparse("2019-03-19 10:52:49.925766+00:00"),
                updated_at = isoparse("2019-03-19 10:52:49.925766+00:00"),
                # tags,
                # reminder
            )

            rnc202 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc202,
                linked_object_contactable=c239,
                done=True,
        
                            date=isoparse("2019-04-02"),
                        
            # persons
            )
            rnc202.persons.add(alte_user)
            nc202.created_at = isoparse("2019-03-19 10:52:49.925766+00:00")
            nc202.updated_at = isoparse("2019-03-19 10:52:49.925766+00:00")
        
        if contact_created:
            nc186 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c239,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF""",
                pinned = False,
                created_at = isoparse("2019-03-04 15:59:49.787092+00:00"),
                updated_at = isoparse("2019-03-04 15:59:49.787092+00:00"),
                # tags,
                # reminder
            )

            rnc186 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc186,
                linked_object_contactable=c239,
                done=True,
        
                            date=isoparse("2019-03-12"),
                        
            # persons
            )
            rnc186.persons.add(alte_user)
            nc186.created_at = isoparse("2019-03-04 15:59:49.787092+00:00")
            nc186.updated_at = isoparse("2019-03-04 15:59:49.787092+00:00")
        
        if contact_created:
            nc152 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c239,
                note = """prendre des nouvelles concernant l'EF. Que vont ils faire ?""",
                pinned = False,
                created_at = isoparse("2019-01-03 10:40:52.315981+00:00"),
                updated_at = isoparse("2019-01-03 10:40:52.315981+00:00"),
                # tags,
                # reminder
            )

            rnc152 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc152,
                linked_object_contactable=c239,
                done=True,
        
                            date=isoparse("2019-01-21"),
                        
            # persons
            )
            rnc152.persons.add(alte_user)
            nc152.created_at = isoparse("2019-01-03 10:40:52.315981+00:00")
            nc152.updated_at = isoparse("2019-01-03 10:40:52.315981+00:00")
        
        if contact_created:
            nc89 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c239,
                note = """A relancer si pas de nouvelles pour le PV""",
                pinned = False,
                created_at = isoparse("2018-11-06 15:15:49.281280+00:00"),
                updated_at = isoparse("2018-11-06 15:15:49.281280+00:00"),
                # tags,
                # reminder
            )

            rnc89 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc89,
                linked_object_contactable=c239,
                done=True,
        
                            date=isoparse("2018-12-06"),
                        
            # persons
            )
            rnc89.persons.add(alte_user)
            nc89.created_at = isoparse("2018-11-06 15:15:49.281280+00:00")
            nc89.updated_at = isoparse("2018-11-06 15:15:49.281280+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c238, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Stéphane",
            last_name="Wary",
            email="contact@tarare-enr.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Stéphane",
                'last_name':"Wary",
                'email':"contact@tarare-enr.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 71 88 12 91",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c238.referents.add(alte_user)
            
        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c238.tags.add(t9)
                        
        if contact_created:
            nc332 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """Avancement projet?""",
                pinned = False,
                created_at = isoparse("2019-12-23 08:53:14.750533+00:00"),
                updated_at = isoparse("2019-12-23 08:53:14.750533+00:00"),
                # tags,
                # reminder
            )

            rnc332 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc332,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2020-03-02"),
                        
            # persons
            )
            rnc332.persons.add(alte_user)
            nc332.created_at = isoparse("2019-12-23 08:53:14.750533+00:00")
            nc332.updated_at = isoparse("2019-12-23 08:53:14.750533+00:00")
        
        if contact_created:
            nc314 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """a t il envoyé les infos manquantes ?""",
                pinned = False,
                created_at = isoparse("2019-10-25 12:08:04.067673+00:00"),
                updated_at = isoparse("2019-10-25 12:08:04.067673+00:00"),
                # tags,
                # reminder
            )

            rnc314 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc314,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2019-11-14"),
                        
            # persons
            )
            rnc314.persons.add(alte_user)
            nc314.created_at = isoparse("2019-10-25 12:08:04.067673+00:00")
            nc314.updated_at = isoparse("2019-10-25 12:08:04.067673+00:00")
        
        if contact_created:
            nc257 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """Faire relevé solaire thermique entre autre... Préparer documents pour le rdv""",
                pinned = False,
                created_at = isoparse("2019-08-02 09:15:07.180457+00:00"),
                updated_at = isoparse("2019-08-02 09:15:07.180457+00:00"),
                # tags,
                # reminder
            )

            rnc257 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc257,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2019-10-22"),
                        
            # persons
            )
            rnc257.persons.add(alte_user)
            nc257.created_at = isoparse("2019-08-02 09:15:07.180457+00:00")
            nc257.updated_at = isoparse("2019-08-02 09:15:07.180457+00:00")
        
        if contact_created:
            nc228 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """pose du compteur le 12/05/2019.

Faire une relève le 12/07/2019 et demander la fréquentation au cours de cette période.""",
                pinned = False,
                created_at = isoparse("2019-05-21 13:28:18.170139+00:00"),
                updated_at = isoparse("2019-05-21 13:28:18.170139+00:00"),
                # tags,
                # reminder
            )

            rnc228 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc228,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2019-07-10"),
                        
            # persons
            )
            rnc228.persons.add(alte_user)
            nc228.created_at = isoparse("2019-05-21 13:28:18.170139+00:00")
            nc228.updated_at = isoparse("2019-05-21 13:28:18.170139+00:00")
        
        if contact_created:
            nc215 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """Relance projet perso. A t il posé le compteur ?""",
                pinned = False,
                created_at = isoparse("2019-04-11 08:17:12.852341+00:00"),
                updated_at = isoparse("2019-04-11 08:17:12.852341+00:00"),
                # tags,
                # reminder
            )

            rnc215 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc215,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2019-04-24"),
                        
            # persons
            )
            rnc215.persons.add(alte_user)
            nc215.created_at = isoparse("2019-04-11 08:17:12.852341+00:00")
            nc215.updated_at = isoparse("2019-04-11 08:17:12.852341+00:00")
        
        if contact_created:
            nc198 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """Prévoir un rdv pour que l'on avance sur les projets en cours...""",
                pinned = False,
                created_at = isoparse("2019-03-06 10:13:47.825435+00:00"),
                updated_at = isoparse("2019-03-06 10:13:47.825435+00:00"),
                # tags,
                # reminder
            )

            rnc198 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc198,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2019-03-11"),
                        
            # persons
            )
            rnc198.persons.add(alte_user)
            nc198.created_at = isoparse("2019-03-06 10:13:47.825435+00:00")
            nc198.updated_at = isoparse("2019-03-06 10:13:47.825435+00:00")
        
        if contact_created:
            nc169 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """Relance pour : 



- Swal 

- projet perso

- potager de la coccinelle""",
                pinned = False,
                created_at = isoparse("2019-01-15 13:32:22.673296+00:00"),
                updated_at = isoparse("2019-01-15 13:32:22.673296+00:00"),
                # tags,
                # reminder
            )

            rnc169 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc169,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2019-02-05"),
                        
            # persons
            )
            rnc169.persons.add(alte_user)
            nc169.created_at = isoparse("2019-01-15 13:32:22.673296+00:00")
            nc169.updated_at = isoparse("2019-01-15 13:32:22.673296+00:00")
        
        if contact_created:
            nc131 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """Echange projet COT""",
                pinned = False,
                created_at = isoparse("2018-12-12 08:39:35.118045+00:00"),
                updated_at = isoparse("2018-12-12 08:39:35.118045+00:00"),
                # tags,
                # reminder
            )

            rnc131 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc131,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc131.persons.add(alte_user)
            nc131.created_at = isoparse("2018-12-12 08:39:35.118045+00:00")
            nc131.updated_at = isoparse("2018-12-12 08:39:35.118045+00:00")
        
        if contact_created:
            nc108 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c238,
                note = """Echanger sur ses projets et BET""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:31:39.635650+00:00"),
                updated_at = isoparse("2018-11-26 17:31:39.635650+00:00"),
                # tags,
                # reminder
            )

            rnc108 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc108,
                linked_object_contactable=c238,
                done=True,
        
                            date=isoparse("2018-12-05"),
                        
            # persons
            )
            rnc108.persons.add(alte_user)
            nc108.created_at = isoparse("2018-11-26 17:31:39.635650+00:00")
            nc108.updated_at = isoparse("2018-11-26 17:31:39.635650+00:00")
        

        address = "  ".strip() + ",  Villefranche sur Saone"
        if address == "  ,  ":
            address = ""

        c237, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Douglas",
            last_name="Martin",
            email="douglas.martin@fibois-rhone.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Douglas",
                'last_name':"Martin",
                'email':"douglas.martin@fibois-rhone.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Villefranche sur Saone",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"04 74 67 21 93",
                'mobile_phone':"06 95 69 58 49",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c237.referents.add(alte_user)
            
        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c237.tags.add(t9)
                        
        if contact_created:
            nc354 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c237,
                note = """Prendre des nouvelles début Juin pour le projet Bois énergie de la menuiserie""",
                pinned = False,
                created_at = isoparse("2020-04-15 10:36:08.068991+00:00"),
                updated_at = isoparse("2020-04-15 10:36:08.068991+00:00"),
                # tags,
                # reminder
            )

            rnc354 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc354,
                linked_object_contactable=c237,
                done=True,
        
                            date=isoparse("2020-06-01"),
                        
            # persons
            )
            rnc354.persons.add(alte_user)
            nc354.created_at = isoparse("2020-04-15 10:36:08.068991+00:00")
            nc354.updated_at = isoparse("2020-04-15 10:36:08.068991+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c234, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Richard",
            last_name="Monnet",
            email="rmonnet@miltec.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Richard",
                'last_name':"Monnet",
                'email':"rmonnet@miltec.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 89 93 42",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c234.referents.add(alte_user)
            
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c234.tags.add(t10)
                        
        if contact_created:
            nc190 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c234,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF""",
                pinned = False,
                created_at = isoparse("2019-03-04 16:01:12.544248+00:00"),
                updated_at = isoparse("2019-03-04 16:01:12.544248+00:00"),
                # tags,
                # reminder
            )

            rnc190 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc190,
                linked_object_contactable=c234,
                done=True,
        
                            date=isoparse("2019-03-12"),
                        
            # persons
            )
            rnc190.persons.add(alte_user)
            nc190.created_at = isoparse("2019-03-04 16:01:12.544248+00:00")
            nc190.updated_at = isoparse("2019-03-04 16:01:12.544248+00:00")
        
        if contact_created:
            nc112 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c234,
                note = """Prendre rdv PV""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:34:01.377499+00:00"),
                updated_at = isoparse("2018-11-26 17:34:01.377499+00:00"),
                # tags,
                # reminder
            )

            rnc112 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc112,
                linked_object_contactable=c234,
                done=True,
        
                            date=isoparse("2018-11-27"),
                        
            # persons
            )
            rnc112.persons.add(alte_user)
            nc112.created_at = isoparse("2018-11-26 17:34:01.377499+00:00")
            nc112.updated_at = isoparse("2018-11-26 17:34:01.377499+00:00")
        
        if contact_created:
            nc94 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c234,
                note = """Relance pour PV envoyer mail avec les pièces principales""",
                pinned = False,
                created_at = isoparse("2018-11-09 09:17:42.402475+00:00"),
                updated_at = isoparse("2018-11-09 09:17:42.402475+00:00"),
                # tags,
                # reminder
            )

            rnc94 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc94,
                linked_object_contactable=c234,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc94.persons.add(alte_user)
            nc94.created_at = isoparse("2018-11-09 09:17:42.402475+00:00")
            nc94.updated_at = isoparse("2018-11-09 09:17:42.402475+00:00")
        
        if contact_created:
            nc92 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c234,
                note = """Relance si pas de nouvelles""",
                pinned = False,
                created_at = isoparse("2018-11-06 15:47:54.766059+00:00"),
                updated_at = isoparse("2018-11-06 15:47:54.766059+00:00"),
                # tags,
                # reminder
            )

            rnc92 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc92,
                linked_object_contactable=c234,
                done=True,
        
                            date=isoparse("2018-11-09"),
                        
            # persons
            )
            rnc92.persons.add(alte_user)
            nc92.created_at = isoparse("2018-11-06 15:47:54.766059+00:00")
            nc92.updated_at = isoparse("2018-11-06 15:47:54.766059+00:00")
        
        if contact_created:
            nc85 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c234,
                note = """Relancer / Avancement EF PV COR""",
                pinned = False,
                created_at = isoparse("2018-10-02 12:57:42.294353+00:00"),
                updated_at = isoparse("2018-10-02 12:57:42.294353+00:00"),
                # tags,
                # reminder
            )

            rnc85 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc85,
                linked_object_contactable=c234,
                done=True,
        
                            date=isoparse("2018-10-24"),
                        
            # persons
            )
            rnc85.persons.add(alte_user)
            nc85.created_at = isoparse("2018-10-02 12:57:42.294353+00:00")
            nc85.updated_at = isoparse("2018-10-02 12:57:42.294353+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c233, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Marc",
            last_name="Moncorge",
            email="mmoncorge@laroche.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Marc",
                'last_name':"Moncorge",
                'email':"mmoncorge@laroche.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 89 89 23",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c233.referents.add(alte_user)
            
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c233.tags.add(t10)
                        
        if contact_created:
            nc189 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c233,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF""",
                pinned = False,
                created_at = isoparse("2019-03-04 16:00:48.676751+00:00"),
                updated_at = isoparse("2019-03-04 16:00:48.676751+00:00"),
                # tags,
                # reminder
            )

            rnc189 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc189,
                linked_object_contactable=c233,
                done=True,
        
                            date=isoparse("2019-03-12"),
                        
            # persons
            )
            rnc189.persons.add(alte_user)
            nc189.created_at = isoparse("2019-03-04 16:00:48.676751+00:00")
            nc189.updated_at = isoparse("2019-03-04 16:00:48.676751+00:00")
        
        if contact_created:
            nc111 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c233,
                note = """Prendre RDV PV""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:33:27.126320+00:00"),
                updated_at = isoparse("2018-11-26 17:33:27.126320+00:00"),
                # tags,
                # reminder
            )

            rnc111 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc111,
                linked_object_contactable=c233,
                done=True,
        
                            date=isoparse("2018-11-27"),
                        
            # persons
            )
            rnc111.persons.add(alte_user)
            nc111.created_at = isoparse("2018-11-26 17:33:27.126320+00:00")
            nc111.updated_at = isoparse("2018-11-26 17:33:27.126320+00:00")
        
        if contact_created:
            nc91 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c233,
                note = """Relance s'il ne m'a pas rappelé""",
                pinned = False,
                created_at = isoparse("2018-11-06 15:28:58.678935+00:00"),
                updated_at = isoparse("2018-11-06 15:28:58.678935+00:00"),
                # tags,
                # reminder
            )

            rnc91 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc91,
                linked_object_contactable=c233,
                done=True,
        
                            date=isoparse("2018-11-09"),
                        
            # persons
            )
            rnc91.persons.add(alte_user)
            nc91.created_at = isoparse("2018-11-06 15:28:58.678935+00:00")
            nc91.updated_at = isoparse("2018-11-06 15:28:58.678935+00:00")
        
        if contact_created:
            nc84 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c233,
                note = """A relancer / avancer sur le projet PV pour l'EF""",
                pinned = False,
                created_at = isoparse("2018-10-02 12:55:43.228402+00:00"),
                updated_at = isoparse("2018-10-02 12:55:43.228402+00:00"),
                # tags,
                # reminder
            )

            rnc84 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc84,
                linked_object_contactable=c233,
                done=True,
        
                            date=isoparse("2018-10-24"),
                        
            # persons
            )
            rnc84.persons.add(alte_user)
            nc84.created_at = isoparse("2018-10-02 12:55:43.228402+00:00")
            nc84.updated_at = isoparse("2018-10-02 12:55:43.228402+00:00")
        

        address = "  ".strip() + ",  Cours La Ville"
        if address == "  ,  ":
            address = ""

        c232, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Barras",
            last_name="Nelly",
            email="nbarras@bduron.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Barras",
                'last_name':"Nelly",
                'email':"nbarras@bduron.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"Cours La Ville",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"04 74 89 75 52",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c232.referents.add(alte_user)
            
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c232.tags.add(t10)
                        
        if contact_created:
            nc187 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c232,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF""",
                pinned = False,
                created_at = isoparse("2019-03-04 16:00:11.530072+00:00"),
                updated_at = isoparse("2019-03-04 16:00:11.530072+00:00"),
                # tags,
                # reminder
            )

            rnc187 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc187,
                linked_object_contactable=c232,
                done=True,
        
                            date=isoparse("2019-04-01"),
                        
            # persons
            )
            rnc187.persons.add(alte_user)
            nc187.created_at = isoparse("2019-03-04 16:00:11.530072+00:00")
            nc187.updated_at = isoparse("2019-03-04 16:00:11.530072+00:00")
        
        if contact_created:
            nc153 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c232,
                note = """Nouvelles EF. Que vont ils faire ?""",
                pinned = False,
                created_at = isoparse("2019-01-03 10:41:19.181458+00:00"),
                updated_at = isoparse("2019-01-03 10:41:19.181458+00:00"),
                # tags,
                # reminder
            )

            rnc153 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc153,
                linked_object_contactable=c232,
                done=True,
        
                            date=isoparse("2019-01-21"),
                        
            # persons
            )
            rnc153.persons.add(alte_user)
            nc153.created_at = isoparse("2019-01-03 10:41:19.181458+00:00")
            nc153.updated_at = isoparse("2019-01-03 10:41:19.181458+00:00")
        
        if contact_created:
            nc113 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c232,
                note = """Prendre RDV PV""",
                pinned = False,
                created_at = isoparse("2018-11-26 17:35:22.534119+00:00"),
                updated_at = isoparse("2018-11-26 17:35:22.534119+00:00"),
                # tags,
                # reminder
            )

            rnc113 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc113,
                linked_object_contactable=c232,
                done=True,
        
                            date=isoparse("2018-11-27"),
                        
            # persons
            )
            rnc113.persons.add(alte_user)
            nc113.created_at = isoparse("2018-11-26 17:35:22.534119+00:00")
            nc113.updated_at = isoparse("2018-11-26 17:35:22.534119+00:00")
        
        if contact_created:
            nc95 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c232,
                note = """Relance si toujours pas les documents""",
                pinned = False,
                created_at = isoparse("2018-11-09 09:28:53.865164+00:00"),
                updated_at = isoparse("2018-11-09 09:28:53.865164+00:00"),
                # tags,
                # reminder
            )

            rnc95 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc95,
                linked_object_contactable=c232,
                done=True,
        
                            date=isoparse("2018-12-03"),
                        
            # persons
            )
            rnc95.persons.add(alte_user)
            nc95.created_at = isoparse("2018-11-09 09:28:53.865164+00:00")
            nc95.updated_at = isoparse("2018-11-09 09:28:53.865164+00:00")
        
        if contact_created:
            nc83 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c232,
                note = """A relancer ou faire le point pour les éléments de l'EF PV""",
                pinned = False,
                created_at = isoparse("2018-10-02 12:52:47.554162+00:00"),
                updated_at = isoparse("2018-10-02 12:52:47.554162+00:00"),
                # tags,
                # reminder
            )

            rnc83 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc83,
                linked_object_contactable=c232,
                done=True,
        
                            date=isoparse("2018-10-24"),
                        
            # persons
            )
            rnc83.persons.add(alte_user)
            nc83.created_at = isoparse("2018-10-02 12:52:47.554162+00:00")
            nc83.updated_at = isoparse("2018-10-02 12:52:47.554162+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c230, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Arnaud",
            last_name="De Saint Trivier",
            email="arnaud.de-saint-trivier@therasana.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Arnaud",
                'last_name':"De Saint Trivier",
                'email':"arnaud.de-saint-trivier@therasana.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 08 42 52 93",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c230.referents.add(alte_user)
            
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c230.tags.add(t10)
                        
        if contact_created:
            nc122 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c230,
                note = """Relancer pour rdv...""",
                pinned = False,
                created_at = isoparse("2018-11-28 15:31:55.219688+00:00"),
                updated_at = isoparse("2018-11-28 15:31:55.219688+00:00"),
                # tags,
                # reminder
            )

            rnc122 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc122,
                linked_object_contactable=c230,
                done=True,
        
                            date=isoparse("2018-11-29"),
                        
            # persons
            )
            rnc122.persons.add(alte_user)
            nc122.created_at = isoparse("2018-11-28 15:31:55.219688+00:00")
            nc122.updated_at = isoparse("2018-11-28 15:31:55.219688+00:00")
        
        if contact_created:
            nc81 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c230,
                note = """Prendre des nouvelles""",
                pinned = False,
                created_at = isoparse("2018-10-02 07:28:26.450085+00:00"),
                updated_at = isoparse("2018-10-02 07:28:26.450085+00:00"),
                # tags,
                # reminder
            )

            rnc81 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc81,
                linked_object_contactable=c230,
                done=True,
        
                            date=isoparse("2018-11-05"),
                        
            # persons
            )
            rnc81.persons.add(alte_user)
            nc81.created_at = isoparse("2018-10-02 07:28:26.450085+00:00")
            nc81.updated_at = isoparse("2018-10-02 07:28:26.450085+00:00")
        
        if contact_created:
            nc25 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c230,
                note = """Envoyer doc PV pour EF""",
                pinned = False,
                created_at = isoparse("2018-09-25 13:29:33.632997+00:00"),
                updated_at = isoparse("2018-09-25 13:29:33.632997+00:00"),
                # tags,
                # reminder
            )

            rnc25 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc25,
                linked_object_contactable=c230,
                done=True,
        
                            date=isoparse("2018-09-28"),
                        
            # persons
            )
            rnc25.persons.add(alte_user)
            nc25.created_at = isoparse("2018-09-25 13:29:33.632997+00:00")
            nc25.updated_at = isoparse("2018-09-25 13:29:33.632997+00:00")
        

        address = "Rue de l'industrie  ".strip() + ", 69870 Chambost-Allières"
        if address == "  ,  ":
            address = ""

        c229, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Patrice",
            last_name="Rivier",
            email="rivier@cincinnativr.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Patrice",
                'last_name':"Rivier",
                'email':"rivier@cincinnativr.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Chambost-Allières",
                'zipcode':"69870",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 60 18 03",
                'mobile_phone':"06 83 46 00 07",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c229.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c229.tags.add(t11)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c229.tags.add(t10)
                        
        if contact_created:
            nc185 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c229,
                note = """Relance pour savoir s'ils ont pris connaissance de l'EF""",
                pinned = False,
                created_at = isoparse("2019-03-04 15:59:27.519655+00:00"),
                updated_at = isoparse("2019-03-04 15:59:27.519655+00:00"),
                # tags,
                # reminder
            )

            rnc185 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc185,
                linked_object_contactable=c229,
                done=True,
        
                            date=isoparse("2019-03-13"),
                        
            # persons
            )
            rnc185.persons.add(alte_user)
            nc185.created_at = isoparse("2019-03-04 15:59:27.519655+00:00")
            nc185.updated_at = isoparse("2019-03-04 15:59:27.519655+00:00")
        
        if contact_created:
            nc90 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c229,
                note = """Relance PV si pas de nouvelles""",
                pinned = False,
                created_at = isoparse("2018-11-06 15:17:02.274490+00:00"),
                updated_at = isoparse("2018-11-06 15:17:02.274490+00:00"),
                # tags,
                # reminder
            )

            rnc90 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc90,
                linked_object_contactable=c229,
                done=True,
        
                            date=isoparse("2018-12-06"),
                        
            # persons
            )
            rnc90.persons.add(alte_user)
            nc90.created_at = isoparse("2018-11-06 15:17:02.274490+00:00")
            nc90.updated_at = isoparse("2018-11-06 15:17:02.274490+00:00")
        
        if contact_created:
            nc82 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c229,
                note = """faire le point sur le COT et le PV""",
                pinned = False,
                created_at = isoparse("2018-10-02 09:48:39.043871+00:00"),
                updated_at = isoparse("2018-10-02 09:48:39.043871+00:00"),
                # tags,
                # reminder
            )

            rnc82 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc82,
                linked_object_contactable=c229,
                done=True,
        
                            date=isoparse("2018-10-24"),
                        
            # persons
            )
            rnc82.persons.add(alte_user)
            nc82.created_at = isoparse("2018-10-02 09:48:39.043871+00:00")
            nc82.updated_at = isoparse("2018-10-02 09:48:39.043871+00:00")
        
        if contact_created:
            nc24 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c229,
                note = """Envoyer info PV""",
                pinned = False,
                created_at = isoparse("2018-09-25 13:25:36.082416+00:00"),
                updated_at = isoparse("2018-09-25 13:25:36.082416+00:00"),
                # tags,
                # reminder
            )

            rnc24 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc24,
                linked_object_contactable=c229,
                done=True,
        
                            date=isoparse("2018-09-28"),
                        
            # persons
            )
            rnc24.persons.add(alte_user)
            nc24.created_at = isoparse("2018-09-25 13:25:36.082416+00:00")
            nc24.updated_at = isoparse("2018-09-25 13:25:36.082416+00:00")
        
        if contact_created:
            nc23 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c229,
                note = """Envoyer AO.""",
                pinned = False,
                created_at = isoparse("2018-09-25 13:25:10.646283+00:00"),
                updated_at = isoparse("2018-09-25 13:25:10.646283+00:00"),
                # tags,
                # reminder
            )

            rnc23 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc23,
                linked_object_contactable=c229,
                done=True,
        
                            date=isoparse("2018-09-28"),
                        
            # persons
            )
            rnc23.persons.add(alte_user)
            nc23.created_at = isoparse("2018-09-25 13:25:10.646283+00:00")
            nc23.updated_at = isoparse("2018-09-25 13:25:10.646283+00:00")
        

        address = "Place de l'Europe  ".strip() + ", 69550 Amplepuis"
        if address == "  ,  ":
            address = ""

        c180, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Jean-Yves",
            last_name="Montpre",
            email="jean-yves.montpre@creditmutuel.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Jean-Yves",
                'last_name':"Montpre",
                'email':"jean-yves.montpre@creditmutuel.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Amplepuis",
                'zipcode':"69550",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"0474107890",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c180.referents.add(alte_user)
            
        if contact_created:
            t16, created = Tag.objects.get_or_create(
                name="Banque",
                owning_group=alte_group,
                defaults={
                    'name': "Banque",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c180.tags.add(t16)
                        
        if contact_created:
            t19, created = Tag.objects.get_or_create(
                name="Banque - COR",
                owning_group=alte_group,
                defaults={
                    'name': "Banque - COR",
                    'description': "Banques mobilisées sur le territoire de la COR",
                    'owning_group': alte_group,
                }
            )
            c180.tags.add(t19)
                        
        if contact_created:
            t18, created = Tag.objects.get_or_create(
                name="Réunion-Sensibilisation",
                owning_group=alte_group,
                defaults={
                    'name': "Réunion-Sensibilisation",
                    'description': "Acteurs de la transaction imm mobilisés collectivement lors d'une réunion d'équipe, d'une formation",
                    'owning_group': alte_group,
                }
            )
            c180.tags.add(t18)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c146, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Guillaume",
            last_name="Coicadan",
            email="guillaume.coicadan@rhone.chambagri.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Guillaume",
                'last_name':"Coicadan",
                'email':"guillaume.coicadan@rhone.chambagri.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 78 19 61 22",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c146.referents.add(alte_user)
            
        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c146.tags.add(t9)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c143, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Bernard",
            last_name="Rossier",
            email="bernard.rossier@lamuresurazergues.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Bernard",
                'last_name':"Rossier",
                'email':"bernard.rossier@lamuresurazergues.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 03 04 73",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c143.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c143.tags.add(t11)
                        
        if contact_created:
            nc207 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c143,
                note = """Validation livraison chaufferie. + Attestation RGE installateur.""",
                pinned = False,
                created_at = isoparse("2019-03-26 09:29:49.214694+00:00"),
                updated_at = isoparse("2019-03-26 09:29:49.214694+00:00"),
                # tags,
                # reminder
            )

            rnc207 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc207,
                linked_object_contactable=c143,
                done=True,
        
                            date=isoparse("2019-04-01"),
                        
            # persons
            )
            rnc207.persons.add(alte_user)
            nc207.created_at = isoparse("2019-03-26 09:29:49.214694+00:00")
            nc207.updated_at = isoparse("2019-03-26 09:29:49.214694+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c142, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Sophie",
            last_name="Billiard",
            email="sophie-billiard@wanadoo.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Sophie",
                'last_name':"Billiard",
                'email':"sophie-billiard@wanadoo.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 80 04 96 28",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c142.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c142.tags.add(t11)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c139, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Pauline",
            last_name="Ferrez",
            email="p.ferrez@ouestlyonnais.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Pauline",
                'last_name':"Ferrez",
                'email':"p.ferrez@ouestlyonnais.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 78 48 35 43",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c139.referents.add(alte_user)
            
        if contact_created:
            t13, created = Tag.objects.get_or_create(
                name="SOL",
                owning_group=alte_group,
                defaults={
                    'name': "SOL",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c139.tags.add(t13)
                        
        if contact_created:
            nc200 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c139,
                note = """Relance WImmers et Maudry""",
                pinned = False,
                created_at = isoparse("2019-03-08 08:46:55.459855+00:00"),
                updated_at = isoparse("2019-03-08 08:46:55.459855+00:00"),
                # tags,
                # reminder
            )

            rnc200 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc200,
                linked_object_contactable=c139,
                done=True,
        
                            date=isoparse("2019-03-11"),
                        
            # persons
            )
            rnc200.persons.add(alte_user)
            nc200.created_at = isoparse("2019-03-08 08:46:55.459855+00:00")
            nc200.updated_at = isoparse("2019-03-08 08:46:55.459855+00:00")
        
        if contact_created:
            nc19 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c139,
                note = """Relancer contact SOL""",
                pinned = False,
                created_at = isoparse("2018-09-17 13:50:45.747551+00:00"),
                updated_at = isoparse("2018-09-17 13:50:45.747551+00:00"),
                # tags,
                # reminder
            )

            rnc19 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc19,
                linked_object_contactable=c139,
                done=True,
        
                            date=isoparse("2018-11-07"),
                        
            # persons
            )
            rnc19.persons.add(alte_user)
            nc19.created_at = isoparse("2018-09-17 13:50:45.747551+00:00")
            nc19.updated_at = isoparse("2018-09-17 13:50:45.747551+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c138, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Mélanie",
            last_name="Bréchoire",
            email="melanie.brechoire@semcoda.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Mélanie",
                'last_name':"Bréchoire",
                'email':"melanie.brechoire@semcoda.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 14 14 84",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c138.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c138.tags.add(t11)
                        
        if contact_created:
            nc79 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c138,
                note = """A relancer ? encore... Si pas de nouvelle appeler Dalmont""",
                pinned = False,
                created_at = isoparse("2018-10-02 07:23:12.828563+00:00"),
                updated_at = isoparse("2018-10-02 07:23:12.828563+00:00"),
                # tags,
                # reminder
            )

            rnc79 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc79,
                linked_object_contactable=c138,
                done=True,
        
                            date=isoparse("2018-10-25"),
                        
            # persons
            )
            rnc79.persons.add(alte_user)
            nc79.created_at = isoparse("2018-10-02 07:23:12.828563+00:00")
            nc79.updated_at = isoparse("2018-10-02 07:23:12.828563+00:00")
        
        if contact_created:
            nc26 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c138,
                note = """A relancer si elle ne m'a pas recontacté.""",
                pinned = False,
                created_at = isoparse("2018-09-26 07:52:00.844537+00:00"),
                updated_at = isoparse("2018-09-26 07:52:00.844537+00:00"),
                # tags,
                # reminder
            )

            rnc26 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc26,
                linked_object_contactable=c138,
                done=True,
        
                            date=isoparse("2018-10-02"),
                        
            # persons
            )
            rnc26.persons.add(alte_user)
            nc26.created_at = isoparse("2018-09-26 07:52:00.844537+00:00")
            nc26.updated_at = isoparse("2018-09-26 07:52:00.844537+00:00")
        
        if contact_created:
            nc18 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c138,
                note = """A contacter à son retour de congé dans le cadre du COT : 



Bonjour,

Nous sommes actuellement dans l’attente du passage en commission de nos projets de Tarare par la nouvelle direction de la SEMCODA.

A ce jour, nous n’avons toujours pas de confirmation que ces projets seront réalisés. Nous en saurons plus courant octobre.

En ce qui concerne ces deux projets : de résidence séniors et de maison médicale, il y a de grande chance qu’ils soient réalisés.

Toutefois, concernant les aides financières possibles il me semble plus judicieux de vous rapprocher de la chargée de projet, Mme BRECHOIRE, à la SEMCODA qui en étudiera la faisabilit��.

De souvenir, Mme Hurter vous avait précisé que notre bureau d’étude lié à la maison de santé nous avait confirmé qu’une connexion au chauffage urbain n’était pas envisageable pour cette opération. Certes il existe sans doute d’autres points durables possibles à développer.

Mme BRECHOIRE sera de retour de son congés le 24/09/18. Si vous lui transmettez votre proposition, elle l’étudiera et reviendra alors vers nous pour un diagnostic plus approfondi.

A ce jour, les dossiers DCE ayant été validés techniquement en l’état, nous ne pouvons lancer des études sans son consentement.

 

Je vous laisse ci-dessous ses coordonnées :

 

Mélanie BRECHOIRE 

Chargée d'opérations - Etudes

Département Maîtrise d'Ouvrage en Propre 

T. 04 74 14 14 84 - 

melanie.brechoire@semcoda.com""",
                pinned = False,
                created_at = isoparse("2018-09-17 13:21:16.823067+00:00"),
                updated_at = isoparse("2018-09-17 13:21:16.823067+00:00"),
                # tags,
                # reminder
            )

            rnc18 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc18,
                linked_object_contactable=c138,
                done=True,
        
                            date=isoparse("2018-09-25"),
                        
            # persons
            )
            rnc18.persons.add(alte_user)
            nc18.created_at = isoparse("2018-09-17 13:21:16.823067+00:00")
            nc18.updated_at = isoparse("2018-09-17 13:21:16.823067+00:00")
        

        address = "5 rue Jussieu  ".strip() + ", 69002 Lyon"
        if address == "  ,  ":
            address = ""

        c137, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Philippe",
            last_name="Reach",
            email="pr@reach-scharff.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Philippe",
                'last_name':"Reach",
                'email':"pr@reach-scharff.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Lyon",
                'zipcode':"69002",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"",
                'mobile_phone':"06 42 06 78 57",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c137.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c137.tags.add(t11)
                        

        address = "  ".strip() + ", 69170 Joux"
        if address == "  ,  ":
            address = ""

        c136, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Hofstetter",
            last_name="Guy",
            email="guy.hofstetter@gmail.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Hofstetter",
                'last_name':"Guy",
                'email':"guy.hofstetter@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Joux",
                'zipcode':"69170",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c136.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c136.tags.add(t11)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c135, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Cyrille",
            last_name="Dalmont",
            email="cyrille.dalmont@semcoda.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Cyrille",
                'last_name':"Dalmont",
                'email':"cyrille.dalmont@semcoda.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"07 61 10 44 85",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c135.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c135.tags.add(t11)
                        
        if contact_created:
            nc14 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c135,
                note = """A contacter pour prendre connaissance des nouveaux projets""",
                pinned = False,
                created_at = isoparse("2018-09-17 12:58:47.328106+00:00"),
                updated_at = isoparse("2018-09-17 12:58:47.328106+00:00"),
                # tags,
                # reminder
            )

            rnc14 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc14,
                linked_object_contactable=c135,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc14.persons.add(alte_user)
            nc14.created_at = isoparse("2018-09-17 12:58:47.328106+00:00")
            nc14.updated_at = isoparse("2018-09-17 12:58:47.328106+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c134, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Delphine",
            last_name="Boret",
            email="dboret@sudarchitectes.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Delphine",
                'last_name':"Boret",
                'email':"dboret@sudarchitectes.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c134.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c134.tags.add(t11)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c133, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Elody",
            last_name="Hurter",
            email="ehurter@sudarchitectes.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Elody",
                'last_name':"Hurter",
                'email':"ehurter@sudarchitectes.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c133.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c133.tags.add(t11)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c132, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Marc",
            last_name="Thevenet",
            email="marc.thevenet@be-eepos.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Marc",
                'last_name':"Thevenet",
                'email':"marc.thevenet@be-eepos.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"07 70 21 34 83",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c132.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c132.tags.add(t11)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c131, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Fabien",
            last_name="Hubert",
            email="fhubert@syder.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Fabien",
                'last_name':"Hubert",
                'email':"fhubert@syder.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 21 16 63 60",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c131.referents.add(alte_user)
            
        if contact_created:
            t12, created = Tag.objects.get_or_create(
                name="COT TERMINE",
                owning_group=alte_group,
                defaults={
                    'name': "COT TERMINE",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c131.tags.add(t12)
                        
        if contact_created:
            nc227 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c131,
                note = """Avancement projet RC Ronno ?""",
                pinned = False,
                created_at = isoparse("2019-05-21 13:27:05.635133+00:00"),
                updated_at = isoparse("2019-05-21 13:27:05.635133+00:00"),
                # tags,
                # reminder
            )

            rnc227 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc227,
                linked_object_contactable=c131,
                done=True,
        
                            date=isoparse("2019-07-10"),
                        
            # persons
            )
            rnc227.persons.add(alte_user)
            nc227.created_at = isoparse("2019-05-21 13:27:05.635133+00:00")
            nc227.updated_at = isoparse("2019-05-21 13:27:05.635133+00:00")
        
        if contact_created:
            nc206 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c131,
                note = """Prendre news pour caler visite en lien avec FIBOIS""",
                pinned = False,
                created_at = isoparse("2019-03-25 12:56:13.127027+00:00"),
                updated_at = isoparse("2019-03-25 12:56:13.127027+00:00"),
                # tags,
                # reminder
            )

            rnc206 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc206,
                linked_object_contactable=c131,
                done=True,
        
                            date=isoparse("2019-04-08"),
                        
            # persons
            )
            rnc206.persons.add(alte_user)
            nc206.created_at = isoparse("2019-03-25 12:56:13.127027+00:00")
            nc206.updated_at = isoparse("2019-03-25 12:56:13.127027+00:00")
        
        if contact_created:
            nc15 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c131,
                note = """A contacter pour savoir comment va se passer la construction... Éventuellement prévoir une visite ?""",
                pinned = False,
                created_at = isoparse("2018-09-17 12:59:55.191576+00:00"),
                updated_at = isoparse("2018-09-17 12:59:55.191576+00:00"),
                # tags,
                # reminder
            )

            rnc15 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc15,
                linked_object_contactable=c131,
                done=True,
        
                            date=isoparse("2018-12-10"),
                        
            # persons
            )
            rnc15.persons.add(alte_user)
            nc15.created_at = isoparse("2018-09-17 12:59:55.191576+00:00")
            nc15.updated_at = isoparse("2018-09-17 12:59:55.191576+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c130, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Hervé",
            last_name="Thion",
            email="herve.thion@thion-arvix.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Hervé",
                'last_name':"Thion",
                'email':"herve.thion@thion-arvix.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 89 89 69",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c130.referents.add(alte_user)
            
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c130.tags.add(t10)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c127, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="France Noëlle",
            last_name="Lefaucheux",
            email="france-noelle.lefaucheux@ademe.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"France Noëlle",
                'last_name':"Lefaucheux",
                'email':"france-noelle.lefaucheux@ademe.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 72 83 46 19",
                'mobile_phone':"06 07 01 68 23",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c127.referents.add(alte_user)
            
        if contact_created:
            t9, created = Tag.objects.get_or_create(
                name="COT",
                owning_group=alte_group,
                defaults={
                    'name': "COT",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c127.tags.add(t9)
                        
        if contact_created:
            nc306 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c127,
                note = """Prendre des nouvelles pour la signature du PV""",
                pinned = False,
                created_at = isoparse("2019-10-01 10:30:58.755477+00:00"),
                updated_at = isoparse("2019-10-01 10:30:58.755477+00:00"),
                # tags,
                # reminder
            )

            rnc306 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc306,
                linked_object_contactable=c127,
                done=True,
        
                            date=isoparse("2019-10-16"),
                        
            # persons
            )
            rnc306.persons.add(alte_user)
            nc306.created_at = isoparse("2019-10-01 10:30:58.755477+00:00")
            nc306.updated_at = isoparse("2019-10-01 10:30:58.755477+00:00")
        
        if contact_created:
            nc258 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c127,
                note = """Prévoir COTECH""",
                pinned = False,
                created_at = isoparse("2019-08-02 09:15:59.010251+00:00"),
                updated_at = isoparse("2019-08-02 09:15:59.010251+00:00"),
                # tags,
                # reminder
            )

            rnc258 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc258,
                linked_object_contactable=c127,
                done=True,
        
                            date=isoparse("2019-09-02"),
                        
            # persons
            )
            rnc258.persons.add(alte_user)
            nc258.created_at = isoparse("2019-08-02 09:15:59.010251+00:00")
            nc258.updated_at = isoparse("2019-08-02 09:15:59.010251+00:00")
        
        if contact_created:
            nc248 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c127,
                note = """Prendre une date pour réunion physique. 

Mettre Claire en copie ou demander ces questions.""",
                pinned = False,
                created_at = isoparse("2019-07-23 09:50:10.779848+00:00"),
                updated_at = isoparse("2019-07-23 09:50:10.779848+00:00"),
                # tags,
                # reminder
            )

            rnc248 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc248,
                linked_object_contactable=c127,
                done=True,
        
                            date=isoparse("2019-07-30"),
                        
            # persons
            )
            rnc248.persons.add(alte_user)
            nc248.created_at = isoparse("2019-07-23 09:50:10.779848+00:00")
            nc248.updated_at = isoparse("2019-07-23 09:50:10.779848+00:00")
        
        if contact_created:
            nc201 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c127,
                note = """Envoyer document et proposer une nouvelle date pour COPIL""",
                pinned = False,
                created_at = isoparse("2019-03-08 09:27:56.165347+00:00"),
                updated_at = isoparse("2019-03-08 09:27:56.165347+00:00"),
                # tags,
                # reminder
            )

            rnc201 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc201,
                linked_object_contactable=c127,
                done=True,
        
                            date=isoparse("2019-03-11"),
                        
            # persons
            )
            rnc201.persons.add(alte_user)
            nc201.created_at = isoparse("2019-03-08 09:27:56.165347+00:00")
            nc201.updated_at = isoparse("2019-03-08 09:27:56.165347+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c126, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Michel",
            last_name="Majérus",
            email="topdesign@wanadoo.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Michel",
                'last_name':"Majérus",
                'email':"topdesign@wanadoo.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 08 42 66 23",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c126.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c126.tags.add(t11)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c126.tags.add(t10)
                        
        if contact_created:
            nc16 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c126,
                note = """A relancer pour faire le point COT sur le projet (SSC ? CETI ?)""",
                pinned = False,
                created_at = isoparse("2018-09-17 13:01:03.776964+00:00"),
                updated_at = isoparse("2018-09-17 13:01:03.776964+00:00"),
                # tags,
                # reminder
            )

            rnc16 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc16,
                linked_object_contactable=c126,
                done=True,
        
                            date=isoparse("2018-11-05"),
                        
            # persons
            )
            rnc16.persons.add(alte_user)
            nc16.created_at = isoparse("2018-09-17 13:01:03.776964+00:00")
            nc16.updated_at = isoparse("2018-09-17 13:01:03.776964+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c125, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Nadir",
            last_name="Aït Yahia",
            email="nadir@shopstore.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Nadir",
                'last_name':"Aït Yahia",
                'email':"nadir@shopstore.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 05 32 23",
                'mobile_phone':"06 51 29 69 78",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c125.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c125.tags.add(t11)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c125.tags.add(t10)
                        
        if contact_created:
            nc120 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c125,
                note = """Relancer pour avoir news PC et archi""",
                pinned = False,
                created_at = isoparse("2018-11-28 15:28:32.391696+00:00"),
                updated_at = isoparse("2018-11-28 15:28:32.391696+00:00"),
                # tags,
                # reminder
            )

            rnc120 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc120,
                linked_object_contactable=c125,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc120.persons.add(alte_user)
            nc120.created_at = isoparse("2018-11-28 15:28:32.391696+00:00")
            nc120.updated_at = isoparse("2018-11-28 15:28:32.391696+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c124, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Philippe",
            last_name="Jouvé",
            email="ph.jouve@transport-jouve.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Philippe",
                'last_name':"Jouvé",
                'email':"ph.jouve@transport-jouve.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 05 98 70",
                'mobile_phone':"06 62 90 65 21",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c124.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c124.tags.add(t11)
                        
        if contact_created:
            t10, created = Tag.objects.get_or_create(
                name="PV-COR",
                owning_group=alte_group,
                defaults={
                    'name': "PV-COR",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c124.tags.add(t10)
                        
        if contact_created:
            nc13 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c124,
                note = """Intéressé par du PV dans le cadre de la construction de son local de stockage sur la zone de Boiron.""",
                pinned = False,
                created_at = isoparse("2018-09-14 15:20:16.070475+00:00"),
                updated_at = isoparse("2018-09-14 15:20:16.070475+00:00"),
                # tags,
                # reminder
            )

            rnc13 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc13,
                linked_object_contactable=c124,
                done=False,
        
            # persons
            )
            rnc13.persons.add(alte_user)
            nc13.created_at = isoparse("2018-09-14 15:20:16.070475+00:00")
            nc13.updated_at = isoparse("2018-09-14 15:20:16.070475+00:00")
        
        if contact_created:
            nc12 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c124,
                note = """A voir avec lui s'il a connaissance des entreprises installées avec lui sur Boiron .""",
                pinned = False,
                created_at = isoparse("2018-09-11 14:32:53.494491+00:00"),
                updated_at = isoparse("2018-09-11 14:32:53.494491+00:00"),
                # tags,
                # reminder
            )

            rnc12 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc12,
                linked_object_contactable=c124,
                done=True,
        
                            date=isoparse("2018-10-29"),
                        
            # persons
            )
            rnc12.persons.add(alte_user)
            nc12.created_at = isoparse("2018-09-11 14:32:53.494491+00:00")
            nc12.updated_at = isoparse("2018-09-11 14:32:53.494491+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c123, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Kevin",
            last_name="Bazile",
            email="k.bazile@fibois69.org",
            defaults={
                'owning_group':alte_group,
                'first_name':"Kevin",
                'last_name':"Bazile",
                'email':"k.bazile@fibois69.org",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 67 21 93",
                'mobile_phone':"07 72 33 71 78",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c123.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c123.tags.add(t11)
                        
        if contact_created:
            nc80 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c123,
                note = """Communication ?""",
                pinned = False,
                created_at = isoparse("2018-10-02 07:26:51.767206+00:00"),
                updated_at = isoparse("2018-10-02 07:26:51.767206+00:00"),
                # tags,
                # reminder
            )

            rnc80 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc80,
                linked_object_contactable=c123,
                done=True,
        
                            date=isoparse("2018-10-24"),
                        
            # persons
            )
            rnc80.persons.add(alte_user)
            nc80.created_at = isoparse("2018-10-02 07:26:51.767206+00:00")
            nc80.updated_at = isoparse("2018-10-02 07:26:51.767206+00:00")
        

        address = "  ".strip() + ", 69550 Amplepluis"
        if address == "  ,  ":
            address = ""

        c122, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Pierre",
            last_name="Gouttenoire",
            email="pgoutenoire@gmail.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Pierre",
                'last_name':"Gouttenoire",
                'email':"pgoutenoire@gmail.com",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"Amplepluis",
                'zipcode':"69550",
                'lat':0,
                'lon':0,
                'country':"France",
                'phone':"",
                'mobile_phone':"06 08 94 60 49",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c122.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c122.tags.add(t11)
                        
        if contact_created:
            nc343 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c122,
                note = """Prévoir visite""",
                pinned = False,
                created_at = isoparse("2020-03-09 15:43:21.186334+00:00"),
                updated_at = isoparse("2020-03-09 15:43:21.186334+00:00"),
                # tags,
                # reminder
            )

            rnc343 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc343,
                linked_object_contactable=c122,
                done=True,
        
                            date=isoparse("2020-03-18"),
                        
            # persons
            )
            rnc343.persons.add(alte_user)
            nc343.created_at = isoparse("2020-03-09 15:43:21.186334+00:00")
            nc343.updated_at = isoparse("2020-03-09 15:43:21.186334+00:00")
        
        if contact_created:
            nc331 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c122,
                note = """prévoir visite et mise en place relève compteur""",
                pinned = False,
                created_at = isoparse("2019-12-23 08:52:34.435556+00:00"),
                updated_at = isoparse("2019-12-23 08:52:34.435556+00:00"),
                # tags,
                # reminder
            )

            rnc331 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc331,
                linked_object_contactable=c122,
                done=True,
        
                            date=isoparse("2020-01-09"),
                        
            # persons
            )
            rnc331.persons.add(alte_user)
            nc331.created_at = isoparse("2019-12-23 08:52:34.435556+00:00")
            nc331.updated_at = isoparse("2019-12-23 08:52:34.435556+00:00")
        
        if contact_created:
            nc313 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c122,
                note = """des nouvelles de l'ADEME ?""",
                pinned = False,
                created_at = isoparse("2019-10-25 12:07:19.671690+00:00"),
                updated_at = isoparse("2019-10-25 12:07:19.671690+00:00"),
                # tags,
                # reminder
            )

            rnc313 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc313,
                linked_object_contactable=c122,
                done=True,
        
                            date=isoparse("2019-11-19"),
                        
            # persons
            )
            rnc313.persons.add(alte_user)
            nc313.created_at = isoparse("2019-10-25 12:07:19.671690+00:00")
            nc313.updated_at = isoparse("2019-10-25 12:07:19.671690+00:00")
        
        if contact_created:
            nc254 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c122,
                note = """retour annexe E ?""",
                pinned = False,
                created_at = isoparse("2019-07-29 10:07:59.953432+00:00"),
                updated_at = isoparse("2019-07-29 10:07:59.953432+00:00"),
                # tags,
                # reminder
            )

            rnc254 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc254,
                linked_object_contactable=c122,
                done=True,
        
                            date=isoparse("2019-08-26"),
                        
            # persons
            )
            rnc254.persons.add(alte_user)
            nc254.created_at = isoparse("2019-07-29 10:07:59.953432+00:00")
            nc254.updated_at = isoparse("2019-07-29 10:07:59.953432+00:00")
        
        if contact_created:
            nc230 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c122,
                note = """Rappeler. des nouvelles ?""",
                pinned = False,
                created_at = isoparse("2019-05-21 13:31:33.638749+00:00"),
                updated_at = isoparse("2019-05-21 13:31:33.638749+00:00"),
                # tags,
                # reminder
            )

            rnc230 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc230,
                linked_object_contactable=c122,
                done=True,
        
                            date=isoparse("2019-07-11"),
                        
            # persons
            )
            rnc230.persons.add(alte_user)
            nc230.created_at = isoparse("2019-05-21 13:31:33.638749+00:00")
            nc230.updated_at = isoparse("2019-05-21 13:31:33.638749+00:00")
        
        if contact_created:
            nc212 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c122,
                note = """Relance... Et si pas de réponses de BET. Proposer une autre piste de réflexion.""",
                pinned = False,
                created_at = isoparse("2019-04-11 08:10:41.390638+00:00"),
                updated_at = isoparse("2019-04-11 08:10:41.390638+00:00"),
                # tags,
                # reminder
            )

            rnc212 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc212,
                linked_object_contactable=c122,
                done=True,
        
                            date=isoparse("2019-04-29"),
                        
            # persons
            )
            rnc212.persons.add(alte_user)
            nc212.created_at = isoparse("2019-04-11 08:10:41.390638+00:00")
            nc212.updated_at = isoparse("2019-04-11 08:10:41.390638+00:00")
        
        if contact_created:
            nc194 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c122,
                note = """Retour BET ? Relance...""",
                pinned = False,
                created_at = isoparse("2019-03-06 09:57:05.719779+00:00"),
                updated_at = isoparse("2019-03-06 09:57:05.719779+00:00"),
                # tags,
                # reminder
            )

            rnc194 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc194,
                linked_object_contactable=c122,
                done=True,
        
                            date=isoparse("2019-03-14"),
                        
            # persons
            )
            rnc194.persons.add(alte_user)
            nc194.created_at = isoparse("2019-03-06 09:57:05.719779+00:00")
            nc194.updated_at = isoparse("2019-03-06 09:57:05.719779+00:00")
        
        if contact_created:
            nc167 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c122,
                note = """Organisation réunion entre l'ensemble des acteurs;""",
                pinned = False,
                created_at = isoparse("2019-01-15 13:25:22.882239+00:00"),
                updated_at = isoparse("2019-01-15 13:25:22.882239+00:00"),
                # tags,
                # reminder
            )

            rnc167 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc167,
                linked_object_contactable=c122,
                done=True,
        
                            date=isoparse("2019-01-29"),
                        
            # persons
            )
            rnc167.persons.add(alte_user)
            nc167.created_at = isoparse("2019-01-15 13:25:22.882239+00:00")
            nc167.updated_at = isoparse("2019-01-15 13:25:22.882239+00:00")
        
        if contact_created:
            nc156 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c122,
                note = """Relancer pour BET et sans doute prévoir un rdv avec les différents acteurs.""",
                pinned = False,
                created_at = isoparse("2019-01-07 16:47:56.250680+00:00"),
                updated_at = isoparse("2019-01-07 16:47:56.250680+00:00"),
                # tags,
                # reminder
            )

            rnc156 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc156,
                linked_object_contactable=c122,
                done=True,
        
                            date=isoparse("2019-01-14"),
                        
            # persons
            )
            rnc156.persons.add(alte_user)
            nc156.created_at = isoparse("2019-01-07 16:47:56.250680+00:00")
            nc156.updated_at = isoparse("2019-01-07 16:47:56.250680+00:00")
        
        if contact_created:
            nc116 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c122,
                note = """Faire le point avec lui pour l'accompagner dans son dossier de sub""",
                pinned = False,
                created_at = isoparse("2018-11-28 15:04:29.972956+00:00"),
                updated_at = isoparse("2018-11-28 15:04:29.972956+00:00"),
                # tags,
                # reminder
            )

            rnc116 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc116,
                linked_object_contactable=c122,
                done=True,
        
                            date=isoparse("2018-12-10"),
                        
            # persons
            )
            rnc116.persons.add(alte_user)
            nc116.created_at = isoparse("2018-11-28 15:04:29.972956+00:00")
            nc116.updated_at = isoparse("2018-11-28 15:04:29.972956+00:00")
        
        if contact_created:
            nc87 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c122,
                note = """Relance dossier de sub""",
                pinned = False,
                created_at = isoparse("2018-11-06 10:24:22.271786+00:00"),
                updated_at = isoparse("2018-11-06 10:24:22.271786+00:00"),
                # tags,
                # reminder
            )

            rnc87 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc87,
                linked_object_contactable=c122,
                done=True,
        
                            date=isoparse("2018-11-15"),
                        
            # persons
            )
            rnc87.persons.add(alte_user)
            nc87.created_at = isoparse("2018-11-06 10:24:22.271786+00:00")
            nc87.updated_at = isoparse("2018-11-06 10:24:22.271786+00:00")
        
        if contact_created:
            nc11 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c122,
                note = """A relancer pour prendre contact de l'avancement du projet""",
                pinned = False,
                created_at = isoparse("2018-09-06 13:37:37.694725+00:00"),
                updated_at = isoparse("2018-09-06 13:37:37.694725+00:00"),
                # tags,
                # reminder
            )

            rnc11 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc11,
                linked_object_contactable=c122,
                done=True,
        
                            date=isoparse("2018-10-24"),
                        
            # persons
            )
            rnc11.persons.add(alte_user)
            nc11.created_at = isoparse("2018-09-06 13:37:37.694725+00:00")
            nc11.updated_at = isoparse("2018-09-06 13:37:37.694725+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c121, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Patrick",
            last_name="Bourrassaut",
            email="bourrassautp@bourgenbresse.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Patrick",
                'last_name':"Bourrassaut",
                'email':"bourrassautp@bourgenbresse.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 70 58 88 46",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c121.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c121.tags.add(t11)
                        
        if contact_created:
            nc197 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c121,
                note = """Relancer afin de savoir comment se termine l'histoire...""",
                pinned = False,
                created_at = isoparse("2019-03-06 10:03:25.066609+00:00"),
                updated_at = isoparse("2019-03-06 10:03:25.066609+00:00"),
                # tags,
                # reminder
            )

            rnc197 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc197,
                linked_object_contactable=c121,
                done=True,
        
                            date=isoparse("2019-03-14"),
                        
            # persons
            )
            rnc197.persons.add(alte_user)
            nc197.created_at = isoparse("2019-03-06 10:03:25.066609+00:00")
            nc197.updated_at = isoparse("2019-03-06 10:03:25.066609+00:00")
        
        if contact_created:
            nc96 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c121,
                note = """Nouvelle de l'EF ? demander à l'archi et à Helair""",
                pinned = False,
                created_at = isoparse("2018-11-09 09:47:41.814211+00:00"),
                updated_at = isoparse("2018-11-09 09:47:41.814211+00:00"),
                # tags,
                # reminder
            )

            rnc96 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc96,
                linked_object_contactable=c121,
                done=True,
        
                            date=isoparse("2018-12-17"),
                        
            # persons
            )
            rnc96.persons.add(alte_user)
            nc96.created_at = isoparse("2018-11-09 09:47:41.814211+00:00")
            nc96.updated_at = isoparse("2018-11-09 09:47:41.814211+00:00")
        
        if contact_created:
            nc10 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c121,
                note = """Prendre des nouvelles concernant APP PCAET et CdC MOE.""",
                pinned = False,
                created_at = isoparse("2018-09-06 13:26:27.357198+00:00"),
                updated_at = isoparse("2018-09-06 13:26:27.357198+00:00"),
                # tags,
                # reminder
            )

            rnc10 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc10,
                linked_object_contactable=c121,
                done=True,
        
                            date=isoparse("2018-10-09"),
                        
            # persons
            )
            rnc10.persons.add(alte_user)
            nc10.created_at = isoparse("2018-09-06 13:26:27.357198+00:00")
            nc10.updated_at = isoparse("2018-09-06 13:26:27.357198+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c120, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Elisabet",
            last_name="Polzella",
            email="elisabeth.polzella@darezei.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Elisabet",
                'last_name':"Polzella",
                'email':"elisabeth.polzella@darezei.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 72 81 61",
                'mobile_phone':"06 03 21 47 56",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c120.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c120.tags.add(t11)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c119, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Bernard",
            last_name="ROUX",
            email="bernard.roux@dareize.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Bernard",
                'last_name':"ROUX",
                'email':"bernard.roux@dareize.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c119.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c119.tags.add(t11)
                        
        if contact_created:
            nc199 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c119,
                note = """Voir avec Julien s'il a avancé avec eux sinon je m'en occuperai""",
                pinned = False,
                created_at = isoparse("2019-03-06 10:44:53.572959+00:00"),
                updated_at = isoparse("2019-03-06 10:44:53.572959+00:00"),
                # tags,
                # reminder
            )

            rnc199 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc199,
                linked_object_contactable=c119,
                done=True,
        
                            date=isoparse("2019-03-14"),
                        
            # persons
            )
            rnc199.persons.add(alte_user)
            nc199.created_at = isoparse("2019-03-06 10:44:53.572959+00:00")
            nc199.updated_at = isoparse("2019-03-06 10:44:53.572959+00:00")
        
        if contact_created:
            nc17 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c119,
                note = """Délibération ..""",
                pinned = False,
                created_at = isoparse("2018-09-17 13:01:40.556532+00:00"),
                updated_at = isoparse("2018-09-17 13:01:40.556532+00:00"),
                # tags,
                # reminder
            )

            rnc17 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc17,
                linked_object_contactable=c119,
                done=True,
        
                            date=isoparse("2018-09-26"),
                        
            # persons
            )
            rnc17.persons.add(alte_user)
            nc17.created_at = isoparse("2018-09-17 13:01:40.556532+00:00")
            nc17.updated_at = isoparse("2018-09-17 13:01:40.556532+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c118, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Sophie",
            last_name="Moncorge",
            email="Sophie.Moncorge@c-or.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Sophie",
                'last_name':"Moncorge",
                'email':"Sophie.Moncorge@c-or.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 37 82 78 07",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c118.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c118.tags.add(t11)
                        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c117, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Simon",
            last_name="Perrache",
            email="simon.peyrache@c-or.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Simon",
                'last_name':"Perrache",
                'email':"simon.peyrache@c-or.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"",
                'mobile_phone':"06 66 33 73 03",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c117.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c117.tags.add(t11)
                        
        if contact_created:
            nc170 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c117,
                note = """QUID avec la maire de St Clément ?""",
                pinned = False,
                created_at = isoparse("2019-01-15 15:04:49.749747+00:00"),
                updated_at = isoparse("2019-01-15 15:04:49.749747+00:00"),
                # tags,
                # reminder
            )

            rnc170 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc170,
                linked_object_contactable=c117,
                done=True,
        
                            date=isoparse("2019-01-17"),
                        
            # persons
            )
            rnc170.persons.add(alte_user)
            nc170.created_at = isoparse("2019-01-15 15:04:49.749747+00:00")
            nc170.updated_at = isoparse("2019-01-15 15:04:49.749747+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c116, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Mathieu",
            last_name="Bernage",
            email="maintenance@hridaya-yoga.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Mathieu",
                'last_name':"Bernage",
                'email':"maintenance@hridaya-yoga.fr",
                'client_account':None,
                'civility':civility("M."),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"0624863912",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c116.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c116.tags.add(t11)
                        
        if contact_created:
            nc195 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c116,
                note = """Prendre des nouvelles du projet""",
                pinned = False,
                created_at = isoparse("2019-03-06 09:58:24.754521+00:00"),
                updated_at = isoparse("2019-03-06 09:58:24.754521+00:00"),
                # tags,
                # reminder
            )

            rnc195 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc195,
                linked_object_contactable=c116,
                done=True,
        
                            date=isoparse("2019-04-08"),
                        
            # persons
            )
            rnc195.persons.add(alte_user)
            nc195.created_at = isoparse("2019-03-06 09:58:24.754521+00:00")
            nc195.updated_at = isoparse("2019-03-06 09:58:24.754521+00:00")
        
        if contact_created:
            nc9 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c116,
                note = """Il s'occupe de la maintenance. Est assez intéressé par la technique et a des bases et connaissances solides. Souhaite faire les choses correctement.""",
                pinned = False,
                created_at = isoparse("2018-09-06 13:13:16.747750+00:00"),
                updated_at = isoparse("2018-09-06 13:13:16.747750+00:00"),
                # tags,
                # reminder
            )

            rnc9 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc9,
                linked_object_contactable=c116,
                done=False,
        
            # persons
            )
            rnc9.persons.add(alte_user)
            nc9.created_at = isoparse("2018-09-06 13:13:16.747750+00:00")
            nc9.updated_at = isoparse("2018-09-06 13:13:16.747750+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c115, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Déborah",
            last_name="Blin",
            email="deborah@hridaya-yoga.fr",
            defaults={
                'owning_group':alte_group,
                'first_name':"Déborah",
                'last_name':"Blin",
                'email':"deborah@hridaya-yoga.fr",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"06 14 78 13 41",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c115.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c115.tags.add(t11)
                        
        if contact_created:
            nc196 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c115,
                note = """Prendre des nouvelles du projet""",
                pinned = False,
                created_at = isoparse("2019-03-06 09:59:05.790004+00:00"),
                updated_at = isoparse("2019-03-06 09:59:05.790004+00:00"),
                # tags,
                # reminder
            )

            rnc196 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc196,
                linked_object_contactable=c115,
                done=True,
        
                            date=isoparse("2019-03-11"),
                        
            # persons
            )
            rnc196.persons.add(alte_user)
            nc196.created_at = isoparse("2019-03-06 09:59:05.790004+00:00")
            nc196.updated_at = isoparse("2019-03-06 09:59:05.790004+00:00")
        
        if contact_created:
            nc119 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c115,
                note = """Relancer...""",
                pinned = False,
                created_at = isoparse("2018-11-28 15:27:40.768742+00:00"),
                updated_at = isoparse("2018-11-28 15:27:40.768742+00:00"),
                # tags,
                # reminder
            )

            rnc119 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc119,
                linked_object_contactable=c115,
                done=True,
        
                            date=isoparse("2019-01-07"),
                        
            # persons
            )
            rnc119.persons.add(alte_user)
            nc119.created_at = isoparse("2018-11-28 15:27:40.768742+00:00")
            nc119.updated_at = isoparse("2018-11-28 15:27:40.768742+00:00")
        
        if contact_created:
            nc8 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c115,
                note = """A recontacter pour faire le point sur le projet.""",
                pinned = False,
                created_at = isoparse("2018-09-06 12:56:03.965368+00:00"),
                updated_at = isoparse("2018-09-06 12:56:03.965368+00:00"),
                # tags,
                # reminder
            )

            rnc8 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc8,
                linked_object_contactable=c115,
                done=True,
        
                            date=isoparse("2018-10-29"),
                        
            # persons
            )
            rnc8.persons.add(alte_user)
            nc8.created_at = isoparse("2018-09-06 12:56:03.965368+00:00")
            nc8.updated_at = isoparse("2018-09-06 12:56:03.965368+00:00")
        

        address = "  ".strip() + ",  "
        if address == "  ,  ":
            address = ""

        c114, contact_created = Contact.objects.get_or_create(
            owning_group=alte_group,
            first_name="Christine",
            last_name="De Saint Jean",
            email="mairieancy@numericable.com",
            defaults={
                'owning_group':alte_group,
                'first_name':"Christine",
                'last_name':"De Saint Jean",
                'email':"mairieancy@numericable.com",
                'client_account':None,
                'civility':civility("Mme"),
                'address':address,
                'town':"",
                'zipcode':"",
                'lat':0,
                'lon':0,
                'country':"",
                'phone':"04 74 05 83 58",
                'mobile_phone':"",
                'fax':"",
                'phone_cache':'',
                'mobile_phone_cache':'',
                'fax_cache':'',
                'confirmed':True,
            }
            
        )

        if contact_created:
            c114.referents.add(alte_user)
            
        if contact_created:
            t11, created = Tag.objects.get_or_create(
                name="COT EN COURS",
                owning_group=alte_group,
                defaults={
                    'name': "COT EN COURS",
                    'description': "",
                    'owning_group': alte_group,
                }
            )
            c114.tags.add(t11)
                        
        if contact_created:
            nc86 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c114,
                note = """Relance COT""",
                pinned = False,
                created_at = isoparse("2018-10-30 10:28:18.159872+00:00"),
                updated_at = isoparse("2018-10-30 10:28:18.159872+00:00"),
                # tags,
                # reminder
            )

            rnc86 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc86,
                linked_object_contactable=c114,
                done=True,
        
                            date=isoparse("2018-11-12"),
                        
            # persons
            )
            rnc86.persons.add(alte_user)
            nc86.created_at = isoparse("2018-10-30 10:28:18.159872+00:00")
            nc86.updated_at = isoparse("2018-10-30 10:28:18.159872+00:00")
        
        if contact_created:
            nc6 = Note.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object = c114,
                note = """A recontacter pour savoir ou en est le projet""",
                pinned = False,
                created_at = isoparse("2018-09-06 12:42:32.846294+00:00"),
                updated_at = isoparse("2018-09-06 12:42:32.846294+00:00"),
                # tags,
                # reminder
            )

            rnc6 = Reminder.objects.create(
                owning_group=alte_group,
                creator = alte_user,
                linked_object_task=nc6,
                linked_object_contactable=c114,
                done=True,
        
                            date=isoparse("2018-09-11"),
                        
            # persons
            )
            rnc6.persons.add(alte_user)
            nc6.created_at = isoparse("2018-09-06 12:42:32.846294+00:00")
            nc6.updated_at = isoparse("2018-09-06 12:42:32.846294+00:00")
        
        return
        
