# Generated by Django 2.2 on 2019-05-07 09:34

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import core.models


class Migration(migrations.Migration):

    dependencies = [
        ('energies', '0009_buildingheatingconsumption_data'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductionSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('identifier', models.CharField(choices=[('oil_boiler_standard', 'Chaudière fioul standard'), ('oil_boiler_condensing', 'Chaudière fioul condensation'), ('gaz_boiler_standard', 'Chaudière gaz standard'), ('gaz_boiler_condensing', 'Chaudière gaz condensation'), ('propane_boiler_standard', 'Chaudière propane standard'), ('propane_boiler_condensing', 'Chaudière propane condensation'), ('electric_boiler', 'Chaudière électrique'), ('electric_radiators', 'Radiateurs électriques'), ('heat_pump_air_air', 'PAC air/air'), ('heat_pump_air_water', 'PAC air/eau '), ('heat_pump_geothermal_lte', 'PAC géothermale avec émetteurs basse température'), ('heat_pump_geothermal_vlte', 'PAC géothermale avec émetteurs très basse température'), ('thermodynamic_cmv', 'VMC thermodynamique'), ('log_stove', 'Poêle à bûches récent'), ('granulated_wood_stove', 'Poêle à bois granulés'), ('granulated_wood_boiler', 'Chaudière à bois granulés'), ('log_boiler', 'Chaudière à bûches'), ('shredded_wood_boiler', 'Chaudière à bois déchiqueté'), ('recent_log_boiler_stove', 'Poêle à bûches récent bouilleur'), ('granulated_wood_boiler_stove', 'Poêle à bois granulés bouilleur'), ('electric_water_heater', 'Chauffe-eau électrique'), ('ceti_outside_air', 'CETI sur air extérieur'), ('ceti_inside_air', 'CETI sur air intérieur'), ('ceti_extracted_air', 'CETI sur air extrait'), ('heat_pump_using_waste_heat', 'PAC valorisant une chaleur perdue (eaux grises etc.)'), ('heating_network', 'RCU (Réseau de Chaleur Urbain)')], max_length=50, unique=True, verbose_name='Identifiant')),
                ('is_heating', models.BooleanField(default=False, verbose_name='Pour le chauffage ?')),
                ('is_hot_water', models.BooleanField(default=False, verbose_name="Pour l'eau chaude ?")),
                ('is_individual', models.BooleanField(default=False, verbose_name='Pour le logement individuel ?')),
                ('is_multi_unit', models.BooleanField(default=False, verbose_name='Pour le logement collectif ?')),
                ('is_hydro', models.BooleanField(default=False, verbose_name='Émission hydrolique centralisée ?')),
                ('efficiency_heating', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Rendement ou COP du chauffage')),
                ('efficiency_hot_water', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name="Rendement ou COP de l'eau chaude")),
                ('enr_ratio_heating', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('1'))], verbose_name="Taux d'ENR du chauffage")),
                ('enr_ratio_hot_water', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('1'))], verbose_name="Taux d'ENR de l'eau chaude")),
                ('investment_individual_heating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Investissement pour le chauffage - logement individuel')),
                ('investment_individual_hot_water', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name="Investissement pour l'eau chaude - logement individuel")),
                ('maintenance_individual_heating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Maintenance annuelle pour le chauffage - logement individuel')),
                ('maintenance_individual_hot_water', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name="Maintenance annuelle pour l'eau chaude' - logement individuel")),
                ('investment_small_multi_unit_heating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Investissement pour le chauffage - logement collectif petit')),
                ('investment_small_multi_unit_hot_water', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name="Investissement pour l'eau chaude - logement collectif petit")),
                ('maintenance_small_multi_unit_heating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Maintenance annuelle pour le chauffage - logement collectif petit')),
                ('maintenance_small_multi_unit_hot_water', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name="Maintenance annuelle pour l'eau chaude - logement collectif petit")),
                ('provisions_small_multi_unit_heating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Provisions pour grosses réparations pour le chauffage - logement collectif petit')),
                ('provisions_small_multi_unit_hot_water', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name="Provisions pour grosses réparations pour l'eau chaude - logement collectif petit")),
                ('investment_medium_multi_unit_heating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Investissement pour le chauffage - logement collectif moyen')),
                ('investment_medium_multi_unit_hot_water', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name="Investissement pour l'eau chaude - logement collectif moyen")),
                ('maintenance_medium_multi_unit_heating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Maintenance annuelle pour le chauffage - logement collectif moyen')),
                ('maintenance_medium_multi_unit_hot_water', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name="Maintenance annuelle pour l'eau chaude - logement collectif moyen")),
                ('provisions_medium_multi_unit_heating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Provisions pour grosses réparations pour le chauffage - logement collectif moyen')),
                ('provisions_medium_multi_unit_hot_water', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name="Provisions pour grosses réparations pour l'eau chaude - logement collectif moyen")),
                ('investment_large_multi_unit_heating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Investissement pour le chauffage - logement collectif grand')),
                ('investment_large_multi_unit_hot_water', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name="Investissement pour l'eau chaude - logement collectif grand")),
                ('maintenance_large_multi_unit_heating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Maintenance annuelle pour le chauffage - logement collectif grand')),
                ('maintenance_large_multi_unit_hot_water', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name="Maintenance annuelle pour l'eau chaude - logement collectif grand")),
                ('provisions_large_multi_unit_heating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Provisions pour grosses réparations pour le chauffage - logement collectif grand')),
                ('provisions_large_multi_unit_hot_water', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name="Provisions pour grosses réparations pour l'eau chaude - logement collectif grand")),
                ('energy', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='production_systems', to='energies.Energy', verbose_name="Type d'énergie")),
            ],
            options={
                'verbose_name': "Système de production d'énergie",
            },
        ),

    ]
