# Generated by Django 2.2 on 2019-05-02 14:54

from decimal import Decimal

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models
import core.models


class Migration(migrations.Migration):

    dependencies = [
        ('energies', '0005_energy_add_network'),
    ]

    operations = [
        migrations.CreateModel(
            name='EnergyVector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('vector', models.CharField(choices=[('oil_kg', 'fioul acheté au kg'), ('oil_l', 'fioul acheté au litre'), ('oil_kwh', 'fioul au kWh'), ('propane_kg', 'propane acheté au kg'), ('propane_m3', 'Propane acheté au m³'), ('propane_bottles', 'propane acheté en bouteilles de 13 kg'), ('propane_kwh', 'propane en kWh'), ('natural_gaz_m3', 'gaz naturel au m3'), ('natural_gaz_kwh', 'gaz naturel au kWh'), ('electricity_kwh', 'Electricité'), ('rcu_kwh', 'RCU (réseau de chaleur urbain)'), ('wood_logs_stere', 'bûches'), ('granules_t', 'granulés en vrac'), ('granules_bag', 'granulés en sac'), ('shredded_wood_t', 'bois déchiqueté à la tonne'), ('shredded_wood_map', 'bois déchiqueté au MAP'), ('shredded_wood_kwh', 'bois déchiqueté au kWh')], max_length=30, unique=True, verbose_name='Vecteur énergétique')),
                ('buying_unit', models.CharField( max_length=200, verbose_name="Unité d'achat")),
                ('unit', models.CharField(max_length=200, verbose_name='Unité')),
                ('pci', models.DecimalField(decimal_places=2, default=0, max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Pouvoir calorifique inférieur en kWh/unité')),
                ('order', models.IntegerField(db_index=True, default=0, verbose_name="Ordre d'affichage")),
                ('energy',models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vectors', to='energies.Energy', verbose_name="Type d'énergie")),
            ],
            options={
                'verbose_name': "Vecteurs d'énergie",
            },
        ),
    ]
