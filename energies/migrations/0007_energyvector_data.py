# Generated by Django 2.2 on 2019-05-02 14:54

from decimal import Decimal
from django.db import migrations


def load_data(apps, schema_editor):
    EnergyVector = apps.get_model("energies", "EnergyVector")
    Energy = apps.get_model("energies", "Energy")

    energies = {energy.identifier: energy for energy in Energy.objects.all()}

    EnergyVector.objects.bulk_create([
        EnergyVector(vector='oil_kg', buying_unit='kg de fioul', pci=Decimal("11.8"), unit="kWh / kg", energy=energies['oil'], order=10),
        EnergyVector(vector='oil_l', buying_unit='L de fioul', pci=Decimal("10.384"), unit="kWh / L", energy=energies['oil'], order=20),
        EnergyVector(vector='oil_kwh', buying_unit='kWh', pci=Decimal("1"), unit="kWh", energy=energies['oil'], order=30),
        EnergyVector(vector='propane_kg', buying_unit='kg de propane', pci=Decimal("12.88"), unit="kWh / kg", energy=energies['gaz_b1'], order=40),
        EnergyVector(vector='propane_m3', buying_unit='m3 de propane', pci=Decimal("7728"), unit="kWh / m³", energy=energies['gaz_b1'], order=50),
        EnergyVector(vector='propane_bottles', buying_unit='Bouteilles de 13 kg de propane', pci=Decimal("167"), unit="kWh / bouteilles de 13 kg", energy=energies['propane'], order=60),
        EnergyVector(vector='propane_kwh', buying_unit='kWh', pci=Decimal("1"), unit="kWh", energy=energies['propane'], order=70),
        EnergyVector(vector='natural_gaz_m3', buying_unit='m3 de gaz naturel', pci=Decimal("10"), unit="kWh / m³", energy=energies['gaz_b1'], order=80),
        EnergyVector(vector='natural_gaz_kwh', buying_unit='kWh', pci=Decimal("1"), unit="kWh", energy=energies['gaz_b1'], order=90),
        EnergyVector(vector='electricity_kwh', buying_unit='kWh', pci=Decimal("1"), unit="kWh", energy=energies['electricity'], order=100),
        EnergyVector(vector='rcu_kwh', buying_unit='kWh', pci=Decimal("1"), unit="kWh", energy=energies['network'], order=110),
        EnergyVector(vector='wood_logs_stere', buying_unit='stères de bois', pci=Decimal("1700"), unit="kWh / stère", energy=energies['wood'], order=120),
        EnergyVector(vector='granules_t', buying_unit='tonne', pci=Decimal("4700"), unit="kWh / t", energy=energies['bulk_granules'], order=130),
        EnergyVector(vector='granules_bag', buying_unit='nombres de sacs de granulés', pci=Decimal("70.5"), unit="kWh/sac de granulés", energy=energies['bag_granules'], order=140),
        EnergyVector(vector='shredded_wood_t', buying_unit='tonne', pci=Decimal("3500"), unit="kWh / t", energy=energies['shredded_wood'], order=150),
        EnergyVector(vector='shredded_wood_map', buying_unit='MAP', pci=Decimal("875"), unit="kWh / MAP", energy=energies['shredded_wood'], order=160),
        EnergyVector(vector='shredded_wood_kwh', buying_unit='kWh', pci=Decimal("1"), unit="kWh", energy=energies['shredded_wood'], order=170),
    ])


class Migration(migrations.Migration):

    dependencies = [
        ('energies', '0006_energyvector'),
    ]

    operations = [
        migrations.RunPython(load_data, reverse_code=migrations.RunPython.noop),
    ]
