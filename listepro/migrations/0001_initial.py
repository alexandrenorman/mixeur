# Generated by Django 2.2.10 on 2020-06-02 13:28

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import djgeojson.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='', max_length=32, verbose_name='Activités')),
                ('icon', models.CharField(choices=[('icon-collectif', 'Icône petit collectif'), ('icon-copro', 'Icône copropriété'), ('icon-maison', 'Icône Maison'), ('icon-tertiaire', 'Icône tertiaire'), ('icon-help', 'Icône par defaut')], default='icon-help', help_text='', max_length=32, verbose_name='Icônes')),
            ],
            options={
                'verbose_name': 'Activité',
                'verbose_name_plural': 'Activités',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CalculationMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('name', models.CharField(help_text='', max_length=128, verbose_name='Méthodes de calcul')),
            ],
            options={
                'verbose_name': 'Méthode de calcul',
                'verbose_name_plural': 'Méthodes de calcul',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='', max_length=32, verbose_name='Métiers')),
            ],
            options={
                'verbose_name': 'Métier',
                'verbose_name_plural': 'Métiers',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='KeyWord',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='', max_length=32, verbose_name='Mot clé')),
            ],
            options={
                'verbose_name': 'Mot-clé',
                'verbose_name_plural': 'Mots-clé',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='KeyWordCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('name', models.CharField(help_text='', max_length=32, verbose_name='Catégorie de mots clés')),
            ],
            options={
                'verbose_name': 'Catégorie de mots-clé',
                'verbose_name_plural': 'Catégories de mots-clé',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('name', models.CharField(help_text='', max_length=128, verbose_name='Groupes de missions')),
                ('help_text', models.TextField(blank=True, null=True, verbose_name="Texte de l'aide")),
            ],
            options={
                'verbose_name': 'Mission',
                'verbose_name_plural': 'Missions',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Professional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(help_text='', max_length=256, verbose_name='Raison sociale')),
                ('adress', models.CharField(help_text='', max_length=256, verbose_name='Adresse')),
                ('town', models.CharField(help_text='', max_length=256, verbose_name='Ville')),
                ('postcode', models.CharField(help_text='', max_length=6, verbose_name='Code postale')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, help_text='', max_length=254, verbose_name='Email')),
                ('url', models.URLField(blank=True, help_text='', verbose_name='Site web')),
                ('description', models.TextField(help_text='', max_length=1024, verbose_name='Description longue de votre activité')),
                ('short_description', models.TextField(blank=True, help_text='', max_length=256, null=True, verbose_name='Résumé de votre activité')),
                ('geom', djgeojson.fields.PointField(blank=True, help_text='', null=True, verbose_name="Localisation du professionel ou de l'entreprise")),
                ('personnal_key_words', models.CharField(blank=True, help_text='', max_length=256, verbose_name='Ajouter vos mots-clés')),
                ('is_in_progress', models.BooleanField(default=True, verbose_name='En cours de rédaction ?')),
                ('is_valid', models.BooleanField(default=False, verbose_name='Est valide ?')),
                ('activity_first', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='first_choice', to='listepro.Activity', verbose_name="Sélectionner votre domaine d' activité principale")),
                ('activity_fourth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fourth_choice', to='listepro.Activity', verbose_name="Sélectionner votre domaine d' activité principale")),
                ('activity_second', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='second_choice', to='listepro.Activity', verbose_name="Sélectionner votre domaine d' activité principale")),
                ('activity_third', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='third_choice', to='listepro.Activity', verbose_name="Sélectionner votre domaine d' activité principale")),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='listepro.Job', verbose_name='Sélectionner votre métier')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProfessionalImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(help_text='', max_length=256, verbose_name="Nom de l'image")),
                ('original', models.ImageField(blank=True, help_text='', upload_to='', verbose_name='Image originale')),
                ('cropped', models.ImageField(blank=True, help_text='', upload_to='', verbose_name='Image retaillé')),
                ('cropbox', models.CharField(blank=True, default='', max_length=512, verbose_name='Taille de la crop box')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='', max_length=32, verbose_name='Segment')),
                ('icon', models.CharField(choices=[('icon-renovation', 'Icône rénovation'), ('icon-neuve', 'Icône neuve'), ('icon-help', 'Icône par defaut')], default='icon-help', help_text='', max_length=32, verbose_name='Icônes')),
            ],
            options={
                'verbose_name': 'Segment de marché',
                'verbose_name_plural': 'Segments de marché',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='UsageIntegrated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('name', models.CharField(help_text='', max_length=128, verbose_name='Usages intégrés dans le calcul')),
            ],
            options={
                'verbose_name': 'Usage intégré',
                'verbose_name_plural': 'Usages intégrés',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SubMission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('name', models.CharField(help_text="Sélectionnez les missions que vous proposez pour lesquelles vous avez fourni                 des références auprès de l'espace info énergie", max_length=128, verbose_name='Missions proposés')),
                ('help_text', models.TextField(blank=True, null=True, verbose_name="Texte de l'aide")),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_missions', to='listepro.Mission', verbose_name='Groupe de mission')),
            ],
            options={
                'verbose_name': 'Sous mission',
                'verbose_name_plural': 'Sous missions',
                'ordering': ['mission__order', 'order'],
            },
        ),
        migrations.CreateModel(
            name='SegmentActivitySubMissionLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listepro.Activity')),
                ('segment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listepro.Segment')),
                ('sub_mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listepro.SubMission')),
            ],
            options={
                'verbose_name': 'Lien segment/activité/sous-missions',
                'verbose_name_plural': 'Liens segment/activité/sous-missions',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalProduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('production_name', models.CharField(help_text='', max_length=256, verbose_name='Nom de la réalisation')),
                ('place', models.CharField(help_text='', max_length=256, verbose_name='Lieu de la réalisation')),
                ('label', models.CharField(blank=True, help_text='', max_length=256, null=True, verbose_name='Label de la réalisation')),
                ('year', models.IntegerField(verbose_name='Année de la la réalisation')),
                ('consumption_before', models.IntegerField(blank=True, null=True, verbose_name='Consomation avant travaux')),
                ('consumption_after', models.IntegerField(blank=True, null=True, verbose_name='Consommation après travaux')),
                ('history', models.CharField(help_text='', max_length=512, verbose_name='Historique / contexte')),
                ('completed_mission', models.CharField(help_text='', max_length=512, verbose_name='Missions réalisées')),
                ('thermal_envelope', models.CharField(blank=True, help_text='', max_length=512, null=True, verbose_name='Enveloppe thermique')),
                ('system', models.CharField(blank=True, help_text='', max_length=512, null=True, verbose_name='Système')),
                ('airtightness_test_result', models.CharField(blank=True, help_text='', max_length=512, null=True, verbose_name="Résultat du test d'étanchéité à l'air")),
                ('other_information', models.CharField(blank=True, help_text='', max_length=512, null=True, verbose_name='Autres informations sur ce projet')),
                ('calculation_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='listepro.CalculationMethod', verbose_name='Méthode de calcul')),
                ('pictures', models.ManyToManyField(help_text='', to='listepro.ProfessionalImage', verbose_name="Image de la réalisation du professionel ou de l'entreprise")),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listepro.Professional')),
                ('usage_integrated', models.ManyToManyField(to='listepro.UsageIntegrated', verbose_name='Usages intégrés')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='professional',
            name='logo',
            field=models.ForeignKey(blank=True, help_text='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='listepro.ProfessionalImage', verbose_name="Logo de l'entreprise"),
        ),
        migrations.AddField(
            model_name='professional',
            name='primary_key_words',
            field=models.ManyToManyField(related_name='primary', to='listepro.KeyWord', verbose_name='Sélectionner vos Mots Clés'),
        ),
        migrations.AddField(
            model_name='professional',
            name='secondary_key_words',
            field=models.ManyToManyField(related_name='secondary', to='listepro.KeyWord', verbose_name='Sélectionner vos Mots Clés secondaire'),
        ),
        migrations.AddField(
            model_name='professional',
            name='segments',
            field=models.ManyToManyField(to='listepro.Segment', verbose_name="Sélectionner votre segment d'activité"),
        ),
        migrations.AddField(
            model_name='professional',
            name='sub_missions',
            field=models.ManyToManyField(help_text="Sélectionnez les missions que vous proposez pour lesquelles vous avez fourni                 des références auprès de l'espace info énergie", to='listepro.SubMission', verbose_name='Missions proposés'),
        ),
        migrations.AddField(
            model_name='professional',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professional', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur'),
        ),
        migrations.AddField(
            model_name='keyword',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key_words', to='listepro.KeyWordCategory', verbose_name='Catégorie du mot-clé'),
        ),
    ]
