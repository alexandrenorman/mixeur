# Generated by Django 2.2.3 on 2019-09-17 14:02

import autodiag_copro.models.copro
import autodiag_copro.models.diagnostic
import autodiag_copro.models.yearly_data
import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    replaces = [('autodiag_copro', '0003_auto_20190310_1633'), ('autodiag_copro', '0004_auto_20190321_1505'), ('autodiag_copro', '0005_auto_20190325_0942'), ('autodiag_copro', '0006_diagnostic_last_year'), ('autodiag_copro', '0007_auto_20190415_0941'), ('autodiag_copro', '0008_auto_20190423_2123'), ('autodiag_copro', '0009_auto_20190429_2307'), ('autodiag_copro', '0010_auto_20190430_1129'), ('autodiag_copro', '0011_auto_20190430_1234'), ('autodiag_copro', '0012_auto_20190522_0922')]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('autodiag_copro', '0002_auto_20190226_1610'),
    ]

    operations = [
        migrations.AlterField(
            model_name='diagnostic',
            name='comments',
            field=ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Commentaires'),
        ),
        migrations.RemoveField(
            model_name='copro',
            name='zipcode',
        ),
        migrations.AddField(
            model_name='copro',
            name='climatic_zone',
            field=models.ForeignKey(default=69, on_delete=django.db.models.deletion.PROTECT, to='autodiag_copro.ClimaticZoneRatio', verbose_name='Indice de zone climatique'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='copro',
            name='ref_dju_correction',
            field=models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Correction DJU de référence'),
        ),
        migrations.AddField(
            model_name='copro',
            name='with_dju_correction',
            field=models.BooleanField(default=False, verbose_name='Avec correction DJU ?'),
        ),
        migrations.AlterField(
            model_name='combustibleparams',
            name='params',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='combustible_params', to='autodiag_copro.Params', verbose_name='Paramètres'),
        ),
        migrations.AlterField(
            model_name='diagnostic',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnostic', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur créateur de la demande'),
        ),
        migrations.AlterField(
            model_name='yearlycombustibleparams',
            name='combustible_params',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yearly_combustible_params', to='autodiag_copro.CombustibleParams', verbose_name='Paramètres de combustible'),
        ),
        migrations.AlterField(
            model_name='yearlydata',
            name='copro',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yearly_data', to='autodiag_copro.Copro', verbose_name='Copropriété'),
        ),
        migrations.AlterField(
            model_name='copro',
            name='heating_individualisation_costs',
            field=models.DecimalField(decimal_places=2, max_digits=20, null=True, validators=[autodiag_copro.models.copro.validation_absolute_positive], verbose_name="Frais d'individualisation"),
        ),
        migrations.AlterField(
            model_name='copro',
            name='heating_maintenance_contract_P2_P3_cost',
            field=models.DecimalField(decimal_places=2, max_digits=20, null=True, validators=[autodiag_copro.models.copro.validation_absolute_positive], verbose_name='Montant du contrat de maintenance P2 + P3'),
        ),
        migrations.AlterField(
            model_name='copro',
            name='heating_maintenance_contract_P2_cost',
            field=models.DecimalField(decimal_places=2, max_digits=20, null=True, validators=[autodiag_copro.models.copro.validation_absolute_positive], verbose_name='Montant du contrat de maintenance P2'),
        ),
        migrations.AddField(
            model_name='diagnostic',
            name='last_year',
            field=models.PositiveSmallIntegerField(default=2019, validators=[autodiag_copro.models.diagnostic.validation_absolute_positive], verbose_name='Dernière année évaluée'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='altituderatio',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AlterField(
            model_name='climaticzoneratio',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AlterField(
            model_name='combustibleparams',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AlterField(
            model_name='copro',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AlterField(
            model_name='defaultcombustibleparams',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AlterField(
            model_name='defaultparams',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AlterField(
            model_name='defaultyearlycombustibleparams',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AlterField(
            model_name='defaultyearlyparams',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AlterField(
            model_name='diagnostic',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AlterField(
            model_name='params',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AlterField(
            model_name='yearlycombustibleparams',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AlterField(
            model_name='yearlydata',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AlterField(
            model_name='yearlyparams',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.RemoveField(
            model_name='copro',
            name='contact_email',
        ),
        migrations.RemoveField(
            model_name='copro',
            name='contact_first_name',
        ),
        migrations.RemoveField(
            model_name='copro',
            name='contact_last_name',
        ),
        migrations.RemoveField(
            model_name='copro',
            name='contact_phone',
        ),
        migrations.AddField(
            model_name='diagnostic',
            name='advisor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='advised_diagnostic', to=settings.AUTH_USER_MODEL, verbose_name='Dernier Conseiller intervenant sur le diagnostic'),
        ),
        migrations.AlterField(
            model_name='diagnostic',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnostic', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur associé à la demande'),
        ),
        migrations.AlterField(
            model_name='yearlydata',
            name='hot_water_consumption',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[autodiag_copro.models.yearly_data.validation_absolute_positive], verbose_name='Volume total - eau chaude'),
        ),
        migrations.AlterField(
            model_name='yearlydata',
            name='hot_water_consumption_charges',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[autodiag_copro.models.yearly_data.validation_absolute_positive], verbose_name='Consommation - eau chaude'),
        ),
        migrations.AlterField(
            model_name='yearlydata',
            name='hot_water_energy_charges',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[autodiag_copro.models.yearly_data.validation_absolute_positive], verbose_name='Énergie - eau chaude'),
        ),
        migrations.AlterField(
            model_name='yearlydata',
            name='water_consumption',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[autodiag_copro.models.yearly_data.validation_absolute_positive], verbose_name='Volume total - eau froide'),
        ),
        migrations.AlterField(
            model_name='yearlydata',
            name='water_consumption_charges',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[autodiag_copro.models.yearly_data.validation_absolute_positive], verbose_name='Consommation eau froide'),
        ),
        migrations.AlterField(
            model_name='yearlydata',
            name='dju_correction',
            field=models.PositiveSmallIntegerField(blank=True, null=True, validators=[autodiag_copro.models.yearly_data.validation_absolute_positive], verbose_name='Correction DJU'),
        ),
        migrations.AlterField(
            model_name='copro',
            name='heating_individualisation_costs',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[autodiag_copro.models.copro.validation_absolute_positive], verbose_name="Frais d'individualisation"),
        ),
        migrations.AlterField(
            model_name='copro',
            name='heating_maintenance_contract_P2_P3_cost',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[autodiag_copro.models.copro.validation_absolute_positive], verbose_name='Montant du contrat de maintenance P2 + P3'),
        ),
        migrations.AlterField(
            model_name='copro',
            name='heating_maintenance_contract_P2_cost',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[autodiag_copro.models.copro.validation_absolute_positive], verbose_name='Montant du contrat de maintenance P2'),
        ),
        migrations.AlterField(
            model_name='combustibleparams',
            name='combustible',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Fioul'), (2, 'Gaz de ville'), (3, 'Gaz propane'), (4, 'Réseau de chaleur'), (5, 'Électricité'), (6, 'Bois')], verbose_name='Combustible'),
        ),
        migrations.AlterField(
            model_name='copro',
            name='build_year',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Avant 1948'), (2, 'Entre 1948 et 1977'), (3, 'Entre 1977 et 2005'), (4, 'Après 2005')], verbose_name='Année de construction'),
        ),
        migrations.AlterField(
            model_name='copro',
            name='heating_combustible',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Fioul'), (2, 'Gaz de ville'), (3, 'Gaz propane'), (4, 'Réseau de chaleur'), (5, 'Électricité'), (6, 'Bois')], verbose_name='Combustible'),
        ),
        migrations.AlterField(
            model_name='copro',
            name='heating_individualisation_mode',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Surface'), (2, 'Compteurs de chaleur'), (3, 'Répartiteur de chaleur')], verbose_name="Mode d'individualisation des frais de chauffage"),
        ),
        migrations.AlterField(
            model_name='defaultcombustibleparams',
            name='combustible',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Fioul'), (2, 'Gaz de ville'), (3, 'Gaz propane'), (4, 'Réseau de chaleur'), (5, 'Électricité'), (6, 'Bois')], verbose_name='Combustible'),
        ),
    ]
